<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:NodeNetwork.Views"
                    xmlns:controls="clr-namespace:NodeNetwork.Views.Controls"
                    xmlns:viewModels="clr-namespace:NodeNetwork.ViewModels"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:converters="clr-namespace:NodeNetwork.Utilities.WPF"
                    xmlns:reactiveUi="http://reactiveui.net" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">
    <converters:BoolToVisibilityCollapse x:Key="booltocollapseconverter"></converters:BoolToVisibilityCollapse>
    <converters:InvertBoolToVisibilityCollapse x:Key="inversebooltocollapseconverter"></converters:InvertBoolToVisibilityCollapse>
    <ControlTemplate x:Key="TextBoxControlTemplate1" TargetType="{x:Type TextBox}">
        <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" dx:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\StandardControls\TextBox.xaml;23;12">
            <dx:DXBorder CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" EnableDPICorrection="{x:Null}" dx:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\StandardControls\TextBox.xaml;24;14"/>
            <dx:DXBorder x:Name="FocusedState" CornerRadius="6" BorderThickness="{TemplateBinding BorderThickness}" EnableDPICorrection="{x:Null}" Opacity="0" dx:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\StandardControls\TextBox.xaml;25;14">
                <dx:DXBorder.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="6"/>
                        <Setter Property="BorderBrush" Value="#FF0072C6"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Style>
                </dx:DXBorder.Style>
            </dx:DXBorder>
            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" dx:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\StandardControls\TextBox.xaml;26;14"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.75"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="PART_ContentHost" Value="0"/>
                <Setter Property="MinHeight" TargetName="Root" Value="44"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type views:NodeView}">
        <Setter Property="Background" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Control.Background}}"/>
        <Setter Property="Foreground" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="TitleFontFamily" Value="Segoe UI Semibold"/>
        <Setter Property="TitleFontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="#40000000"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="ArrowSize" Value="20"/>
        <Setter Property="EndpointsStackingOrientation" Value="Vertical"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="views:NodeView">
                    <controls:FillPanel x:Name="Container">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="{x:Static views:NodeView.SelectedVisualStatesGroup}">
                                <VisualState Name="{x:Static views:NodeView.SelectedState}">
                                    <Storyboard>

                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Duration="00:00:0.1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                        To="#2F80ED"></ColorAnimation>
                                        <!--<ThicknessAnimation Duration="0" To="-2" 
                                                            Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="{x:Static views:NodeView.UnselectedState}">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Duration="00:00:0.1" 
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                        To="#40000000"></ColorAnimation>
                                        <!--<ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"  Margin="10,0,10,0" Background="{TemplateBinding Background}" BorderThickness="2"  CornerRadius="{TemplateBinding CornerRadius}"
                                MinWidth="100" BorderBrush="{TemplateBinding BorderBrush}">
                            
                            <Grid>
                                <Thumb VerticalAlignment="Bottom"  Height="10" x:Name="ResizeVerticalThumb" Cursor="SizeNS">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <Thumb HorizontalAlignment="Right" Width="10" x:Name="ResizeHorizontalThumb" Cursor="SizeWE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <Thumb HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="10" Height="10" x:Name="ResizeDiagonalThumb" Cursor="SizeNWSE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <StackPanel>
                                    <Grid   Height="42"   >

                                        <DockPanel >
                                            <Image x:Name="HeaderIcon"  MaxWidth="{TemplateBinding ArrowSize}" MaxHeight="{TemplateBinding ArrowSize}" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,5"/>

                                            <Grid Margin="5,0,0,0">
                                                <Border  Width="24" Height="24"  Visibility="{Binding IsError,Converter={StaticResource booltocollapseconverter}}">
                                                    <Viewbox Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource RedIOS}" Data="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Border>
                                                <Border Visibility="{Binding IsError,Converter={StaticResource inversebooltocollapseconverter}}"   Width="24"   Height="24" >
                                                    <Viewbox Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource GreenIOS}" Data="M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Border>
                                            </Grid>
                                            <TextBlock x:Name="NameLabel"    TextWrapping="Wrap"  FontWeight="SemiBold"    
                                                       DockPanel.Dock="Left" HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center" TextAlignment="Center"
                                                   FontFamily="{TemplateBinding TitleFontFamily}"  FontSize="{TemplateBinding TitleFontSize}" Margin="10,0,0,0"  >

                                            </TextBlock>
                                            <controls:ArrowToggleButton  Visibility="Visible" Cursor="Hand" x:Name="CollapseButton" Width="{TemplateBinding ArrowSize}" Height="{TemplateBinding ArrowSize}" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="20,0,10,0"/>
                                        </DockPanel>
                                    </Grid>



                                    <ContentPresenter x:Name="LeadingControlPresenter" Style="{TemplateBinding LeadingControlPresenterStyle}"/>
                                    <Grid Margin="-1,0,-1,0">
                                        <DockPanel>
                                            <ItemsControl x:Name="InputsList" IsTabStop="False">
                                                <ItemsControl.Style>
                                                    <Style TargetType="ItemsControl">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                                <Setter Property="DockPanel.Dock" Value="Left"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ItemsControl.Style>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="viewModels:NodeInputViewModel">
                                                        <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                            <ItemsControl x:Name="OutputsList" IsTabStop="False">
                                                <ItemsControl.Style>
                                                    <Style TargetType="ItemsControl">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                                <Setter Property="DockPanel.Dock" Value="Right"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ItemsControl.Style>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="viewModels:NodeOutputViewModel">
                                                        <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DockPanel>
                                    </Grid>

                                    <ItemsControl x:Name="EndpointGroupsList" IsTabStop="False">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="viewModels:EndpointGroupViewModel">
                                                <reactiveUi:ViewModelViewHost ViewModel="{Binding}"
                                                                              HorizontalContentAlignment="Stretch"
                                                                              VerticalContentAlignment="Stretch"
                                                                              IsTabStop="False" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <ContentPresenter x:Name="TrailingControlPresenter" Style="{TemplateBinding TrailingControlPresenterStyle}"/>

                                    <Grid Height="10"></Grid>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </controls:FillPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
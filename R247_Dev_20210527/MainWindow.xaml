<dx:ThemedWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mahapp="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:halcon="clr-namespace:HalconDotNet;assembly=halcondotnet"
        xmlns:local="clr-namespace:NOVisionDesigner"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
        xmlns:usercontrols="clr-namespace:NOVisionDesigner.UserControls" 
        xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
        xmlns:dxbt="clr-namespace:DevExpress.Xpf.Bars.Themes;assembly=DevExpress.Xpf.Core.v19.2" 
        xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" 
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:Custom="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" 
        xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
        xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" x:Class="NOVisionDesigner.MainWindow"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        SnapsToDevicePixels="True"         
        TextOptions.TextFormattingMode="Ideal"  d:DesignWidth="1000"
        ShowActivated="True"
        ContentRendered="MainWD_ContentRendered"    
         FontSize="14" WindowState="Maximized" 
        WindowStyle="None"
        ShowTitle="False"
        ShowInTaskbar="True"
        ShowGlow="False"
        Padding="0"
        Title="MainWindow" x:Name="MainWD" Loaded="MainWD_Loaded">
    <dx:ThemedWindow.Resources>
        <Style TargetType="Button" x:Key="ButtonOpenAIDarkMode">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="#222222" CornerRadius="10">
                            <ContentPresenter Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="White"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#444444" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#222222" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#555555" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#222222" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="ButtonOpenAI">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="White" CornerRadius="10">
                            <ContentPresenter Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="LightBlue" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="White" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="LightGray" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="White" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type dxb:BarButtonItem}" >
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontSize="14"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=BarContentStyle,IsThemeIndependent=True}" TargetType="{x:Type ContentControl}">
            
        </Style>
        <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=MainMenuContentStyle, IsThemeIndependent=True}" TargetType="{x:Type ContentControl}"/>
        <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=StatusBarContentStyle, IsThemeIndependent=True}" TargetType="{x:Type ContentControl}"/>
        <DataTemplate x:Key="CustomNotificationTemplate">
            <Border Background="White" BorderThickness="1" BorderBrush="Black">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock HorizontalAlignment="Left" Text="{Binding Caption}" Foreground="Blue" FontSize="20" FontWeight="Bold" Margin="5"/>
                    <TextBlock HorizontalAlignment="Center" Text="{Binding Content}" Foreground="Black" FontSize="16" Margin="3"/>
                </StackPanel>
            </Border>
        </DataTemplate>
        <ControlTemplate x:Key="CheckBoxControlTemplate1" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Cursor="Hand">
                <Rectangle x:Name="checkBoxBorder" Grid.Column="0"   StrokeThickness="0" Fill="{TemplateBinding Background}"  Width="Auto" Height="Auto"  Stroke="{TemplateBinding BorderBrush}">

                </Rectangle>
                <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                    <Viewbox Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-8,0,8,0">
                        <Canvas Width="24" Height="24">
                            <Path x:Name="icon" Fill="white" Data="M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13" >
                                <Path.Effect>
                                    <DropShadowEffect Color="White" BlurRadius="3" ShadowDepth="0" ></DropShadowEffect>
                                </Path.Effect>
                            </Path>
                        </Canvas>
                    </Viewbox>
                    <TextBlock x:Name="check_text"  Grid.Column="1" Text="OFFLINE" FontWeight="SemiBold"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>


                </StackPanel>



            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" TargetName="checkBoxBorder" Value="0.9"/>

                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="Stroke" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>-->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" TargetName="checkBoxBorder" Value="0.8"/>
                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>-->
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Fill" TargetName="checkBoxBorder" Value="#ff6215"></Setter>
                    <!--<Setter Property="Stroke" TargetName="checkBoxBorder" Value="{DynamicResource OrangeIOS}"/>-->
                    <Setter Property="Text" TargetName="check_text" Value="RUNNING"></Setter>
                    <Setter Property="Foreground" TargetName="check_text" Value="WhiteSmoke"></Setter>
                    <!--<Setter Property="Data" TargetName="icon" Value="M8,5.14V19.14L19,12.14L8,5.14Z"></Setter>-->
                    <Setter Property="Fill" TargetName="icon" Value="WhiteSmoke"></Setter>
                    <!--<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>-->
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Text" TargetName="check_text" Value="STOPPED"></Setter>
                    <Setter Property="Foreground" TargetName="check_text" Value="#A5FFFFFF"></Setter>
                    <Setter Property="Fill" TargetName="checkBoxBorder" Value="#20FFFFFF"/>
                    <Setter Property="Stroke" TargetName="checkBoxBorder" Value="#A0FFFFFF"/>
                    <Setter Property="StrokeThickness" TargetName="checkBoxBorder" Value="1"/>
                    <!--<Setter Property="Data" TargetName="icon" Value="M18,18H6V6H18V18Z"></Setter>-->
                    <Setter Property="Fill" TargetName="icon" Value="#A5FFFFFF"></Setter>
                    <!--<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Cursor="Hand">
                <Rectangle x:Name="btnBorder" Grid.Column="0"  StrokeThickness="2" Fill="{TemplateBinding Background}"  Width="Auto" Height="Auto"  Stroke="{TemplateBinding BorderBrush}">

                </Rectangle>
                <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                    <TextBlock x:Name="check_text" Grid.Column="1" Text="{TemplateBinding Property=Content}" FontWeight="SemiBold"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>


                </StackPanel>



            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" TargetName="btnBorder" Value="0.9"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="btnBorder" Value="#FFE6E6E6"/>
                    <Setter Property="Stroke" TargetName="btnBorder" Value="#FFBCBCBC"/>
                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>-->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" TargetName="btnBorder" Value="0.8"/>
                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>-->
                </Trigger>
                
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type dxdo:LayoutPanel}">
            <Setter Property="BindableName" Value="{Binding Id}" />
        </Style>
        <ControlTemplate x:Key="{dxbt:BarControlThemeKey IsThemeIndependent=True, ResourceKey=BarTemplate}" TargetType="{x:Type ContentControl}">
            <Border x:Name="Background">
                <ContentPresenter/>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="{dxbt:BarContainerControlThemeKey IsThemeIndependent=True, ResourceKey=BackgroundTemplate}" TargetType="{x:Type ContentControl}">
            <Border x:Name="Background">
                <Border.Background>
                    <SolidColorBrush Color="Transparent" Opacity="0"/>
                </Border.Background>
                <ContentPresenter Content="{TemplateBinding Content}"/>
            </Border>
        </ControlTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FF212020"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#60BEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </dx:ThemedWindow.Resources>

    <dxmvvm:Interaction.Behaviors>
       
        <dxmvvm:NotificationService x:Name="ServiceWithCustomNotifications" CustomNotificationTemplate="{StaticResource CustomNotificationTemplate}" CustomNotificationPosition="BottomRight" />
    </dxmvvm:Interaction.Behaviors>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedWindowCommand}"  CommandParameter="{Binding ElementName=MainWD}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid x:Name="MainGrid" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="74"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Grid_Sub" Grid.Row="1" >
            <dxdo:DockLayoutManager x:Name="docklayout"  dx:DXSerializer.StoreLayoutMode="All" DockItemClosed="docklayout_DockItemClosed" 
                                    
                                    ClosedPanelsBarVisibility="Auto" 
                                    ClosingBehavior="ImmediatelyRemove"
                                    ItemsSource="{Binding VisionManager.VisionModels, UpdateSourceTrigger=PropertyChanged}" 
                                    
  ClosedPanelsBarPosition="Bottom" DockItemClosing="docklayout_DockItemClosing">


                <dxdo:DockLayoutManager.Resources>
                    <Style x:Key="BaseStyle"
                       TargetType="{x:Type dxdo:LayoutPanel}">

                        <Setter Property="CaptionTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="14" Text="{Binding Caption}"/>

                                    </StackPanel>

                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ControlBoxContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <ve:DockPaneControlBoxButton Margin="0,0,4,0" Cursor="Hand" ToolTip="Rename" Command="{Binding DataContext.ChangeCaptionCommand, RelativeSource={RelativeSource AncestorType={x:Type dxdo:LayoutPanel}}}">
                                            <Viewbox Width="14" Height="14">
                                                <Canvas Width="24" Height="24">
                                                    <Path Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                                      Data="M17,7H22V17H17V19A1,1 0 0,0 18,20H20V22H17.5C16.95,22 16,21.55 16,21C16,21.55 15.05,22 14.5,22H12V20H14A1,1 0 0,0 15,19V5A1,1 0 0,0 14,4H12V2H14.5C15.05,2 16,2.45 16,3C16,2.45 16.95,2 17.5,2H20V4H18A1,1 0 0,0 17,5V7M2,7H13V9H4V15H13V17H2V7M20,15V9H17V15H20Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </ve:DockPaneControlBoxButton>
                                        <ve:DockPaneControlBoxButton Margin="0,0,4,0" Cursor="Hand" ToolTip="Display setting" Command="{Binding DataContext.OpenDisplaySettingCommand, RelativeSource={RelativeSource AncestorType={x:Type dxdo:LayoutPanel}}}">
                                            <Viewbox Width="14" Height="14">
                                                <Canvas Width="24" Height="24">
                                                    <Path Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                                      Data="M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 
                                                          0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 
                                                          9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 
                                                          4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 
                                                          2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 
                                                          9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 
                                                          16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 
                                                          21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 
                                                          19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </ve:DockPaneControlBoxButton>

                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <usercontrols:SubCamera DataContext="{Binding .}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type dxdo:LayoutPanel}" />
                    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type dxdo:DocumentPanel}" />
                </dxdo:DockLayoutManager.Resources>

                <dxdo:MVVMHelper.LayoutAdapter>
                    <local:MVVMSerializationLayoutAdapter/>
                </dxdo:MVVMHelper.LayoutAdapter>


            </dxdo:DockLayoutManager>
        </Grid>
        <Border   Background="{DynamicResource BlackIOS}" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Background="#20000000">
                    <Image Height="24" HorizontalAlignment="Left" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Center" Margin="5,0,0,0" Source="Icons/New Ocean Group logo-32_cut.png"/>
                    <Label x:Name="lb_version" VerticalAlignment="Center" HorizontalAlignment="Center" Content="" FontWeight="SemiBold" FontFamily="Segoe UI Semibold" TextOptions.TextHintingMode="Animated" ContentStringFormat="NOVISION DESIGNER {0}">
                        <Label.Foreground>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFEEEEEE" Offset="0"/>
                                <GradientStop Color="#FFB4B4B4" Offset="1"/>
                            </LinearGradientBrush>
                        </Label.Foreground>
                    </Label>
                    <dxb:BarManager x:Name="bar_file"   Grid.RowSpan="1" Margin="36,2,0,0" HorizontalAlignment="Left"   
 >


                        <dxb:BarManager.Bars  >
                            <dxb:Bar Caption="File"  IsMainMenu="True" GlyphSize="Large">
                                <dxb:BarSubItem x:Name="biFile" Content="File">
                                    <dxb:BarButtonItem TextBlock.FontSize="14"  x:Name="biFileOpen" Content="Open" Glyph="{dx:DXImage 'SvgImages/Actions/Open.svg'}" Command="{Binding JobCommand}" />
                                    <dxb:BarButtonItem x:Name="biFileNew" Content="New" Glyph="{dx:DXImage 'SvgImages/Actions/New.svg'}"  Command="{Binding CreateJobCommand}" />
                                    <dxb:BarButtonItem  Content="Save" Glyph="{dx:DXImage 'SvgImages/HybridDemoIcons/BottomPanel/HybridDemo_Save.svg'}"  Command="{Binding SaveCommand}" />
                                    <dxb:BarButtonItem  Content="Save as" Glyph="{dx:DXImage 'SvgImages/Edit/Copy.svg'}"  Command="{Binding SaveACopyCommand}" />
                                </dxb:BarSubItem>
                                
                                
                                <!--<dxb:BarSubItem Content="Windows">
                                    <dxb:BarButtonItem Content="Load Layout"  ItemClick="btn_controller_Click_1" Glyph="{dx:DXImage Images/Appearance/LoadTheme_16x16.png}"/>
                                    <dxb:BarButtonItem Content="Save Layout" ItemClick="btn_save_layout_click" Glyph="{dx:DXImage Images/Appearance/SaveTheme_16x16.png}" />
                                    <dxb:BarSubItem Content="Layouts" ItemLinksSource="{Binding ElementName=docklayout,Path=ClosedPanels}">
                                        <dxb:BarSubItem.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarButtonItem 
                                    Content="{Binding Caption}" ItemClick="BarButtonItem_ItemClick"
                                    />
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxb:BarSubItem.ItemTemplate>
                                    </dxb:BarSubItem>
                                </dxb:BarSubItem>-->
                                <dxb:BarSubItem Content="Tools">

                                    <dxb:BarButtonItem Glyph="{dx:DXImage 'SvgImages/XAF/ModelEditor_Settings.svg'}"    Content="Options"  ItemClick="btn_show_app_setting_click" >
                                        
                                    </dxb:BarButtonItem>
                                    <dxb:BarButtonItem Glyph="{dx:DXImage 'SvgImages/Spreadsheet/SelectDataSource.svg'}"    Content="Tag Manager"  ItemClick="btn_show_tag_manager_click" >

                                    </dxb:BarButtonItem>
                                    <dxb:BarButtonItem Glyph="{dx:DXImage 'SvgImages/Outlook Inspired/EmployeeTaskList.svg'}"    Content="Log"  ItemClick="btn_show_log_click" >

                                    </dxb:BarButtonItem>
                                    <dxb:BarButtonItem Glyph="{dx:DXImage 'SvgImages/Spreadsheet/RemoveSheet.svg'}"    Content="Close remote"  ItemClick="btn_close_remote_Click" >

                                    </dxb:BarButtonItem>
                                    <dxb:BarButtonItem Glyph="{dx:DXImage 'SvgImages/Outlook Inspired/NotStarted.svg'}"    Content="Run on startup"  ItemClick="btn_start_startup" >

                                    </dxb:BarButtonItem>
                                </dxb:BarSubItem>
                                <dxb:BarSubItem Content="Help">

                                    <dxb:BarButtonItem x:Name="btn_check_for_update" Content="Check for updates"  ItemClick="btn_check_for_update_ItemClick" />

                                </dxb:BarSubItem>
                            </dxb:Bar>


                        </dxb:BarManager.Bars>
                    </dxb:BarManager>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Top">

                        <Label x:Name="txt_user_name" Content="{Binding UserViewModel.CurrentUser.Name}" Background="{DynamicResource YellowIOS}"  
                               FontWeight="SemiBold" Foreground="Black" Margin="0,4" Padding="5,3"/>

                        <Label x:Name="txt_user_type" Content="{Binding UserViewModel.CurrentUser.Role.Name}" 
                               Foreground="White" Background="{DynamicResource BlueIOS}" FontWeight="SemiBold" Margin="0,4,5,4" Padding="5,3" />

                        <Button x:Name="btn_minimize"  Grid.Row="1" Click="btn_minimize_Click"  Background="Transparent" BorderBrush="{x:Null}" BorderThickness="0" Height="32" Style="{DynamicResource ButtonGlowNewNoBorder}">
                            <Path Data="M20,14H4V10H20" Stretch="Fill" Fill="{DynamicResource NodeButtonBorderBrush}" StrokeThickness="0" Width="10" Height="2" VerticalAlignment="Bottom" Margin="0,8,0,0" />
                        </Button>
                        <Button x:Name="btn_close_application" Grid.Row="1" Click="btn_expander_Click"  Background="Transparent" BorderBrush="{x:Null}" BorderThickness="0" Height="32"  Style="{DynamicResource ButtonGlowNewNoBorder}" Width="32">
                            <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="{DynamicResource NodeButtonBorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Width="10" Height="10" />
                        </Button>

                    </StackPanel>
                </Grid>

                <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" VerticalAlignment="Bottom" Height="1" Opacity="0.2" />-->
                <StackPanel Grid.Row="1"  HorizontalAlignment="Left" Orientation="Horizontal">
                    <CheckBox x:Name="btn_online" BorderThickness="0"    Padding="16,4" IsChecked="{Binding IsOnline}"   
                              Content="Online" Grid.Column="4" Template="{DynamicResource CheckBoxControlTemplate1}"
                              Command="{Binding OnlineCommand}" CommandParameter="{Binding ElementName=MainWD}" 
                              MinWidth="80" FontSize="14" Foreground="White"    Margin="4" />
                    <Button x:Name="btn_reset_counter" Cursor="Hand" 
                            Style="{DynamicResource ButtonDarkMode}"
                            BorderThickness="1"
                            BorderBrush="White"
                            Margin="0,2"
                           
                            Content="RESET COUNTERS"
                            Command="{Binding ResetCommand}"  
                             />
                </StackPanel>
                <StackPanel x:Name="Grid_Menu" Grid.Row="1"  HorizontalAlignment="Center" Orientation="Horizontal">
                    <dx:DropDownButton Cursor="Hand"  Background="Transparent"   VerticalAlignment="Center" FontSize="14" Height="32" >
                        <dx:DropDownButton.Content >
                            <StackPanel Orientation="Horizontal"   VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                                <Label 
                                           
                                   
                                    VerticalAlignment="Stretch" 
                                           Content="Job" FontSize="14"
                                            Padding="0,4,4,0"/>
                                <Border  CornerRadius="4" Padding="4,4">
                                    <TextBlock   
                                           
                                           VerticalAlignment="Center"  FontWeight="SemiBold" FontSize="14" 
                                           HorizontalAlignment="Center" Text="{Binding CurrentJob.JobName}"/>
                                </Border>
                                
                            </StackPanel>

                        </dx:DropDownButton.Content>
                        <StackPanel>
                            <Button x:Name="btn_jobControl"  Background="Transparent" HorizontalContentAlignment="Left" Height="28" BorderThickness="0"  Grid.Column="6" Command="{Binding JobCommand}" MinWidth="80"  Margin="2">

                                <StackPanel Orientation="Horizontal">


                                    <Viewbox HorizontalAlignment="Left" Width="15" Height="15" Margin="5,0" VerticalAlignment="Center">
                                        <Path Data="M6.1,10L4,18V8H21A2,2 0 0,0 19,6H12L10,4H4A2,2 0 0,0 2,6V18A2,2 0 0,0 4,20H19C19.9,20 20.7,19.4 20.9,18.5L23.2,10H6.1M19,18H6L7.6,12H20.6L19,18Z"  HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Stretch="Fill" Width="20" Fill="{StaticResource  Button.Static.Background}" />
                                    </Viewbox>
                                    <TextBlock Text="Open" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0"  />
                                </StackPanel>
                            </Button>
                            <Button x:Name="btn_create" HorizontalContentAlignment="Left" Background="Transparent" Height="28" BorderThickness="0"  Grid.Column="6" Command="{Binding CreateJobCommand}" MinWidth="80"  Margin="2">

                                <StackPanel Orientation="Horizontal">


                                    <Viewbox HorizontalAlignment="Left" Width="15" Height="15" Margin="5,0" VerticalAlignment="Center">
                                        <Path Data="M12 12H14V10H16V12H18V14H16V16H14V14H12V12M22 8V18C22 19.11 21.11 20 20 20H4C2.89 20 2 19.11 2 18V6C2 4.89 2.89 4 4 4H10L12 6H20C21.11 6 22 6.89 22 8M20 8H4V18H20V8Z"  HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Stretch="Fill" Width="20" 
                                              Fill="{StaticResource Button.Static.Background}" />
                                    </Viewbox>
                                    <TextBlock Text="Create" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0"  />
                                </StackPanel>
                            </Button>

                            <Button x:Name="btn_save" HorizontalContentAlignment="Left" Background="Transparent"  Height="28" BorderThickness="0"  Grid.Column="5" Command="{Binding SaveCommand}" MinWidth="80"  Margin="2">
                                <StackPanel Orientation="Horizontal">


                                    <Viewbox HorizontalAlignment="Left" Width="15" Height="15" Margin="5,0" VerticalAlignment="Center">
                                        <Path Data="M17 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V7L17 3M19 19H5V5H16.17L19 7.83V19M12 12C10.34 12 9 13.34 9 15S10.34 18 12 18 15 16.66 15 15 13.66 12 12 12M6 6H15V10H6V6Z"  HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Stretch="Fill" Width="20" 
                                              Fill="{StaticResource Button.Static.Background}" />
                                    </Viewbox>
                                    <TextBlock Text="Save" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0"  />
                                </StackPanel>
                            </Button>

                            <Button x:Name="btn_save_as" HorizontalContentAlignment="Left" Background="Transparent" Height="28" BorderThickness="0"  Grid.Column="5" Command="{Binding SaveACopyCommand}" MinWidth="80"  Margin="2">
                                <StackPanel Orientation="Horizontal">


                                    <Viewbox HorizontalAlignment="Left" Width="15" Height="15" Margin="5,0" VerticalAlignment="Center">
                                        <Path Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"  HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Stretch="Fill" Width="20" 
                                              Fill="{StaticResource Button.Static.Background}" />
                                    </Viewbox>
                                    <TextBlock Text="Save a copy" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0"  />
                                </StackPanel>
                            </Button>
                        </StackPanel>



                    </dx:DropDownButton>

                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <!--<dx:SimpleButton Content="Save Job" HorizontalAlignment="Left" Height="22" Margin="105,5,0,0" VerticalAlignment="Top" Width="97" Click="btn_save_job_Click"/>-->

                </StackPanel>
                <StackPanel Grid.Row="1"  HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="btn_login" Cursor="Hand" Content="LOGIN"   Padding="16,4" 
                            BorderThickness="1"
                            BorderBrush="White"
                            Style="{DynamicResource ButtonDarkMode}"
                             ToolTip="Login" Visibility="Visible"  Command="{Binding LoginCommand}" 
                            CommandParameter="{Binding ElementName=MainWD}"   FontSize="14" Margin="2" >
                        
                    </Button>
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <Button x:Name="btn_logout" Cursor="Hand" Padding="16,4" 
                            BorderThickness="1"
                            BorderBrush="White"
                            Style="{DynamicResource ButtonDarkMode}"
                            Content="LOGOUT" ToolTip="Logout" Visibility="Collapsed" Command="{Binding LogoutCommand}" 
                            CommandParameter="{Binding ElementName=MainWD}"   FontSize="14" Margin="2" >
                        

                    </Button>
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <!--<Button x:Name="btn_user" Style="{DynamicResource ButtonStyle1}"  Grid.Column="1" Command="{Binding CreateUserCommand}"  FontSize="14" Margin="2">



                        <Viewbox Width="20" Height="20">
                            <Canvas Width="24" Height="24">
                                <Path Fill="Black" Data="M10 4A4 4 0 0 0 6 8A4 4 0 0 0 10 12A4 4 0 0 0 14 8A4 4 0 0 0 10 4M17 12C16.87 12 16.76 12.09 16.74 12.21L16.55 13.53C16.25 13.66 15.96 13.82 15.7 14L14.46 13.5C14.35 13.5 14.22 13.5 14.15 13.63L13.15 15.36C13.09 15.47 13.11 15.6 13.21 15.68L14.27 16.5C14.25 16.67 14.24 16.83 14.24 17C14.24 17.17 14.25 17.33 14.27 17.5L13.21 18.32C13.12 18.4 13.09 18.53 13.15 18.64L14.15 20.37C14.21 20.5 14.34 20.5 14.46 20.5L15.7 20C15.96 20.18 16.24 20.35 16.55 20.47L16.74 21.79C16.76 21.91 16.86 22 17 22H19C19.11 22 19.22 21.91 19.24 21.79L19.43 20.47C19.73 20.34 20 20.18 20.27 20L21.5 20.5C21.63 20.5 21.76 20.5 21.83 20.37L22.83 18.64C22.89 18.53 22.86 18.4 22.77 18.32L21.7 17.5C21.72 17.33 21.74 17.17 21.74 17C21.74 16.83 21.73 16.67 21.7 16.5L22.76 15.68C22.85 15.6 22.88 15.47 22.82 15.36L21.82 13.63C21.76 13.5 21.63 13.5 21.5 13.5L20.27 14C20 13.82 19.73 13.65 19.42 13.53L19.23 12.21C19.22 12.09 19.11 12 19 12H17M10 14C5.58 14 2 15.79 2 18V20H11.68A7 7 0 0 1 11 17A7 7 0 0 1 11.64 14.09C11.11 14.03 10.56 14 10 14M18 15.5C18.83 15.5 19.5 16.17 19.5 17C19.5 17.83 18.83 18.5 18 18.5C17.16 18.5 16.5 17.83 16.5 17C16.5 16.17 17.17 15.5 18 15.5Z" />
                            </Canvas>
                        </Viewbox>

                    </Button>-->
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <Button x:Name="btn_privilege" Cursor="Hand" Padding="16,4" 
                            BorderThickness="1"
                            BorderBrush="White"
                            Style="{DynamicResource ButtonDarkMode}" 
                            Content="USERS"   Command="{Binding PrivilegeCommand}"  FontSize="14" Margin="2">
                        
                    </Button>
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->
                    <Button x:Name="btn_statistics" Cursor="Hand" Padding="16,4" 
                            BorderThickness="1"
                            BorderBrush="White"
                            Style="{DynamicResource ButtonDarkMode}" 
                            Content="HMI"  
                            Command="{Binding StatisticsCommand}" CommandParameter="{Binding ElementName=MainWD}"  FontSize="14" Margin="2">
                        
                    </Button>
                    <!--<Rectangle Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Width="1" Opacity="0.2" />-->

                    <Button x:Name="btn_add_new_vision" Cursor="Hand"  Padding="16,4" 
                            
                            BorderThickness="1"
                            BorderBrush="White"
                            Style="{DynamicResource ButtonDarkMode}" 
                            Content="ADD"  Command="{Binding AddVisionModelCommand}" FontSize="14" Margin="2">
                        
                    </Button>

                </StackPanel>
            </Grid>

        </Border>

        
        <Grid Background="{DynamicResource BlackIOS}" Grid.Row="2">
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                <Button  x:Name="btn_status" HorizontalAlignment="Stretch" Style="{DynamicResource ButtonGlowNewNoBorder}" Click="btn_status_Click"
                        
                        BorderThickness="0"
                        VerticalAlignment="Stretch" Width="25"  Padding="2">
                    <Viewbox Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Canvas Width="24" Height="24">
                            <Path Fill="White" Data="M16.5 11L13 7.5L14.4 6.1L16.5 8.2L20.7 4L22.1 5.4L16.5 11M11 7H2V9H11V7M21 13.4L19.6 12L17 14.6L14.4 12L13 13.4L15.6 16L13 18.6L14.4 20L17 17.4L19.6 20L21 18.6L18.4 16L21 13.4M11 15H2V17H11V15Z" />
                        </Canvas>
                    </Viewbox>
                </Button>
                <StackPanel x:Name="status_bar"  Orientation="Horizontal" >
                    <TextBlock Text="{Binding Status.Time}" VerticalAlignment="Center" Foreground="White" Margin="8,2"/>
                    <TextBlock Text="{Binding Status.Type}" VerticalAlignment="Center" Foreground="White" Margin="8,2"/>
                    <TextBlock Text="{Binding Status.Message}" VerticalAlignment="Center" Foreground="White" Margin="8,2"/>
                </StackPanel>

            </StackPanel>

        </Grid>
        <!--<dxe:FlyoutControl HorizontalOffset="20"
            x:Name="flyoutControl"
            PlacementTarget="{Binding ElementName=btn_status}"
            FontSize="16"
            AllowMoveAnimation="False"
            FontFamily="Segoe UI Light"
           
            StaysOpen="True"
            IsOpen="True">
            <dxe:FlyoutControl.Settings>
                <dxe:FlyoutSettings ShowIndicator="True"  Placement="Top"></dxe:FlyoutSettings>
            </dxe:FlyoutControl.Settings>
            <Grid >
                <ListBox ItemsSource="{Binding StatusHistory}" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel x:Name="status_bar"  Orientation="Horizontal" >
                                <TextBlock Text="{Binding Time}" VerticalAlignment="Center"  Margin="8,2"/>
                                <TextBlock Text="{Binding Type}" VerticalAlignment="Center"  Margin="8,2"/>
                                <TextBlock Text="{Binding Message}" VerticalAlignment="Center"  Margin="8,2"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </dxe:FlyoutControl>-->

        <dx:WaitIndicator x:Name="loading" Grid.RowSpan="4" HorizontalAlignment="Center" 
                          
                          DeferedVisibility="{Binding Loading}" 
                          Content="{Binding LoadingMessage}" VerticalAlignment="Center" />
    </Grid>
</dx:ThemedWindow>

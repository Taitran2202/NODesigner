<UserControl x:Class="NOVisionDesigner.Designer.Accquisition.Windows.UniquaView.UniquaLiveView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NOVisionDesigner.Designer.Accquisition.Windows.UniquaView" 
             xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
             xmlns:local1="clr-namespace:NOVisionDesigner.Designer.ValueConverters"
              xmlns:Misc="clr-namespace:NOVisionDesigner.Designer.Misc" xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800" Background="White" FontSize="14">
    <UserControl.Resources>
        <Style TargetType="Label" x:Key="tagstyle">
            <Setter Property="Background" Value="{DynamicResource GreenIOS}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource GreenIOS}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <dx:BoolInverseConverter x:Key="BoolInverseConverter"/>
        <local1:BoolToVisibilityCollapse x:Key="BoolToVisibilityCollapse"/>
        <Misc:StringToColor x:Key="StringToColor"/>
        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="#FF4E4E4E"></Setter>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand" BorderThickness="{TemplateBinding BorderThickness}"  >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FF007AFF"/>
                                        <Setter Property="Foreground" Value="White"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>
    </UserControl.Resources>
    <Border BorderThickness="1" BorderBrush="LightGray">
        
    
        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        
        <Rectangle Width="1"  Margin="0" Fill="#FFE5E5E5" HorizontalAlignment="Right"></Rectangle>
        <Grid x:Name="grid_parameters" >
            
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Margin="16" HorizontalAlignment="Left" Orientation="Horizontal"  VerticalAlignment="Center" >
                    <Button x:Name="btn_start"  Content="Start live" Command="{Binding StartLiveCommand}" Visibility="{Binding IsLive,Converter={StaticResource BoolToVisibilityCollapse}}" FontSize="14"  Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="14,8,14,8" Background="{DynamicResource BlackBrush}" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource ButtonDarkMode}"/>
                    <Button x:Name="btn_stop"  Content="Stop live" Command="{Binding StopLiveCommand}" Visibility="{Binding IsLive,Converter={StaticResource BoolToVisibilityConverter}}" FontSize="14"  Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="14,8,14,8" Background="{DynamicResource RedIOS}" BorderBrush="{x:Null}" Foreground="{DynamicResource WhiteBrush}" Style="{DynamicResource ButtonDarkMode}" />
                </StackPanel>
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <StackPanel x:Name="stack_eval_parameter" >
                    <StackPanel Margin="16,0,16,16" Orientation="Vertical">
                        <StackPanel  >
                            <Label  FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Left" 
                                    VerticalAlignment="Center" Margin="0,0,0,0">Accquisition mode</Label>
                            <Rectangle Height="4"></Rectangle>
                            <ListBox SelectedItem="{Binding AcquisitionMode}" IsEnabled="{Binding IsLive,Converter={StaticResource BoolInverseConverter}}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="2"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Background" Value="WhiteSmoke" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="Background" Value="{DynamicResource BlueIOS}" />
                                                <Setter Property="Foreground" Value="White" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True" >
                                                <Setter Property="Background" Value="{DynamicResource BlueIOS}" />
                                                <Setter Property="Foreground" Value="White" />
                                            </Trigger>

                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.Items>
                                    <local:AcquisitionMode>FreeRunning</local:AcquisitionMode>
                                    <local:AcquisitionMode>EncoderOnly</local:AcquisitionMode>
                                    <local:AcquisitionMode>TriggerOnly</local:AcquisitionMode>
                                    <local:AcquisitionMode>TriggerEncoder</local:AcquisitionMode>
                                </ListBox.Items>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Label   Height="Auto"  FontFamily="Segoe UI" 
                                                    Background="{Binding RelativeSource={RelativeSource 
                                                            AncestorType={x:Type ListBoxItem}}, Path=Background }"
                                                
                                                    Foreground="{Binding RelativeSource={RelativeSource 
                                                            AncestorType={x:Type ListBoxItem}}, Path=Foreground }"
                                                FontWeight="SemiBold" Padding="10,6" 
                                                Margin="1" ToolTip="Move Image" Content="{Binding}"  >

                                        </Label>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="2" Rows="2"></UniformGrid>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                            <ItemsControl>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Label Content="{Binding Name,FallbackValue=Name}"></Label>
                                            <Label Content="{Binding Count,FallbackValue=100}"></Label>
                                        </Grid>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>

                            </ItemsControl>
                        </StackPanel>



                    </StackPanel>
                    <Rectangle Height="1"  Margin="0" Fill="#FFE5E5E5" ></Rectangle>
                    <Grid>

                        <StackPanel  Margin="16">
                            <Label Content="Trigger modes" FontWeight="Bold" Margin="4,0" ></Label>
                            <Rectangle Height="8"></Rectangle>
                            <UniformGrid Margin="4,0" Columns="2" >
                                <Label Padding="8,4,0,4" Background="WhiteSmoke" VerticalContentAlignment="Center" 
                                        FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" Content="Line trigger:"  />
                                <Label  Content="{Binding LineTriggerMode}" ContentStringFormat="P1" 
                                        Background="WhiteSmoke" VerticalContentAlignment="Center" 
                                        FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"></Label>
                            </UniformGrid>
                            <UniformGrid Margin="4,0" Columns="2">
                                <Label Padding="8,4,0,4" Background="WhiteSmoke" VerticalContentAlignment="Center" 
                                        FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" Content="Frame trigger:"  />
                                <Label Content="{Binding FrameTriggerMode}" ContentStringFormat="P1" 
                                       Background="WhiteSmoke" VerticalContentAlignment="Center" 
                                       FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"></Label>
                            </UniformGrid>
                            <Rectangle Height="16"></Rectangle>



                        </StackPanel>

                    </Grid>
                    <Rectangle Height="1"  Margin="0" Fill="#FFE5E5E5" ></Rectangle>
                    <dx:DXTabControl Margin="16" Padding="8,16">
                        <dx:DXTabItem Header="I/O" d:IsSelected="True">
                            <StackPanel  >



                                <Grid>
                                    <Label Content="Encoder status" FontWeight="SemiBold" Margin="4,0" ></Label>
                                    <CheckBox Content="Polling" IsChecked="{Binding IsPolling}" HorizontalAlignment="Right" Margin="4,0" Template="{DynamicResource CheckBoxControlTemplateXboxSetting}"></CheckBox>
                                </Grid>

                                <Rectangle Height="4"></Rectangle>
                                <UniformGrid Columns="2" Rows="4" Margin="4,0">
                                    <Label Background="{DynamicResource BlackIOS}" Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="A (L0)"></Label>
                                    <Label Background="{DynamicResource BlackIOS}" Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="B (L1)"></Label>
                                    <ComboBox SelectedItem="{Binding LineFormatL0}"  
                                        VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>SingleEnd</sys:String>
                                        <sys:String>RS422_WithoutTermination</sys:String>
                                        <sys:String>RS422_WithTermination</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding LineFormatL1}"  VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>SingleEnd</sys:String>
                                        <sys:String>RS422_WithoutTermination</sys:String>
                                        <sys:String>RS422_WithTermination</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding LineDetectionL0}"  VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>Threshold_3V3</sys:String>
                                        <sys:String>Threshold_5V</sys:String>
                                        <sys:String>Threshold_12V</sys:String>
                                        <sys:String>Threshold_24V</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding LineDetectionL1}"   VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>Threshold_3V3</sys:String>
                                        <sys:String>Threshold_5V</sys:String>
                                        <sys:String>Threshold_12V</sys:String>
                                        <sys:String>Threshold_24V</sys:String>
                                    </ComboBox>
                                    <Label  Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="{Binding LineStatusL0}"  Style="{DynamicResource tagstyle}">

                                    </Label>
                                    <Label  Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="{Binding LineStatusL1}" Style="{DynamicResource tagstyle}"></Label>
                                </UniformGrid>
                                <Label Content="Trigger &amp; Reject status" FontWeight="SemiBold" Margin="4,8,4,0" ></Label>
                                <Rectangle Height="4"></Rectangle>
                                <UniformGrid Columns="2" Rows="5" Margin="4,0,4,0">
                                    <Label Background="{DynamicResource BlackIOS}" Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="Trigger (L2)"></Label>
                                    <Label Background="{DynamicResource BlackIOS}" Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="Reject (L3)"></Label>
                                    <ComboBox SelectedItem="Input" IsReadOnly="True" IsEnabled="False"   VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>Input</sys:String>
                                        <sys:String>Output</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding LineModeL3}"   VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>Input</sys:String>
                                        <sys:String>Output</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding LineFormatL2}"   VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>SingleEnd</sys:String>
                                        <sys:String>RS422_WithoutTermination</sys:String>
                                        <sys:String>RS422_WithTermination</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding LineOutputLevelL3}"  IsEnabled="{Binding IsL3Output}"  VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>OutputLevel_3V3</sys:String>
                                        <sys:String>OutputLevel_5V</sys:String>
                                        <sys:String>PowerSupply</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding LineDetectionL2}"    VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>Threshold_3V3</sys:String>
                                        <sys:String>Threshold_5V</sys:String>
                                        <sys:String>Threshold_12V</sys:String>
                                        <sys:String>Threshold_24V</sys:String>
                                    </ComboBox>
                                    <ComboBox SelectedItem="{Binding OutLineSourceL3}"  IsEnabled="{Binding IsL3Output}"  VerticalContentAlignment="Center" 
                                                VerticalAlignment="Stretch" 
                                                SelectedIndex="0" Margin="1,1,1,1">
                                        <sys:String>SoftwareControlled</sys:String>
                                        <sys:String>CyclingPreset1</sys:String>
                                        <sys:String>CyclingPreset2</sys:String>
                                        <sys:String>CyclingPreset3</sys:String>
                                        <sys:String>CyclingPreset4</sys:String>
                                        <sys:String>LineTrigger1</sys:String>
                                        <sys:String>LineTrigger2</sys:String>
                                        <sys:String>FrameStart</sys:String>
                                        <sys:String>LineStart</sys:String>
                                        <sys:String>FrameActive</sys:String>
                                        <sys:String>FLO</sys:String>
                                        <sys:String>FrameValid</sys:String>
                                    </ComboBox>
                                    <Label Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="{Binding LineStatusL2}" Style="{DynamicResource tagstyle}"></Label>
                                    <Label Foreground="White" 
                                    Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" 
                                    HorizontalContentAlignment="Center" Content="{Binding LineStatusL3}" Style="{DynamicResource tagstyle}"></Label>
                                </UniformGrid>
                                <ItemsControl ItemsSource="{Binding PrecisionList}" Margin="4,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate >
                                            <UniformGrid Columns="4">
                                                <Label Background="WhiteSmoke"  Padding="0,4" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Margin="1" HorizontalContentAlignment="Center" Content="{Binding Name}"></Label>
                                                <Label Background="WhiteSmoke" ContentStringFormat="P1" VerticalContentAlignment="Center" FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Content="{Binding Precision}"></Label>
                                                <Label Background="WhiteSmoke" ContentStringFormat="P1" VerticalContentAlignment="Center" FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Content="{Binding Recall}"></Label>
                                                <Label Background="WhiteSmoke" ContentStringFormat="P1" VerticalContentAlignment="Center" FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Content="{Binding F1}"></Label>
                                            </UniformGrid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </dx:DXTabItem>
                        <dx:DXTabItem Header="User &amp; Color" >
                            <StackPanel >
                                <CheckBox Content="Enable white balance" IsChecked="{Binding WhitebalanceEnabled}" FontWeight="SemiBold" 
                                            Template="{DynamicResource CheckBoxControlTemplateFlat}" Margin="8,8,0,0"></CheckBox>
                                <Rectangle Height="4"></Rectangle>
                                <Button Content="Auto white balance" Padding="8,8,8,8" Margin="4,4,4,4" 
                                        Style="{DynamicResource ButtonDarkMode}" Command="{Binding WhiteBalanceCommand}" Background="{DynamicResource BlackIOS}"></Button>
                                <UniformGrid Margin="8,0,8,0" Columns="2" >
                                        <Border BorderThickness="1" BorderBrush="LightGray">
                                            <Label Padding="8,6,0,6"  VerticalContentAlignment="Center" 
                                        FontWeight="SemiBold" Margin="1" HorizontalAlignment="Stretch" Content="Current color bank"  />
                                        </Border>
                                    
                                    <ComboBox  SelectedItem="{Binding CurrentColorBank}"  Background="WhiteSmoke" VerticalContentAlignment="Center" FontWeight="SemiBold" 
                                            HorizontalAlignment="Stretch" HorizontalContentAlignment="Center">
                                        <sys:String>ColorBank1</sys:String>
                                        <sys:String>ColorBank2</sys:String>
                                        <sys:String>ColorBank3</sys:String>
                                        <sys:String>ColorBank4</sys:String>
                                    </ComboBox>
                                </UniformGrid>
                                <Rectangle Height="8"></Rectangle>
                                <UniformGrid Columns="2" Margin="8,0">
                                    <Button Content="Load" Padding="8,8,8,8" 
                                        Style="{DynamicResource ButtonDarkMode}" Command="{Binding LoadColorCommand}" Background="#FFE4E4E4" Foreground="#FF0C0C0C"/>
                                    <Button Content="Save setting" Padding="8,8,8,8" 
                                        Style="{DynamicResource ButtonDarkMode}" Command="{Binding SaveColorCommand}" Background="{DynamicResource NodeBlue}" />
                                </UniformGrid>
                            </StackPanel>
                        </dx:DXTabItem>
                    </dx:DXTabControl>

                    <Rectangle Height="1"  Margin="0" Fill="#FFE5E5E5" ></Rectangle>
                    <Grid>

                        <StackPanel  Margin="16">
                            <Label Content="Save and load" FontWeight="SemiBold" Margin="4,0" ></Label>
                            <Rectangle Height="8"></Rectangle>
                            <UniformGrid Margin="4,0"  Columns="2" >
                                    <Border BorderThickness="1" BorderBrush="LightGray">
                                        <Label Padding="8,6"  VerticalContentAlignment="Center" 
                                        FontWeight="SemiBold"  HorizontalAlignment="Stretch" Content="Current userset"  />
                                    </Border>
                                
                                <ComboBox  SelectedItem="{Binding CurrentUserSet}"  Background="WhiteSmoke" VerticalContentAlignment="Center" FontWeight="SemiBold" 
                                            HorizontalAlignment="Stretch" HorizontalContentAlignment="Right">
                                    <sys:String>Factory</sys:String>
                                    <sys:String>Bank1</sys:String>
                                    <sys:String>Bank2</sys:String>
                                    <sys:String>Bank3</sys:String>
                                    <sys:String>Bank4</sys:String>
                                    <sys:String>Integrator</sys:String>
                                </ComboBox>
                            </UniformGrid>
                            <Rectangle Height="8"></Rectangle>
                            <UniformGrid Columns="2" Margin="4,0">
                                <Button Content="Load" Padding="8,8,8,8" 
                                        Style="{DynamicResource ButtonDarkMode}" Command="{Binding LoadCommand}" Background="#FFE4E4E4"  Foreground="#FF0C0C0C"/>
                                <Button Content="Save setting" Padding="8,8,8,8" 
                                        Style="{DynamicResource ButtonDarkMode}" Command="{Binding SaveCommand}" Background="{DynamicResource NodeBlue}" />
                            </UniformGrid>





                        </StackPanel>

                    </Grid>
                </StackPanel>
            </ScrollViewer>




        </Grid>

        <Grid x:Name="grid_display" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid>
                <StackPanel Orientation="Horizontal" Margin="4">
                    <dx:SimpleButton  Click="btn_zoom_in_click"  HorizontalAlignment="Left" Padding="2"  Margin="0,0,4,0" Glyph="{dx:DXImage 'Office2013/Zoom/ZoomIn_32x32.png'}" ></dx:SimpleButton>
                    <dx:SimpleButton  Click="btn_zoom_out_click" HorizontalAlignment="Left" Padding="2" Margin="2,0" Glyph="{dx:DXImage 'Office2013/Zoom/ZoomOut_32x32.png'}" ></dx:SimpleButton>
                    <dx:SimpleButton  Click="btn_zoom_fit_click" HorizontalAlignment="Left" Padding="2" Margin="2,0" Glyph="{dx:DXImage 'Office2013/Zoom/Zoom100_32x32.png'}" ></dx:SimpleButton>

                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,0,8,0" VerticalAlignment="Center">
                    <Label Content="{Binding FocusValue}" ContentStringFormat="Focus: {0}" Margin="8,0" VerticalAlignment="Center"></Label>
                    <Label Content="{Binding FrameId}" ContentStringFormat="Frame: {0}" VerticalAlignment="Center"></Label>
                </StackPanel>
            </Grid>
            <Border Grid.Row="1" BorderThickness="1" BorderBrush="WhiteSmoke">
                <HalconDotNet:HSmartWindowControlWPF x:Name="window_display" HInitWindow="window_display_HInitWindow" Grid.Row="1" Margin="4"></HalconDotNet:HSmartWindowControlWPF>
            </Border>
            
        </Grid>
        <dx:WaitIndicator Grid.ColumnSpan="2" DeferedVisibility="{Binding IsLoading}" Content="{Binding LoadingMessage}" d:IsHidden="True"></dx:WaitIndicator>
    </Grid>
    </Border>
</UserControl>

<dx:ThemedWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns:converters="clr-namespace:NOVisionDesigner.Designer.ValueConverters" xmlns:Keyboard="clr-namespace:NOVisionDesigner.Designer.Misc" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    Title="Find Lines"
    x:Class="NOVisionDesigner.Designer.Windows.FindLinesWindow"
        mc:Ignorable="d"
         Height="900" Width="1354.539" Loaded="MetroWindow_Loaded"
    WindowStartupLocation="CenterScreen"
    Foreground="Black" 
    Closed="Window_Closed" Initialized="Window_Initialized" FontSize="14" ShowGlow="False" >
    <Window.Resources>
        <converters:StringToColor x:Key="StringToColor"/>
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />

        <SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
        <SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />

        <SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />

        <RadialGradientBrush x:Key="Brush2">
            <GradientStop Color="#FF272727" Offset="1"/>
            <GradientStop Color="#FF292828"/>
        </RadialGradientBrush>
        <Color x:Key="ColorGlow">#FF51EAFF</Color>
        <Style x:Key="ButtonGlowNew" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="True" Margin="2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF20ACEE"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border x:Name="border_glow" CornerRadius="4" BorderThickness="0">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="drop_efect_glow" Color="{DynamicResource ColorGlow}" ShadowDepth="0"/>
                                </Border.Effect>
                                <Border.BorderBrush>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF84C6FD" Offset="0"/>
                                        <GradientStop Color="#FF00B9FF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground}"/>-->
                                <Setter Property="BorderThickness" TargetName="border_glow" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground_pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ForceCursor" Value="True"/>
        </Style>
        <DropShadowEffect x:Key="Drop1" x:Name="drop_efect_glow" ShadowDepth="0" Color="{DynamicResource ColorGlow}"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Path x:Name="ButtonPath"
                              Margin="3"
                              Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square"
                              StrokeEndLineCap="Square"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" Width="10" Height="10" Data="M0,0 L25,25 M0,25 L25,0"/>
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonHoverBackgroundBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonHoverForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonPressedBackgroundBrush}" />
                                <Setter TargetName="backgroundEllipse" Property="Stroke"
                                    Value="{DynamicResource TabItemCloseButtonPressedBorderBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonPressedForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="EditMouseOverBrush" Color="#FF3B78FB" />
        <SolidColorBrush x:Key="BrushEditMousePress" Color="#FF04049B" />
        <Style x:Key="ButtonStyleEdit" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Image  Width="10" Height="10" />
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource EditMouseOverBrush}" />

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource BrushEditMousePress}" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>
    <Border ClipToBounds="True" BorderThickness="0,1,0,0" BorderBrush="#20000000">
        <Grid>
            <Grid.RowDefinitions>

                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Width="1" Background="Transparent" VerticalAlignment="Stretch" Grid.Column="0" Grid.RowSpan="2"></GridSplitter>
            <HalconDotNet:HSmartWindowControlWPF x:Name="window_display"  HInitWindow="window_display_HInitWindow" HMouseMove="Window_display_HMouseMove" Loaded="window_display_Loaded" Grid.Row="1" Margin="2">

                <dxb:BarManager.DXContextMenu>
                    <dxb:PopupMenu>
                        <dxb:PopupMenu.Items>
                            
                            <dxb:BarButtonItem
                                Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Add.svg'}"
                                Content="New edge" 
                                ItemClick="MenuItem_Click" />
                            <dxb:BarButtonItem
                                Glyph="{dx:DXImage 'SvgImages/Dashboards/Delete.svg'}"
                                Content="Remove" 
                                ItemClick="RemoveEdge_Click" />
                        </dxb:PopupMenu.Items>
                    </dxb:PopupMenu>
                </dxb:BarManager.DXContextMenu>
            </HalconDotNet:HSmartWindowControlWPF>

            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" >
                <Grid>
                    <StackPanel Orientation="Horizontal" Height="40">
                        <Button x:Name="btn_export" Visibility="Collapsed" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Click="btn_export_Click" Content="Save"  Margin="5,2,2,2"/>
                        <Button x:Name="btn_load" Visibility="Collapsed" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Click="btn_load_Click" Content="Load"  Margin="2"/>
                        <dx:SimpleButton x:Name="bnt_add_tool" Click="bnt_add_tool_Click" Content="Add tool" Cursor="Hand" Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Add.svg'}" 
                                         GlyphHeight="24" Margin="2"></dx:SimpleButton>

                        <dx:SimpleButton x:Name="btn_apply_size" Glyph="{dx:DXImage 'SvgImages/Reports/FitBoundsToContainer.svg'}" 
                                         GlyphHeight="24" 
                                         Content="Adapt size" Click="btn_apply_size_Click" Margin="2"/>
                        
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  >
                        <dx:SimpleButton GlyphHeight="25" VerticalAlignment="Stretch" Padding="4,0" Margin="2"  Click="btn_zoom_in_click"  
                                         HorizontalAlignment="Left"    Glyph="{dx:DXImage 'Office2013/Zoom/ZoomIn_32x32.png'}" ></dx:SimpleButton>
                        <dx:SimpleButton GlyphHeight="25" VerticalAlignment="Stretch" Padding="4,0" Margin="2"  Click="btn_zoom_out_click" HorizontalAlignment="Left"  Glyph="{dx:DXImage 'Office2013/Zoom/ZoomOut_32x32.png'}" ></dx:SimpleButton>
                        <dx:SimpleButton GlyphHeight="25" VerticalAlignment="Stretch" Padding="4,0" Margin="2"  Click="btn_zoom_fit_click" HorizontalAlignment="Left"  Glyph="{dx:DXImage 'Office2013/Zoom/Zoom100_32x32.png'}" ></dx:SimpleButton>

                    </StackPanel>
                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Stretch" Orientation="Horizontal">
                        <!--<Label VerticalAlignment="Center" Foreground="{DynamicResource WhiteBrush}" 
                               Background="{DynamicResource RedIOS}" Padding="8,4"  Content="Warning: Image size not match"></Label>
                        <Rectangle Width="8"></Rectangle>-->
                    </StackPanel>
                    <dx:SimpleButton Visibility="Collapsed" ButtonKind="Toggle" Content="Active Profiler" HorizontalAlignment="Right" Margin="2,2,5,2" IsChecked="{Binding ElementName=expand_profiler,Path=IsExpanded}"></dx:SimpleButton>
                </Grid>

            </ScrollViewer>
            <Rectangle Width="1" Grid.RowSpan="2" Fill="#20000000" VerticalAlignment="Stretch" HorizontalAlignment="Right"></Rectangle>
            <Grid Grid.RowSpan="2"  HorizontalAlignment="Right" Grid.Column="1">
                <dx:DXExpander x:Name="expander_parameter"   Grid.Column="1" Margin="2,0,5,0" HorizontalExpand="FromRightToLeft" VerticalExpand="None" Grid.RowSpan="2" IsExpanded="True">

                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <StackPanel x:Name="stack_workspace" Margin="2,2,2,2" Orientation="Vertical" Visibility="Collapsed">

                                <Grid>
                                    <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Edges list" Margin="5,4,0,0" />
                                    <Button x:Name="btn_add_class" VerticalAlignment="Bottom" 
                                            Click="btn_new_edge_Click" HorizontalAlignment="Right" 
                                            Margin="0" VerticalContentAlignment="Center" 
                                            HorizontalContentAlignment="Center"  Width="25" Height="25" Padding="0">
                                        <Viewbox Width="18" Height="18">
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="#FF575757" />
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                    <Button x:Name="btn_remove_edge" VerticalAlignment="Bottom" Click="btn_remove_edge_Click" HorizontalAlignment="Right" Margin="0,0,30,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  Width="25" Height="25" Padding="0">
                                        <Viewbox Width="18" Height="18" RenderTransformOrigin="0.5,0.5">
                                            <Viewbox.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="45"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Viewbox.RenderTransform>
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="Red" />
                                            </Canvas>
                                        </Viewbox>
                                    </Button>

                                </Grid>
                                <ListBox x:Name="lst_edge" SelectionChanged="lst_edge_SelectionChanged" Margin="5,5,0,5" IsEnabled="False" MinHeight="120" >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Height="30">
                                                <Button x:Name="btn_remove_item" Content="X" Style="{DynamicResource ButtonStyle1}" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Rockwell" FontSize="12" Margin="0,0,4,0" Click="Button_Click" Width="20" Height="20"/>
                                                <Button x:Name="btn_edit_item" Content="Edit" Style="{DynamicResource ButtonStyleEdit}" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Rockwell" FontSize="12" Margin="0,0,28,0" Width="20" Height="20" Click="btn_edit_item_Click"/>
                                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>

                                            </Grid>

                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>





                            </StackPanel>
                            <StackPanel x:Name="stack_edge"  ScrollViewer.CanContentScroll="True" CanVerticallyScroll="True" >
                                <Grid Margin="5,5,2,2" >
                                    <Label Content="Name" VerticalAlignment="Bottom" Margin="2,4,0,0" HorizontalAlignment="Left"/>
                                    <Keyboard:TextboxWithKeyboard Margin="0" Text="{Binding Name,Mode=TwoWay}" HorizontalAlignment="Right" MinWidth="100" VerticalAlignment="Bottom" Style="{DynamicResource TextboxwithkeyboardFlat}" Height="25"/>
                                </Grid>
                                <Grid Margin="5,10,2,2" Visibility="Collapsed" >
                                    <Label Content="Actual Value" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left"/>
                                    <Label  Margin="0,4,2,2" Content="{Binding Amp,FallbackValue=ActualValue}" HorizontalAlignment="Right" MinWidth="100" HorizontalContentAlignment="Right" Padding="0,3,5,3"  />
                                </Grid>
                                <Grid Margin="5,10,2,2" >
                                    <Label Content="Color" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left"/>
                                    <dxe:PopupColorEdit Color="{Binding EdgeColor, Converter={StaticResource StringToColor},Mode=TwoWay}" Margin="0,0,2,0" HorizontalAlignment="Right" />
                                </Grid>
                                <Grid Margin="5,5,2,2" >
                                    <dxc:ChartControl x:Name="plot" Height="250" HorizontalAlignment="Right" Margin="0,5,5,0" VerticalAlignment="Top" Padding="8" Grid.RowSpan="2" Grid.Row="1">
                                        <dxc:ChartControl.Diagram >
                                            <dxc:XYDiagram2D    Background="#33FFFFFF" >
                                                <dxc:XYDiagram2D.DefaultPane>
                                                    <dxc:Pane DomainBrush="#33FFFFFF" DomainBorderBrush="#33E1DFDD"/>
                                                </dxc:XYDiagram2D.DefaultPane>
                                                <dxc:XYDiagram2D.AxisY>
                                                    <dxc:AxisY2D Interlaced="True" Brush="#19E1DFDD" LabelPosition="Inside">
                                                        <dxc:AxisY2D.GridLinesBrush>
                                                            <SolidColorBrush Color="#19C8C6C4" Opacity="1"/>
                                                        </dxc:AxisY2D.GridLinesBrush>
                                                        <dxc:AxisY2D.ConstantLinesInFront>
                                                            <dxc:ConstantLine x:Name="line_pos">
                                                                <dxc:ConstantLine.Title>
                                                                    <dxc:ConstantLineTitle Content="Positive"/>
                                                                </dxc:ConstantLine.Title>

                                                            </dxc:ConstantLine>
                                                            <dxc:ConstantLine x:Name="line_neg">
                                                                <dxc:ConstantLine.Title>
                                                                    <dxc:ConstantLineTitle Content="Negative" ShowBelowLine="True"/>
                                                                </dxc:ConstantLine.Title>
                                                                <dxc:ConstantLine.Value>
                                                                    <System:Double>0</System:Double>
                                                                </dxc:ConstantLine.Value>
                                                            </dxc:ConstantLine>
                                                        </dxc:AxisY2D.ConstantLinesInFront>
                                                        <dxc:AxisY2D.WholeRange>
                                                            <dxc:Range MaxValue="255" MinValue="-255"/>
                                                        </dxc:AxisY2D.WholeRange>
                                                        <dxc:AxisY2D.VisualRange>
                                                            <dxc:Range MaxValue="255" MinValue="-255"/>
                                                        </dxc:AxisY2D.VisualRange>
                                                    </dxc:AxisY2D>
                                                </dxc:XYDiagram2D.AxisY>
                                                <dxc:XYDiagram2D.AxisX>
                                                    <dxc:AxisX2D Brush="#19E1DFDD" >
                                                        <dxc:AxisX2D.GridLinesBrush>
                                                            <SolidColorBrush Color="#19C8C6C4" Opacity="1"/>
                                                        </dxc:AxisX2D.GridLinesBrush>
                                                    </dxc:AxisX2D>
                                                </dxc:XYDiagram2D.AxisX>
                                                <dxc:LineSeries2D x:Name="series" DisplayName="Series 1" Brush="Black" />
                                            </dxc:XYDiagram2D>
                                        </dxc:ChartControl.Diagram>

                                    </dxc:ChartControl>

                                </Grid>

                                <Grid Margin="5,5,2,2" Height="55">

                                    <Label Content="Sigma" VerticalAlignment="Top" 
                                           Margin="2,4,0,2" HorizontalAlignment="Left"/>
                                    <Keyboard:NumericUpDownWithKeyboard  Margin="0,4,2,0" 
                                                                         Value="{Binding Value, ElementName=slider_opacity, Mode=TwoWay}" 
                                                                         StringFormat="{}{0:N2}" Minimum="0" VerticalAlignment="Top" 
                                                                         HorizontalAlignment="Right" MinWidth="50" Interval="0.1" />
                                    <Slider Style="{x:Null}" x:Name="slider_opacity" 
                                            Margin="2,0,2,2" Minimum="1" Maximum="255" 
                                            Value="{Binding Sigma}"  LargeChange="1" 
                                            SmallChange="0.1" VerticalAlignment="Bottom" />
                                    
                                </Grid>
                                <Grid Margin="5,10,2,2" Height="55">
                                    <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Threshold" Margin="2,4,0,0"/>
                                    <Keyboard:NumericUpDownWithKeyboard Margin="0,4,2,0" Value="{Binding Value, ElementName=sld_brushsize, Mode=TwoWay}" StringFormat="{}{0:N2}" Minimum="1" VerticalAlignment="Top" HorizontalAlignment="Right" MinWidth="50" />

                                    <Slider Style="{x:Null}" x:Name="sld_brushsize" Minimum="1" Maximum="255" Value="{Binding Threshold}" VerticalAlignment="Bottom" Margin="2,0,2,2" ValueChanged="Sld_brushsize_ValueChanged"/>
                                </Grid>
                                <Grid Margin="5,10,2,2" Height="55">
                                    <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Offset" Margin="2,4,0,0"/>
                                    <Keyboard:NumericUpDownWithKeyboard  Margin="0,4,2,0" Value="{Binding Value, ElementName=sld_offset, Mode=TwoWay}" StringFormat="{}{0:N0}" Minimum="-255" VerticalAlignment="Top" HorizontalAlignment="Right" MinWidth="50" />

                                    <Slider Style="{x:Null}" x:Name="sld_offset"  Minimum="-255" Maximum="255" Value="{Binding Offset}" VerticalAlignment="Bottom" Margin="2,0,2,2" />
                                </Grid>
                                <Grid Margin="5,5,2,2">
                                    <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Transition" Margin="2,4,0,0"/>
                                    <ComboBox Margin="0,4,2,0" x:Name="cmb_transtion"
                                              Padding="8,4"  
                                              SelectedIndex="0" VerticalContentAlignment="Center" 
                                              SelectedValue="{Binding Transition}" Style="{x:Null}" VerticalAlignment="Top" 
                                              SelectionChanged="cmb_transtion_SelectionChanged" 
                                              HorizontalContentAlignment="Right" HorizontalAlignment="Right">
                                        <System:String>all</System:String>
                                        <System:String>negative</System:String>
                                        <System:String>positive</System:String>
                                    </ComboBox>
                                </Grid>
                                <Grid Margin="5,5,2,2">
                                    <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Selection" Margin="2,4,0,0"/>
                                    <ComboBox Margin="0,4,2,0" x:Name="cmb_select"
                                              Padding="8,4"
                                              SelectedIndex="0" SelectedValue="{Binding Select}" 
                                              Style="{x:Null}" VerticalAlignment="Top" 
                                              HorizontalContentAlignment="Right" 
                                              VerticalContentAlignment="Center" HorizontalAlignment="Right">
                                        <System:String>all</System:String>
                                        <System:String>first</System:String>
                                        <System:String>last</System:String>
                                    </ComboBox>
                                </Grid>


                            </StackPanel>
                            
                        </StackPanel>

                    </ScrollViewer>

                </dx:DXExpander>

            </Grid>






        </Grid>
    </Border>
</dx:ThemedWindow>

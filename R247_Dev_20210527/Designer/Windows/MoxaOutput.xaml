<Window x:Class="NOVisionDesigner.Designer.Windows.MoxaOutput"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows"  
        xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        xmlns:converters="clr-namespace:NOVisionDesigner.Designer.ValueConverters"
        mc:Ignorable="d"
        Title="Moxa Output" Height="450" Width="800" FontSize="14">
    <Window.Resources>
        
        
        <converters:InvertBoolToVisibilityCollapse x:Key="BoolToVisibilyHidden"/>
        <ControlTemplate x:Key="CheckBoxControlTemplate1" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Cursor="Hand">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Ellipse x:Name="checkBoxBorder" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Background}" Margin="1" Width="Auto" Height="Auto" Grid.ColumnSpan="2" Stroke="{TemplateBinding BorderBrush}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" TargetName="checkBoxBorder" Value="0.9"/>

                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="Stroke" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>-->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" TargetName="checkBoxBorder" Value="0.8"/>
                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>-->
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Fill" TargetName="checkBoxBorder" Value="{StaticResource YellowIOS}"/>
                    <Setter Property="Stroke" TargetName="checkBoxBorder" Value="{StaticResource OrangeIOS}"/>
                    <!--<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>-->
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <!--<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="500"/>
        </Grid.ColumnDefinitions>
        <Rectangle Height="1" Grid.ColumnSpan="2" VerticalAlignment="Top" Fill="#FFEAEAEA"></Rectangle>
        <Border Grid.Column="1" BorderBrush="#FFEAEAEA" BorderThickness="1,0,0,0">
            <Grid Margin="5" >
                <StackPanel x:Name="stack_edge"  ScrollViewer.CanContentScroll="True" CanVerticallyScroll="True" >

                    <Grid >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Label Content="Device" VerticalAlignment="Bottom"  FontWeight="SemiBold"></Label>
                            <Label Margin="5,0" Content="{Binding Device}" VerticalAlignment="Bottom"/>
                        </StackPanel>

                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">

                            <!--<ComboBox MinWidth="100"  x:Name="cmb_listDevices" Margin="4,0"  VerticalContentAlignment="Center" ItemsSource="{Binding Devices}"  SelectionChanged="Changed_Devices" VerticalAlignment="Top"  HorizontalContentAlignment="Right" HorizontalAlignment="Right"/>-->
                            <Button Padding="5,0" x:Name="ResetListDevices" Click="ResetListDevicesFunction" Content="Change">
                            </Button>
                        </StackPanel>

                    </Grid>
                    <Grid Margin="0,5">
                        <Label Content="Input" VerticalAlignment="Bottom"  FontWeight="SemiBold"></Label>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0">

                            <Button Padding="5,0" Margin="0,1" Content="Add" Click="btn_add_model_click"/>
                        </StackPanel>
                    </Grid>



                </StackPanel >
                <Grid Margin="0,60,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="476*"/>
                        <ColumnDefinition Width="13*"/>
                    </Grid.ColumnDefinitions>
                    <UniformGrid Columns="5" Margin="2,2,21,2">
                        <Label Content="Port"></Label>
                        <Label Content="Bit"></Label>
                        <Label Content="Value"></Label>
                        <Label Content="Activation"></Label>
                        <Label Content="Duration (ms)"></Label>
                    </UniformGrid>
                    <ListBox  VirtualizingPanel.IsVirtualizing="True" Padding="0" Margin="0,30,0,0"  VirtualizingPanel.VirtualizationMode ="Standard" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  ScrollViewer.CanContentScroll="True" x:Name="lst_view" Background="#FFFBFBFB" BorderBrush="#FFDADADA" Grid.ColumnSpan="2" >
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True" >
                                        <Setter Property="Background" Value="#01008201" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True" >
                                        <Setter Property="Background" Value="#FF108DF5" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>

                            <DataTemplate >

                                <Grid Background="White" Margin="2">
                                    <UniformGrid Columns="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Margin="0,0,30,0">
                                        <dxe:SpinEdit MinValue="0" MinWidth="40"  HorizontalAlignment="Left" Value="{Binding PortIndex,Mode=TwoWay}" IsFloatValue="False"/>
                                        <dxe:SpinEdit MinValue="0" MinWidth="40" HorizontalAlignment="Left" Value="{Binding Index,Mode=TwoWay}" IsFloatValue="False"/>
                                        <ComboBox SelectedValue="{Binding State,Mode=TwoWay}" HorizontalAlignment="Left">
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox>
                                        <ComboBox SelectedValue="{Binding Activation,Mode=TwoWay}" HorizontalAlignment="Left">
                                            <System:Boolean>True</System:Boolean>
                                            <System:Boolean>False</System:Boolean>
                                        </ComboBox>
                                        <dxe:SpinEdit MinValue="0" MinWidth="40"  HorizontalAlignment="Left" Value="{Binding Duration,Mode=TwoWay}" IsFloatValue="False"/>
                                    </UniformGrid>


                                    <Button x:Name="btn_remove" Background="Transparent" Margin="0,0,2,0" Padding="2" BorderThickness="0" VerticalAlignment="Center"  HorizontalAlignment="Right"  Click="btn_remove_Click">
                                        <Viewbox Width="15" Height="15">
                                            <Canvas Width="24" Height="24">
                                                <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                </Grid>





                            </DataTemplate>

                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel HorizontalAlignment="Stretch" Margin="0" Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>

                </Grid>

            </Grid>
        </Border>

        <Grid Grid.Column="0">
            <Grid Grid.Row="1">
                <StackPanel ScrollViewer.CanContentScroll="True" CanVerticallyScroll="True" Margin="5" >
                    <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <Label Content="Ports"  FontWeight="SemiBold" HorizontalAlignment="Left"/>
                        <Button Padding="5,0"  Click="Button_Click"  Content="Refresh" HorizontalAlignment="Right"/>
                    </Grid>
                    
                    <ItemsControl x:Name="port_control" Margin="5">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,10,0,0">
                                    <Label Content="{Binding PortIndex}" ContentStringFormat="Port {0}"></Label>
                                    <ItemsControl ItemsSource="{Binding BitStates}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel IsEnabled="{Binding Visible}" >
                                                    <Label Content="{Binding Index}" HorizontalAlignment="Center"></Label>
                                                    <CheckBox Width="20" Background="#FFDADADA" BorderBrush="#FFA8A4A4" Height="20" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" IsChecked="{Binding State}" Margin="4,0" Template="{DynamicResource CheckBoxControlTemplate1}"></CheckBox>
                                                </StackPanel>

                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"></StackPanel>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </StackPanel>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>

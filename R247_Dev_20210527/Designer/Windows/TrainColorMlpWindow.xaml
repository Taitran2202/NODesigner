<dx:ThemedWindow
    xmlns:fluent="urn:fluent-ribbon"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows"
    xmlns:mahapp="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet" 
    xmlns:DutchLady="clr-namespace:NOVisionDesigner" 
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" 
    xmlns:Misc="clr-namespace:NOVisionDesigner.Designer.Misc" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" x:Class="NOVisionDesigner.Designer.Windows.TrainColorMlpWindow"
        mc:Ignorable="d"
    
        Title="Color Training Window" Height="704.5" 
    FontSize="14"
    Width="1153.5"  WindowStartupLocation="CenterScreen" Loaded="Window_Loaded"  
    Closing="RibbonWindow_Closing"  Initialized="Window_Initialized" ShowGlow="False">
    <Window.Resources>

        <Misc:StringToColor x:Key="StringToColor"/>
        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="#FF4E4E4E"></Setter>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand" BorderThickness="{TemplateBinding BorderThickness}"  >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FF007AFF"/>
                                        <Setter Property="Foreground" Value="White"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.RowSpan="2" Margin="{TemplateBinding Padding}" Grid.ColumnSpan="1"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="8"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="8"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="4" />
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Column="0" Grid.ColumnSpan="2" Fill="#FFF4F4F5" />
                            <Rectangle Grid.Column="1" Grid.ColumnSpan="3" Fill="#FFF4F4F5" />
                            <Ellipse Grid.Column="3" Grid.ColumnSpan="2" Fill="#FFF4F4F5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4" />
                                <RowDefinition Height="4" />
                                <RowDefinition />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="4" />
                            </Grid.RowDefinitions>
                            <Ellipse Grid.Row="0" Grid.RowSpan="2" Fill="#FFF4F4F5" />
                            <Rectangle Grid.Row="1" Grid.RowSpan="3" Fill="#FFF4F4F5" />
                            <Ellipse Grid.Row="3" Grid.RowSpan="2" Fill="#FFF4F4F5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="scrollbarstyleIOS" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FBFBFBF">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*"/>
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource VerticalThumb}"  Width="8"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="10"/>
                    <Setter Property="MinHeight" Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FA7A7A7">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.00001*"/>
                                    </Grid.ColumnDefinitions>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb  Style="{DynamicResource HorizontalThumb}" Height="8"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyleRoundConner" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF20ACEE"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>

            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground_pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleOffice" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FFD8D8D8"/>
            <Setter Property="Foreground" Value="#FF6A6A6A"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Padding" Value="16,0,16,0"/>
            <Setter Property="FontFamily" Value="Rockwell"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>

                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>

                            <Border x:Name="border_glow" BorderThickness="0"  BorderBrush="#FF0055CF">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="drop_efect_glow" ShadowDepth="0" Color="{DynamicResource ColorGlowGlobal}" />
                                </Border.Effect>
                            </Border>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border_glow" Value="{DynamicResource ButtonGlowNewGlobalMouseOver}"/>
                                <Setter Property="BorderThickness" TargetName="border_glow" Value="1"/>
                                <Setter Property="TextBlock.Foreground" TargetName="content" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground_pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ForceCursor" Value="True"/>
        </Style>
        <Misc:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        

    </Window.Resources>


    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
            <RowDefinition Height="90"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <dx:DXExpander x:Name="expander" Grid.Row="1" Grid.Column="1" Margin="0" VerticalExpand="None" 
                       HorizontalExpand="FromLeftToRight" IsExpanded="True" >
            <StackPanel x:Name="grid_parameters" Margin="0,0,5,0" >
                <Grid Margin="10,10,2,2" Width="210" Height="62">

                    <Label Content="Sensitive" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left"/>
                    <Slider x:Name="sld_sensitive" Margin="2,2,2,2" Minimum="0" Value="{Binding Sensitive,Mode=TwoWay}" Style="{x:Null}" Maximum="100" LargeChange="0.1" SmallChange="0.01" VerticalAlignment="Bottom" IsSnapToTickEnabled="True" TickFrequency="0.1" />
                    <Misc:NumericUpDownWithKeyboard  Margin="0,4,2,0" Value="{Binding Value, ElementName=sld_sensitive, Mode=TwoWay}" 
                                                     Minimum="0" VerticalAlignment="Top" HorizontalAlignment="Right" MinWidth="50" 
                                                     Maximum="100" Interval="1" StringFormat="#0.0" />
                </Grid>
                <Grid Margin="10,10,2,2" Width="210" Height="62">

                    <Label Content="Closing circle" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left"/>
                    <Slider x:Name="sld_closing" Margin="2,0,2,2" Minimum="0" Value="{Binding ClosingRadius,Mode=TwoWay}" Style="{x:Null}" Maximum="50" LargeChange="1" SmallChange="0.5" VerticalAlignment="Bottom" IsSnapToTickEnabled="True" TickFrequency="0.5" ValueChanged="sld_closing_ValueChanged_1" />
                    <Misc:NumericUpDownWithKeyboard  Margin="0,4,2,0" Value="{Binding Value, ElementName=sld_closing, Mode=TwoWay}"  
                                                     Minimum="0" VerticalAlignment="Top" HorizontalAlignment="Right" MinWidth="50" 
                                                     Maximum="50" Interval="0.5" StringFormat="#0.0" />
                </Grid>
                <Grid Margin="10,10,2,2" Width="210" Height="62">

                    <Label Content="Threshold" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left"/>
                    <Slider x:Name="slider_threshold" Margin="2,0,2,2" Minimum="0" Value="{Binding RejectionThreshold,Mode=TwoWay}" Maximum="1" Style="{x:Null}" LargeChange="0.1" SmallChange="0.01" VerticalAlignment="Bottom" IsSnapToTickEnabled="True" TickFrequency="0.1" />
                    <Misc:NumericUpDownWithKeyboard  Margin="0,4,2,0" Value="{Binding Value, ElementName=slider_threshold, Mode=TwoWay}" 
                                                     Minimum="0" VerticalAlignment="Top" HorizontalAlignment="Right" 
                                                     MinWidth="50" Maximum="1" Interval="0.1" StringFormat="#0.0" />
                </Grid>
                <Grid Margin="10,10,2,2">
                    <Label Content="Number of sample" HorizontalAlignment="Left" ></Label>
                    <Label x:Name="lb_sample"  HorizontalContentAlignment="Center"  VerticalAlignment="Center" Margin="0" HorizontalAlignment="Right"/>
                </Grid>


            </StackPanel>
        </dx:DXExpander>





        <Border  Grid.ColumnSpan="2" Background="#10000000"  >
            <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                <Grid>
                    <StackPanel Orientation="Horizontal" ScrollViewer.CanContentScroll="True" CanHorizontallyScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Visible" CanVerticallyScroll="True" Margin="0" HorizontalAlignment="Left" >

                        <dx:SimpleButton x:Name="btn_save_train_data"   Click="btn_save_train_data_Click" Margin="2" Content="Save" Glyph="{dx:DXImage Office2013/Save/Save_32x32.png}" GlyphHeight="20" GlyphWidth="20">

                            <!--<Image Source="/NOVision;component/Icons/Save-64.png"/>-->

                        </dx:SimpleButton>
                        <dx:SimpleButton x:Name="btn_load_train_data" Content="Load" Click="btn_load_train_data_Click" Margin="2" Glyph="{dx:DXImage SvgImages/Dashboards/ImageLoad.svg}" GlyphHeight="20" GlyphWidth="20"  />
                        <dx:SimpleButton x:Name="btn_clear_train_data" Content="Clear Data"  Click="btn_clear_train_data_Click" Margin="2" Glyph="{dx:DXImage SvgImages/Dashboards/DeleteDataSource.svg}" GlyphHeight="20" GlyphWidth="20"  />







                    </StackPanel>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button x:Name="btn_parameter" HorizontalAlignment="Right" Content="..." BorderBrush="{x:Null}" Margin="2" Width="40" Click="Btn_parameter_Click"/>




                    </StackPanel>
                </Grid>
            </ScrollViewer>




        </Border>

        <HalconDotNet:HSmartWindowControlWPF x:Name="window_display" 
                                             HImagePart="0,0,1292,964" 
                                             HInitWindow="window_display_HInitWindow" 
                                             Grid.Row="1" Margin="1" HMouseDown="window_display_HMouseDown" 
                                             HMouseMove="window_display_HMouseMove" 
                                             HMouseUp="window_display_HMouseUp" 
                                             MouseLeave="window_display_MouseLeave"/>


        <StackPanel x:Name="grid_control"  Grid.ColumnSpan="2"  Grid.Row="2" Margin="2,5,0,5" Orientation="Horizontal" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" CanVerticallyScroll="True" CanHorizontallyScroll="True">
            <Label VerticalAlignment="Center" FontSize="14"  Content="Training:"  Margin="10,0" FontWeight="Bold"/>
            <Button x:Name="btn_train" Click="btn_train_Click"   Height="Auto" Width="120" Margin="5,5,3,5">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="/NOVISION Designer;component/iOS_Icons/icons8-learning.png" Height="30" Width="30"/>
                    <TextBlock Text="Soft Training"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0" FontSize="12"/>
                </StackPanel>
            </Button>
            <Button x:Name="btn_hard_train"  Click="btn_hard_train_Click"  Height="Auto" Width="120" Margin="3,5,5,5">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="/NOVISION Designer;component/iOS_Icons/icons8-learning-filled.png" Width="30" Height="30" Margin="0"/>
                    <TextBlock Text="Hard Training"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0" FontSize="12"/>
                </StackPanel>
            </Button>
            <Rectangle Width="1" Margin="5" Fill="#FF979797" Opacity="0.49"/>
            <Button x:Name="btn_view_segmen"   Click="btn_view_segmen_Click"  Height="Auto" Width="120" Margin="5">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="/NOVISION Designer;component/NewUI/ic-check-box@2x.png" Width="30" Height="30" Margin="0"/>
                    <TextBlock Text="View Result"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0" FontSize="12"/>
                </StackPanel>
            </Button>
            <Rectangle Width="1" Margin="5" Fill="#FF979797" Opacity="0.49"/>
            <Label VerticalAlignment="Center" FontSize="14"  Content="Sample:"  Margin="10,0" FontWeight="Bold"/>
            <Button x:Name="btn_add_seam"   Click="btn_add_seam_Click"  Height="Auto" Width="150" Margin="5,5,3,5">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="/NOVISION Designer;component/iOS_Icons/icons8-thumbs-up.png" Width="30" Height="30" Margin="0"/>
                    <TextBlock Text="Add Good Region"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0" FontSize="12"/>
                </StackPanel>
            </Button>
            <Button x:Name="btn_add_color"  Click="btn_add_color_Click" Height="Auto" Width="150" Margin="3,5,5,5">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="/NOVISION Designer;component/iOS_Icons/icons8-thumbs-down.png" Width="30" Height="30" Margin="0"/>
                    <TextBlock Text="Add Defect Region"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,0,0" FontSize="12"/>
                </StackPanel>
            </Button>


        </StackPanel>

        <Grid x:Name="bd_verify" Grid.Row="2" Margin="10,10,20,10" Visibility="Hidden" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal"  Height="60">
                <RadioButton x:Name="btn_solid"  Height="Auto"  FontFamily="Segoe UI" FontSize="12"  Foreground="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" FontWeight="Bold" Padding="10,4" IsChecked="True" Checked="btn_solid_Checked" Unchecked="btn_solid_Unchecked" Margin="2" ToolTip="Move Image" Width="60" HorizontalContentAlignment="Center"  >


                    <Viewbox HorizontalAlignment="Center" Width="20" Height="20" Margin="5,0" VerticalAlignment="Center">
                        <Path Data="M6.58,19H14.58V22H6.58V19M19.74,11.6C19.55,11.4 19.29,11.28 19,11.28L18.78,11.31L15.58,13V11.83L16.09,2.9C16.12,2.35 15.7,1.87 15.15,1.84C14.6,1.81 14.12,2.23 14.09,2.78L13.82,7.47H13.58L12.54,7.58V2A1,1 0 0,0 11.54,1C11,1 10.54,1.45 10.54,2V8.41L9.72,8.78L9.03,3.32C8.96,2.77 8.46,2.38 7.91,2.45C7.36,2.5 6.97,3 7.04,3.57L7.81,9.63L7.43,9.8C7.3,9.85 7.18,9.93 7.07,10L5.97,6.11C5.81,5.54 5.25,5.2 4.71,5.34C4.18,5.5 3.88,6.08 4.04,6.65L6.61,15.77C6.61,15.8 6.63,15.84 6.64,15.87L6.67,16H6.68C6.9,16.57 7.47,17 8.08,17H14.58C14.97,17 15.32,16.84 15.58,16.57L20.5,12.37L19.74,11.6Z" Fill="White" />
                    </Viewbox>

                </RadioButton>

                <RadioButton x:Name="btn_gradient"   Height="Auto"  FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="10,4" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" Checked="btn_gradient_Checked" Margin="2" ToolTip="Brush" HorizontalContentAlignment="Center" Width="60" >



                    <Viewbox HorizontalAlignment="Left" Width="20" Height="20" Margin="5,0" VerticalAlignment="Center">
                        <Path Fill="White" Data="M20.71,4.63L19.37,3.29C19,2.9 18.35,2.9 17.96,3.29L9,12.25L11.75,15L20.71,6.04C21.1,5.65 21.1,5 20.71,4.63M7,14A3,3 0 0,0 4,17C4,18.31 2.84,19 2,19C2.92,20.22 4.5,21 6,21A4,4 0 0,0 10,17A3,3 0 0,0 7,14Z" >
                            
                        </Path>
                    </Viewbox>

                </RadioButton>
                <RadioButton x:Name="btn_eraser"  Height="Auto" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="10,4" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" Checked="btn_eraser_Checked" Margin="2" ToolTip="Eraser" HorizontalContentAlignment="Center" Width="60" >


                    <Viewbox HorizontalAlignment="Left" Width="20" Height="20" Margin="5,0" VerticalAlignment="Center">
                        <Path Fill="White" Data="M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z"  />
                    </Viewbox>

                </RadioButton>

                <RadioButton x:Name="rad_move"    Height="Auto"  FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="10,4" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"  Margin="2" ToolTip="Move Mask" Checked="rad_move_Checked" Unchecked="rad_move_Unchecked" HorizontalContentAlignment="Center" Width="60" >



                    <Viewbox HorizontalAlignment="Left" Width="20" Height="20" Margin="5,0" VerticalAlignment="Center">
                        <Path Data="M9.5,13.09L10.91,14.5 6.41,19 10,19 10,21 3,21 3,14 5,14 5,17.59 9.5,13.09 M10.91,9.5L9.5,10.91 5,6.41 5,10 3,10 3,3 10,3 10,5 6.41,5 10.91,9.5 M14.5,13.09L19,17.59 19,14 21,14 21,21 14,21 14,19 17.59,19 13.09,14.5 14.5,13.09 M13.09,9.5L17.59,5 14,5 14,3 21,3 21,10 19,10 19,6.41 14.5,10.91 13.09,9.5z" Fill="White"/>
                    </Viewbox>

                </RadioButton>
                <Rectangle Width="16"></Rectangle>
                <dx:SimpleButton x:Name="btn_clear" HorizontalAlignment="Right" 
                                Glyph="{dx:DXImage 'SvgImages/Dashboards/ResetLayoutOptions.svg'}"
                                 Width="120" Height="60"
                                 Click="btn_clear_Click"  Content="Clear"  />

                <Slider x:Name="sld_brushsize" Value="{Binding BrushSize}" Width="150" 
                        HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Margin="10,22" Minimum="1" Maximum="200"/>
                <Misc:NumericUpDownWithKeyboard VerticalAlignment="Center"  Value="{Binding Value, ElementName=sld_brushsize}">
                    
                </Misc:NumericUpDownWithKeyboard>


            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">

                <dx:SimpleButton x:Name="btn_ok" HorizontalAlignment="Right" 
                                 Width="120" Height="60"
                                 Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_CheckCircled.svg'}"
                                Click="btn_ok_Click"  Margin="10,5" Background="#FF272727" Content="Accept"/>
                <dx:SimpleButton x:Name="btn_cancel" HorizontalAlignment="Right" 
                                 Glyph="{dx:DXImage 'SvgImages/Outlook Inspired/Cancel.svg'}"
                                 Margin="10,5" Width="120" Height="60"   
                          Click="btn_cancel_Click"  Background="{DynamicResource RedIOS}" 
                                 Content="Cancel" />
            </StackPanel>

        </Grid>
        <dx:BackgroundPanel x:Name="training_grid" HorizontalAlignment="Center"  Padding="16" VerticalAlignment="Center" d:Visibility="Visible"   
                Visibility="Hidden"
                BorderThickness="1"  Grid.RowSpan="2" Grid.ColumnSpan="2" d:IsHidden="True">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid>
                    <Label Content="Training" FontWeight="SemiBold" FontSize="14" HorizontalContentAlignment="Center" />

                </Grid>
                <!--<dx:WaitIndicator x:Name="loading" Content="Training ..." Background="WhiteSmoke" Visibility="Visible" DeferedVisibility="True"/>-->
                <Button Content="Cancel" HorizontalAlignment="Center" Margin="0,10,0,0" Click="btn_cancel_train_Click"/>
                
            </StackPanel>
        </dx:BackgroundPanel>
        <!--<dx:WaitIndicator x:Name="loading"   Grid.RowSpan="2" Grid.ColumnSpan="2" d:IsHidden="True"/>-->
        <dx:BackgroundPanel Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" 
                Margin="0,2,2,0"  BorderThickness="1" BorderBrush="#20DADADA">
            <StackPanel Orientation="Horizontal" >
                <StackPanel Margin="0,2,2,2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Label Content="Opacity" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    <Slider x:Name="slider_opacity" Style="{x:Null}" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" />

                </StackPanel>
                
                <dxe:PopupColorEdit x:Name="color_selected" Color="{Binding Color, Converter={StaticResource StringToColor},Mode=TwoWay}" HorizontalAlignment="Center" Margin="2,0" VerticalAlignment="Center" Height="30"/>


                <Button  x:Name="btn_pen"  Click="btn_pen_Click"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,5,0" Height="30" Padding="0" Width="30"   >
                    <Image Width="20" Height="20" Source="/NOVISION Designer;component/OfficeIcons/icons8-Edit-64.png"/>
                </Button>
                <Button x:Name="btn_zoom_in"  Click="btn_zoom_in_Click"  HorizontalAlignment="Center" VerticalAlignment="Center"  Width="30" Height="30"  Padding="0" Margin="2">
                    <Image Source="{dx:DXImage SvgImages/Zoom/ZoomIn.svg}" Width="20" Height="20">

                    </Image>
                </Button>
                <Button x:Name="btn_zoom_out" Click="btn_zoom_out_Click"  HorizontalAlignment="Center" VerticalAlignment="Center"  Width="30" Height="30"  Padding="0" Margin="2" >
                    <Image Source="{dx:DXImage SvgImages/Spreadsheet/ZoomOut.svg}" Width="20" Height="20"></Image>
                </Button>
                <Button x:Name="btn_fit"  Click="btn_fit_Click" HorizontalAlignment="Center" VerticalAlignment="Center"  Width="30" Height="30" Padding="0" Margin="2">
                    <Image Source="{dx:DXImage SvgImages/Dashboards/GridResetColumnWidths.svg}" Width="20" Height="20"></Image>
                </Button>

            </StackPanel>
        </dx:BackgroundPanel>


    </Grid>

</dx:ThemedWindow>

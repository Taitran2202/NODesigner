<Window x:Class="NOVisionDesigner.Designer.Windows.OCRValidationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local1="clr-namespace:NOVisionDesigner.Designer.ValueConverters"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet" xmlns:controls="clr-namespace:NOVisionDesigner.Designer.Controls" 
        xmlns:diagram="clr-namespace:NOVisionDesigner.Designer.Diagram" xmlns:misc="clr-namespace:NOVisionDesigner.Designer.Misc"
        mc:Ignorable="d"
        Title="OCRValidationWindow" Height="768" Width="988">
    <Window.Resources>

        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local1:StringToColor x:Key="StringToColor"/>
        <DataTemplate x:Key="DataTemplate1">
            <Grid >
                <Grid  IsEnabled="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                    <Grid Width="5" Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Blue"></Grid>
                    <CheckBox IsChecked="{Binding NG}" Margin="6,0,0,0">NG</CheckBox>
                    <TextBox Width="75" Text="{Binding Name}" HorizontalAlignment="Left" Margin="50,0,0,0" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <dxe:PopupColorEdit DisplayMode="Color"   Color="{Binding Color, Converter={StaticResource StringToColor}, Mode=TwoWay}" />
                        <!--<Button Margin="4,0,0,0" Padding="4" BorderThickness="0" Background="Transparent" Click="Button_Click">
                            <Viewbox Width="15" Height="15">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                </Canvas>
                            </Viewbox>
                        </Button>-->
                    </StackPanel>

                </Grid>
            </Grid>



        </DataTemplate>

        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="#FFFDFDFD"/>


                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                    <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Padding" Value="6,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}"   >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FF0086E2"/>
                                        <Setter Property="Foreground" Value="White"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>

        <Style TargetType="{x:Type Button}" >
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Padding" Value="8,4"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="#FFE2E2E2"/>
                </Style>
            </Style.BasedOn>
        </Style>
    </Window.Resources>
    <Window.InputBindings>

    </Window.InputBindings>
    <Grid >


        <Grid Grid.Row="1" Background="#FFF9F9F9">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0"  Focusable="True" ClipToBounds="True" Margin="1">
                <HalconDotNet:HSmartWindowControlWPF Focusable="True"      HMoveContent="True"  HInitWindow="window_display_HInitWindow"   x:Name="window_display" Margin="0,0,0,2">

                </HalconDotNet:HSmartWindowControlWPF>

                <Label HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding ImageName}" Background="#7FFFFFFF" Padding="16,3" Visibility="Hidden"/>

                <ComboBox HorizontalAlignment="Left" x:Name="cmb_select_class" VerticalAlignment="Top" Style="{x:Null}" ItemsSource="{Binding Classlist}" SelectedValue="{Binding SelectedMarker.Annotation}" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ElementName=rad_edit}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock  VerticalAlignment="Center" Text="{Binding Name}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Border Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Top" Background="#FFE4E4E4" >
                    <Grid Margin="0">
                        
                        <StackPanel Margin="0,2,2,2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                            <!--<Rectangle Fill="#FFC9C9C9" Height="18" Width="1"></Rectangle>-->
                            <Label Content="Fontsize" VerticalAlignment="Center" Margin="5,0,5,0" FontWeight="Bold" FontFamily="Segoe UI Semibold" VerticalContentAlignment="Center"/>
                            <misc:NumericUpDownWithKeyboard Value="{Binding DisplayFontSize}"></misc:NumericUpDownWithKeyboard>      
                        </StackPanel>
                        
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,8,0">

                                <Label Content="Opacity" VerticalAlignment="Center" Margin="10,0,4,0" Padding="0,0,0,0"/>
                                <Slider x:Name="slider_opacity" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                                <Label Content="{Binding ColorOpacity}"  VerticalAlignment="Center" HorizontalContentAlignment="Right" Width="40"   ContentStringFormat="{}{0:0} %"/>
                            </StackPanel>
                        

                    </Grid>

                </Border>
            </Grid>
            <GridSplitter Background="Transparent" Width="1"></GridSplitter>
            <Border  Grid.Column="1" BorderBrush="#FFEAEAEA" BorderThickness="1,0,0,0">
                <StackPanel Margin="5">
                    <Grid Margin="2,0,0,0">
                        <Label Content="Models" VerticalAlignment="Bottom" FontSize="13" FontWeight="Bold"></Label>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0">

                            <Button Content="Add Model" Click="btn_add_model_click"/>
                        </StackPanel>
                    </Grid>


                    <ListBox  VirtualizingPanel.IsVirtualizing="True" Padding="0"   VirtualizingPanel.VirtualizationMode ="Standard" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  ScrollViewer.CanContentScroll="True" x:Name="lst_view" Background="#FFFBFBFB"   Grid.Column="1" BorderBrush="#FFDADADA" Margin="0,5,0,0" VerticalAlignment="Top" Height="150">

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True" >
                                        <Setter Property="Background" Value="#FF0082EE" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True" >
                                        <Setter Property="Background" Value="#FF108DF5" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>

                            <DataTemplate >

                                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White" Margin="2">
                                    <Grid Background="{x:Null}" HorizontalAlignment="Stretch">
                                        <Label VerticalAlignment="Center">
                                            <TextBlock Margin="5,0,0,2" TextTrimming="CharacterEllipsis"  MaxWidth="78" HorizontalAlignment="Left" Text="{Binding Name}" />
                                        </Label>

                                        <Button x:Name="btn_remove" Background="Transparent" Margin="0,0,2,0" Padding="2" BorderThickness="0" VerticalAlignment="Center"  HorizontalAlignment="Right"  Click="btn_remove_Click">
                                            <Viewbox Width="15" Height="15">
                                                <Canvas Width="24" Height="24">
                                                    <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </Button>
                                    </Grid>

                                </StackPanel>




                            </DataTemplate>

                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel HorizontalAlignment="Stretch" Margin="0" Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <StackPanel x:Name="stack_properties" Margin="5" DataContext="{Binding SelectedItem, ElementName=lst_view}">
                        <Grid >
                            <Label Content="Name" FontWeight="Bold"/>
                            <TextBox Text="{Binding Name}" Margin="5,0,0,0" HorizontalAlignment="Right" Width="150"/>
                        </Grid>

                        <StackPanel Margin="0,10,0,0">
                            <Grid >
                                <Label Content="Model View" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <dx:DropDownButton Content="Sort">
                                        <StackPanel>
                                            <Button HorizontalContentAlignment="Left" Click="btn_sort_left_to_right" Content="Left to right"/>
                                            <Button HorizontalContentAlignment="Left" Click="btn_sort_right_to_left" Content="Right to left"/>
                                        </StackPanel>

                                    </dx:DropDownButton>
                                    <Button x:Name="btn_edit_group_model" Click="btn_edit_group_model_Click" Content="Edit" Margin="5,0,0,0"  />
                                </StackPanel>

                            </Grid>
                            <Border Height="100" Background="#FFF1F1F1" Margin="0,5,0,0">
                                <diagram:DiagramDesigner x:Name="model_view"   Model="{Binding .}"></diagram:DiagramDesigner>
                            </Border>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Margin="0,10,0,0" >
                            <Grid>
                                <Label Content="Group validation list" FontWeight="Bold" VerticalAlignment="Center"/>
                                <Button x:Name="btn_add_group" Click="btn_add_group_Click" Content="Add group" HorizontalAlignment="Right"/>

                            </Grid>

                            <ListBox x:Name="listBox" ItemsSource="{Binding GroupValidationList}" MinHeight="80" Margin="0,4,0,0" >
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="Background" Value="#FF0082EE" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True" >
                                                <Setter Property="Background" Value="#FF108DF5" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>

                                    <DataTemplate >

                                        <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White" Margin="2">
                                            <Grid Background="{x:Null}" HorizontalAlignment="Stretch">
                                                <Label VerticalAlignment="Center">
                                                    <TextBlock Margin="5,0,0,2" TextTrimming="CharacterEllipsis"  MaxWidth="78" HorizontalAlignment="Left" Text="{Binding Name}" />
                                                </Label>

                                                <Button x:Name="btn_remove_group" Background="Transparent" Margin="0,0,2,0" Padding="2" BorderThickness="0" VerticalAlignment="Center"  HorizontalAlignment="Right"  Click="btn_remove_group_Click">
                                                    <Viewbox Width="15" Height="15">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>
                                            </Grid>

                                        </StackPanel>




                                    </DataTemplate>

                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel HorizontalAlignment="Stretch" Margin="0" Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>


                        </StackPanel>

                    </StackPanel>
                    <Border  Padding="5" BorderThickness="1" Background="#FFF0F0F0" BorderBrush="#FFE0E0E0" Margin="5">
                        <StackPanel x:Name="stack_group" DataContext="{Binding SelectedItem, ElementName=listBox}">
                            <StackPanel>
                                <Grid >
                                    <Label Content="Group name" FontWeight="Bold"/>
                                    <TextBox Text="{Binding Name}" Margin="5,0,0,0" HorizontalAlignment="Right" Width="150"/>
                                </Grid>
                                <Grid Margin="0,6,0,2">
                                    <Label Content="Character order" VerticalAlignment="Center"/>
                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <dx:SimpleButton Glyph="{dx:DXImage SvgImages/Icon Builder/Actions_Add.svg}" x:Name="btn_add_char_order" Margin="2,0" Click="btn_add_char_order_Click"  GlyphHeight="25"></dx:SimpleButton>
                                        <dx:SimpleButton Glyph="{dx:DXImage SvgImages/Icon Builder/Actions_Remove.svg}" x:Name="btn_remove_char_order" Margin="2,0" Click="btn_remove_char_order_Click"  GlyphHeight="25"></dx:SimpleButton>
                                    </StackPanel>
                                    
                                </Grid>

                                <ListBox Height="Auto" ItemsSource="{Binding CharacterOrder}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" MinHeight="30">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal"  ></WrapPanel>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <misc:NumericUpDownWithKeyboard Value="{Binding Index}"  Minimum="0" Margin="4"></misc:NumericUpDownWithKeyboard>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                            
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>
        </Grid>
        <Rectangle VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="LightGray"></Rectangle>



        <!--<Border Visibility="{Binding IsTrainning, Converter={StaticResource BoolToVisibilityConverter}}" Padding="8" Background="WhiteSmoke" BorderBrush="#FFE0E0E0" BorderThickness="1" CornerRadius="4"  Grid.Row="1" HorizontalAlignment="Center" Width="229" Height="71" VerticalAlignment="Center">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Label Content="Trainning" HorizontalAlignment="Center" Margin="0,0,0,2"/>
                <Grid>
                    <ProgressBar x:Name="progress" Height="20"  MinWidth="200"/>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Value, ElementName=progress}"/>
                </Grid>

                <UniformGrid Columns="2" Width="400" Height="300" Margin="0,5,0,0" Visibility="Collapsed">
                    <HalconDotNet:HSmartWindowControlWPF x:Name="window_train1" Margin="0,0,2,0"/>
                    <HalconDotNet:HSmartWindowControlWPF x:Name="window_train2" Margin="2,0,0,0"/>
                </UniformGrid>
            </StackPanel>
        </Border>-->

    </Grid>
</Window>

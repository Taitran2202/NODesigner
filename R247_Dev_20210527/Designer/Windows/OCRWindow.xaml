<Window xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" 
        x:Class="NOVisionDesigner.Designer.Windows.OCRWindow"
        xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" 
        xmlns:local1="clr-namespace:NOVisionDesigner.Designer.ValueConverters" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:misc="clr-namespace:NOVisionDesigner.Designer.Misc" xmlns:ocr="clr-namespace:NOVisionDesigner.Designer.Nodes"
        mc:Ignorable="d"
        Title="OCRWindow" x:Name="OCR_Window" Height="800" Width="1600">
    <Window.Resources>
        <local:RadioBoolToIntConverter x:Key="radioBoolToIntConverter" />
        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local1:StringToColor x:Key="StringToColor"/>
        <DataTemplate x:Key="DataTemplate1">
            <Grid >
                <Grid  IsEnabled="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                    <Grid Width="5" Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Blue"></Grid>
                    <CheckBox IsChecked="{Binding NG}" Margin="6,0,0,0">NG</CheckBox>
                    <TextBox Width="75" Text="{Binding Name}" HorizontalAlignment="Left" Margin="50,0,0,0" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <dxe:PopupColorEdit DisplayMode="Color"   Color="{Binding Color, Converter={StaticResource StringToColor}, Mode=TwoWay}" />
                        <!--<Button Margin="4,0,0,0" Padding="4" BorderThickness="0" Background="Transparent" Click="Button_Click">
                            <Viewbox Width="15" Height="15">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                </Canvas>
                            </Viewbox>
                        </Button>-->
                    </StackPanel>

                </Grid>
            </Grid>



        </DataTemplate>

        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="Transparent"/>


                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                    <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="#FF4E4E4E"></Setter>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand" BorderThickness="{TemplateBinding BorderThickness}"  >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FF007AFF"/>
                                        <Setter Property="Foreground" Value="White"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>
        <Style TargetType="{x:Type Button}" >
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Padding" Value="8,4"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="#FFE2E2E2"/>
                </Style>
            </Style.BasedOn>
        </Style>
    </Window.Resources>
    <Window.InputBindings>

    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto">

            </RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <dxb:BarManager  Grid.Row="0" Margin="4,0,0,0"  HorizontalAlignment="Left">
            <dxb:BarManager.Bars>
                <dxb:Bar Caption="File" IsMainMenu="True">
                    <dxb:BarSubItem x:Name="biFile" Content="File" >
                        <dxb:BarButtonItem x:Name="biFileOpen" Content="Export models"/>
                        <dxb:BarButtonItem x:Name="biFileNew" Content="Import models"/>
                    </dxb:BarSubItem>
                    <dxb:BarSubItem Content="Layout" IsVisible="False">
                        <dxb:BarButtonItem Content="Load Layout"   Glyph="{dx:DXImage Images/Appearance/LoadTheme_16x16.png}"/>
                        <dxb:BarButtonItem Content="Save Layout"  Glyph="{dx:DXImage Images/Appearance/SaveTheme_16x16.png}" />
                    </dxb:BarSubItem>
                </dxb:Bar>


            </dxb:BarManager.Bars>
        </dxb:BarManager>
        <Border Grid.Row="1" BorderBrush="LightGray" BorderThickness="1" Margin="0,2,0,0">
            <Grid  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid x:Name="left">
                    <ListBox x:Name="lst_class" ItemTemplate="{DynamicResource DataTemplate1}" Visibility="Hidden" ItemsSource="{Binding ClassList}" SelectedItem="{Binding SelectedClass}"  VerticalAlignment="Top" Margin="0,2,0,0"  MinHeight="100" >
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                    <Border  Background="#FFECECEC" Padding="4">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <dx:DXTabControl SelectedIndex="0">
                                <dx:DXTabItem Header="Text Detection">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Button x:Name="btn_train" Content="Train detector" Margin="2" Padding="8,6" Background="White" BorderBrush="#FFE4E0E0" VerticalAlignment="Center" />



                                        </StackPanel>
                                        <Label Content="Train Options" Margin="5,5,0,0" FontFamily="Segoe UI Semibold"></Label>
                                        <StackPanel x:Name="stack_detection_train_options" Margin="15,0,10,0">
                                            <Grid VerticalAlignment="Stretch" Margin="0,2,0,2">
                                                <TextBlock Text="Model" VerticalAlignment="Center"/>
                                                <ComboBox HorizontalAlignment="Right" SelectedItem="{Binding ModelName}">
                                                    <ocr:OCRDETECTIONMODEL>mobilenetv2</ocr:OCRDETECTIONMODEL>
                                                    <ocr:OCRDETECTIONMODEL>vgg16</ocr:OCRDETECTIONMODEL>
                                                </ComboBox>
                                            </Grid>
                                            <CheckBox IsChecked="{Binding Augmentation}" Content="Augmentation" Margin="0,2,0,2" VerticalAlignment="Center" FontFamily="Segoe UI" FontWeight="Medium"/>

                                            <StackPanel x:Name="stack_detection_augmentation" Margin="4,0">
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Rotation (degree)" IsChecked="{Binding Rotation}" HorizontalAlignment="Left"  VerticalAlignment="Center"></CheckBox>
                                                    <misc:NumericUpDownWithKeyboard Interval="1" HorizontalAlignment="Right" Value="{Binding RotationRange}" VerticalAlignment="Stretch"></misc:NumericUpDownWithKeyboard>
                                                </Grid>
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Brightness (%)" IsChecked="{Binding Brightness}" HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                    <misc:NumericUpDownWithKeyboard Interval="0.01" HorizontalAlignment="Right" Value="{Binding BrightnessRange}" StringFormat="{}{0:P0}" VerticalAlignment="Stretch"></misc:NumericUpDownWithKeyboard>
                                                </Grid>
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Horizontal Flip" IsChecked="{Binding HorizontalFlip}" HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                </Grid>
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Vertical Flip" IsChecked="{Binding VerticalFlip}" HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                </Grid>

                                            </StackPanel>

                                        </StackPanel>
                                    </StackPanel>
                                </dx:DXTabItem>
                                <dx:DXTabItem Header="Text Recognition" >
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">

                                            <Button x:Name="btn_train_classifier" Content="Train recognition" Margin="2" Padding="8,6" VerticalAlignment="Center"  />



                                        </StackPanel>
                                        <Label Content="Train Options" Margin="5,5,0,0" FontFamily="Segoe UI Semibold"></Label>
                                        <StackPanel x:Name="stack_classifier_train_options" Margin="15,0,10,0">
                                            <Grid VerticalAlignment="Stretch" Margin="0,2,0,2">
                                                <TextBlock Text="Model" VerticalAlignment="Center"/>
                                                <ComboBox HorizontalAlignment="Right" SelectedItem="{Binding ModelName}">
                                                    <ocr:OCRCLASSIFICATIONMODEL>resnet</ocr:OCRCLASSIFICATIONMODEL>
                                                </ComboBox>
                                            </Grid>
                                            <CheckBox IsChecked="{Binding Augmentation}" Content="Augmentation" Margin="0,2,0,2" VerticalAlignment="Center" FontFamily="Segoe UI" FontWeight="Medium"/>

                                            <StackPanel x:Name="stack_classifier_augmentation" Margin="4,0">
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Rotation (degree)" IsChecked="{Binding Rotation}" HorizontalAlignment="Left"  VerticalAlignment="Center"></CheckBox>
                                                    <misc:NumericUpDownWithKeyboard Interval="1" HorizontalAlignment="Right" Value="{Binding RotationRange}" VerticalAlignment="Stretch"></misc:NumericUpDownWithKeyboard>
                                                </Grid>
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Brightness (%)" IsChecked="{Binding Brightness}" HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                    <misc:NumericUpDownWithKeyboard Interval="0.01" HorizontalAlignment="Right" Value="{Binding BrightnessRange}" StringFormat="{}{0:P0}" VerticalAlignment="Stretch"></misc:NumericUpDownWithKeyboard>
                                                </Grid>
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Horizontal Flip" IsChecked="{Binding HorizontalFlip}" HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                </Grid>
                                                <Grid Margin="2,2,2,2">
                                                    <CheckBox Content="Vertical Flip" IsChecked="{Binding VerticalFlip}" HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                </Grid>

                                            </StackPanel>

                                        </StackPanel>
                                    </StackPanel>

                                </dx:DXTabItem>
                            </dx:DXTabControl>

                            <StackPanel Orientation="Vertical" x:Name="stack_properties">
                                <Label Content="Detection" Margin="5,5,0,0" FontFamily="Segoe UI Semibold"></Label>
                                <StackPanel  Margin="2"  Orientation="Vertical" >
                                    <Grid Margin="2,2,2,2">
                                        <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Text Threshold" Margin="2,4,0,0" />
                                        <misc:NumericUpDownWithKeyboard Minimum="0" Maximum="255" Value="{Binding TextThreshold, Mode=TwoWay}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </Grid>
                                    <Grid Margin="2,2,2,2">
                                        <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Link Threshold" Margin="2,4,0,0" />
                                        <misc:NumericUpDownWithKeyboard Minimum="0" Maximum="255" Value="{Binding LinkThreshold, Mode=TwoWay}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </Grid>

                                    <Grid Margin="2,2,2,2">
                                        <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Min Size" Margin="2,4,0,0" />
                                        <misc:NumericUpDownWithKeyboard  Minimum="0" Maximum="999" Value="{Binding MinSize, Mode=TwoWay}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </Grid>
                                    <Grid Margin="2,2,2,2">
                                        <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Text Height" Margin="2,4,0,0" />
                                        <misc:NumericUpDownWithKeyboard Minimum="0" Maximum="999" Value="{Binding TextHeight, Mode=TwoWay}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </Grid>
                                    <Grid Margin="2,2,2,2">
                                        <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Text Width" Margin="2,4,0,0" />
                                        <misc:NumericUpDownWithKeyboard  Minimum="0" Maximum="999" Value="{Binding MinWidth, Mode=TwoWay}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </Grid>

                                </StackPanel>
                                <Label Content="Recognition" Margin="5,5,0,0" FontFamily="Segoe UI Semibold"></Label>
                                <StackPanel  Margin="2"  Orientation="Vertical" >
                                    <Grid Margin="2,2,2,2">
                                        <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Confidence" Margin="2,4,0,0" />
                                        <misc:NumericUpDownWithKeyboard  Minimum="0" Maximum="100" Value="{Binding Confidence, Mode=TwoWay}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </Grid>




                                </StackPanel>
                            </StackPanel>

                        </StackPanel>
                    </Border>
                </Grid>
                <Grid x:Name="right" Grid.Column="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="160"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" PreviewKeyDown="Grid_PreviewKeyDown" Focusable="True" ClipToBounds="True" >
                            <HalconDotNet:HSmartWindowControlWPF Focusable="True"      HMoveContent="True"  HInitWindow="window_display_HInitWindow"   x:Name="window_display" Margin="0,0,0,2">

                            </HalconDotNet:HSmartWindowControlWPF>
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="#FFECECEC">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">


                                    <Border VerticalAlignment="Stretch"   BorderThickness="1,1,1,1">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                                            <StackPanel Orientation="Horizontal" Margin="4,2,2,2">


                                                <Button x:Name="btn_undo" ToolTip="undo"  Click="btn_undo_Click" VerticalAlignment="Stretch" Background="Transparent">
                                                    <Viewbox Width="15" Height="15">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Data="M13.5,7A6.5,6.5,0,0,1,20,13.5A6.5,6.5,0,0,1,13.5,20L10,20 10,18 13.5,18C16,18 18,16 18,13.5 18,11 16,9 13.5,9L7.83,9 10.91,12.09 9.5,13.5 4,8 9.5,2.5 10.92,3.91 7.83,7 13.5,7 M6,18L8,18 8,20 6,20 6,18z" Fill="#FF007AFF" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>
                                                <Button x:Name="btn_redo" ToolTip="redo"  Click="btn_redo_Click" VerticalAlignment="Stretch" Background="Transparent" Margin="0,0,10,0">
                                                    <Viewbox Width="15" Height="15">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Data="M10.5,7A6.5,6.5,0,0,0,4,13.5A6.5,6.5,0,0,0,10.5,20L14,20 14,18 10.5,18C8,18 6,16 6,13.5 6,11 8,9 10.5,9L16.17,9 13.09,12.09 14.5,13.5 20,8 14.5,2.5 13.08,3.91 16.17,7 10.5,7 M18,18L16,18 16,20 18,20 18,18z" Fill="#FF007AFF" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>

                                            </StackPanel>
                                            <Border VerticalAlignment="Stretch" Margin="0,2,0,2" BorderBrush="#FF0071DA" BorderThickness="1,1,1,1">
                                                <StackPanel Orientation="Horizontal" >
                                                    <RadioButton x:Name="btn_move"  FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="8,4" IsChecked="{Binding DrawingMode,Converter={StaticResource radioBoolToIntConverter},ConverterParameter=0,Mode=TwoWay}" ToolTip="Move Image"  VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                                                        <StackPanel Orientation="Horizontal">


                                                            <Viewbox HorizontalAlignment="Center" Width="12" Height="12"  VerticalAlignment="Center">
                                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}, Mode=FindAncestor}}" Data="M6.58,19H14.58V22H6.58V19M19.74,11.6C19.55,11.4 19.29,11.28 19,11.28L18.78,11.31L15.58,13V11.83L16.09,2.9C16.12,2.35 15.7,1.87 15.15,1.84C14.6,1.81 14.12,2.23 14.09,2.78L13.82,7.47H13.58L12.54,7.58V2A1,1 0 0,0 11.54,1C11,1 10.54,1.45 10.54,2V8.41L9.72,8.78L9.03,3.32C8.96,2.77 8.46,2.38 7.91,2.45C7.36,2.5 6.97,3 7.04,3.57L7.81,9.63L7.43,9.8C7.3,9.85 7.18,9.93 7.07,10L5.97,6.11C5.81,5.54 5.25,5.2 4.71,5.34C4.18,5.5 3.88,6.08 4.04,6.65L6.61,15.77C6.61,15.8 6.63,15.84 6.64,15.87L6.67,16H6.68C6.9,16.57 7.47,17 8.08,17H14.58C14.97,17 15.32,16.84 15.58,16.57L20.5,12.37L19.74,11.6Z" />
                                                            </Viewbox>
                                                        </StackPanel>
                                                    </RadioButton>

                                                    <RadioButton x:Name="btn_gradient" IsChecked="{Binding DrawingMode,Converter={StaticResource radioBoolToIntConverter},ConverterParameter=2,Mode=TwoWay}"  FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="8,4" ToolTip="Brush" VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                                                        <StackPanel Orientation="Horizontal">


                                                            <Viewbox HorizontalAlignment="Center" Width="12" Height="12"  VerticalAlignment="Center">
                                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}, Mode=FindAncestor}}" Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                                                            </Viewbox>
                                                        </StackPanel>
                                                    </RadioButton>
                                                    <RadioButton x:Name="btn_eraser" IsChecked="{Binding DrawingMode,Converter={StaticResource radioBoolToIntConverter},ConverterParameter=3,Mode=TwoWay}" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="8,4" ToolTip="Eraser" VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                                                        <StackPanel Orientation="Horizontal">


                                                            <Viewbox HorizontalAlignment="Center" Width="12" Height="12"  VerticalAlignment="Center">
                                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}, Mode=FindAncestor}}" Data="M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z"  />
                                                            </Viewbox>
                                                        </StackPanel>
                                                    </RadioButton>
                                                </StackPanel>
                                            </Border>
                                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ElementName=rad_edit}">
                                                <Label Content="Selected character" FontWeight="Bold" VerticalAlignment="Center" Margin="16,0"></Label>
                                                <ComboBox HorizontalAlignment="Left" x:Name="cmb_select_class" Margin="0,0" VerticalAlignment="Center" Style="{x:Null}" ItemsSource="{Binding Classlist}" SelectedValue="{Binding SelectedMarker.Annotation}" >
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock  VerticalAlignment="Center" Text="{Binding Name}"></TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </StackPanel>

                                        </StackPanel>


                                    </Border>

                                </StackPanel>
                                <Border BorderThickness="1" BorderBrush="{DynamicResource BlueIOS}" HorizontalAlignment="Center"  Margin="2">
                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton x:Name="rad_edit" Content="Edit" Width="50" HorizontalContentAlignment="Center" IsChecked="True" Cursor="Hand"/>
                                        <RadioButton x:Name="rad_view" Content="View" Width="50" HorizontalContentAlignment="Center" IsChecked="False" Cursor="Hand"/>

                                    </StackPanel>
                                </Border>

                                <Border Margin="0,2,4,2" Padding="4" HorizontalAlignment="Right" VerticalAlignment="Center"   >
                                    <StackPanel Orientation="Horizontal">

                                        <Label Content="Opacity" VerticalAlignment="Center" Margin="10,0,4,0" Padding="0,0,0,0"/>
                                        <Slider x:Name="slider_opacity" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                                        <Label Content="{Binding ColorOpacity}"  VerticalAlignment="Center" HorizontalContentAlignment="Right" Width="40"   ContentStringFormat="{}{0:0} %"/>
                                    </StackPanel>
                                </Border>
                            </Grid>




                        </Grid>
                        <Grid Margin="5" Grid.Column="1">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="0,0,0,0">
                                <dx:DropDownButton Content="Add images">
                                    <StackPanel>
                                        <Button x:Name="btn_add_image" HorizontalContentAlignment="Left" Content="From files"/>
                                        <Button x:Name="btn_add_image_camera" HorizontalContentAlignment="Left" Visibility="Collapsed" Content="From camera"/>
                                        <Button x:Name="btn_add_current_result" HorizontalContentAlignment="Left" Content="From Input Image"/>
                                    </StackPanel>

                                </dx:DropDownButton>
                            </StackPanel>

                            <ListBox VirtualizingPanel.IsVirtualizing="True" Padding="0"   VirtualizingPanel.VirtualizationMode ="Standard" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  ScrollViewer.CanContentScroll="True" x:Name="lst_view" Background="#FFFBFBFB" ItemsSource="{Binding ListImage}" SelectionChanged="lst_view_SelectionChanged" Grid.Column="1" BorderBrush="#FFDADADA" Margin="0,28,0,0">

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Background" Value="LightGray" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="Background" Value="{DynamicResource BlueIOS}" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True" >
                                                <Setter Property="Background" Value="{DynamicResource BlueIOS}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>

                                    <DataTemplate >

                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="WhiteSmoke" Margin="4">
                                            <Grid Background="#7FD3D3D3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <StackPanel Orientation="Horizontal">

                                                    <Label VerticalAlignment="Center">
                                                        <TextBlock TextTrimming="CharacterEllipsis" Margin="6,2"  MaxWidth="80" HorizontalAlignment="Left" Text="{Binding FileName}" />
                                                    </Label>
                                                </StackPanel>


                                                <Button x:Name="btn_remove" Background="Transparent" Margin="0,0,2,0" Padding="2" BorderThickness="0" VerticalAlignment="Center"  HorizontalAlignment="Right"  Click="btn_remove_Click">
                                                    <Viewbox Width="15" Height="15">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>
                                            </Grid>
                                            <Rectangle Height="1" Fill="LightGray"></Rectangle>
                                            <Image   Height="100" Stretch="Uniform"   >
                                                <Image.Source>

                                                    <BitmapImage DecodePixelHeight="100"  CacheOption="OnLoad" 
                                            UriSource="{Binding FullPath}"  />
                                                </Image.Source>
                                            </Image>
                                        </StackPanel>




                                    </DataTemplate>

                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel  VirtualizingPanel.IsContainerVirtualizable="True"
    VirtualizingPanel.IsVirtualizing="True"  HorizontalAlignment="Stretch" Margin="0" Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>

                        </Grid>
                        <GridSplitter Width="1" Grid.Column="1" HorizontalAlignment="Left" Background="Transparent"  ></GridSplitter>
                        <Rectangle Width="1" VerticalAlignment="Stretch" Grid.Column="0" HorizontalAlignment="Left" Fill="LightGray"></Rectangle>
                    </Grid>
                </Grid>
                <GridSplitter Grid.Column="0" HorizontalAlignment="Right" Width="1" Background="Transparent"/>
                <Border x:Name="box_step_classifier"  Padding="8" Background="WhiteSmoke" BorderBrush="#FFE0E0E0" BorderThickness="1" CornerRadius="4" Visibility="Hidden" Height="107" VerticalAlignment="Center" HorizontalAlignment="Center" Width="137" Grid.ColumnSpan="2" Grid.RowSpan="1">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label Content="Number of step" HorizontalAlignment="Center" Margin="0,0,0,2"/>
                        <dxe:SpinEdit x:Name="spin_step_classifier" Height="30" Value="100" MinValue="1" IsFloatValue="False" MaxValue="10000"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,4,0,0">
                            <Button x:Name="btn_step_ok_classifier" Width="55" Content="OK"/>
                            <Button x:Name="btn_step_cancel_classifier" Width="55" Content="Cancel"/>
                        </StackPanel>


                    </StackPanel>
                </Border>
                <Border x:Name="box_step"  Padding="8" Background="WhiteSmoke" BorderBrush="#FFE0E0E0" BorderThickness="1" CornerRadius="4" Visibility="Hidden" HorizontalAlignment="Center" Width="137" Height="107" VerticalAlignment="Center" Grid.ColumnSpan="2">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label Content="Number of step" HorizontalAlignment="Center" Margin="0,0,0,2"/>
                        <dxe:SpinEdit x:Name="spin_step" Height="30" Value="100" MinValue="1" IsFloatValue="False" MaxValue="10000"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,4,0,0">
                            <Button x:Name="btn_step_ok" Width="55" Content="OK"/>
                            <Button x:Name="btn_step_cancel" Width="55" Content="Cancel"/>
                        </StackPanel>


                    </StackPanel>
                </Border>
                <Border HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsTrainning, Converter={StaticResource BoolToVisibilityConverter}}" Padding="8" Background="WhiteSmoke" BorderBrush="#FFE0E0E0" BorderThickness="1" CornerRadius="4" Grid.ColumnSpan="2">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label Content="Trainning" HorizontalAlignment="Center" Margin="0,0,0,2"/>
                        <Grid>
                            <ProgressBar x:Name="progress" Height="20"  MinWidth="200"/>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Value, ElementName=progress, StringFormat=N2}"/>
                        </Grid>
                        <UniformGrid Columns="2" Margin="0,10,0,0">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Accuracy"/>
                            <TextBlock x:Name="txt_acc" HorizontalAlignment="Center" VerticalAlignment="Center" Text="0"/>
                        </UniformGrid>
                    </StackPanel>
                </Border>

            </Grid>
        </Border>

    </Grid>

</Window>

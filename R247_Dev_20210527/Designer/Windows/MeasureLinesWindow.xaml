<Window x:Class="NOVisionDesigner.Designer.Windows.MeasureLinesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" 
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
        xmlns:local1="clr-namespace:NOVisionDesigner.Designer.Misc" 
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet"
        xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
        mc:Ignorable="d"
        Title="MeasureLinesWindow" Height="800" Width="1200" FontSize="14" WindowStartupLocation="CenterScreen">
    <Window.Resources>

        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local1:StringToColor x:Key="StringToColor"/>
        <DataTemplate x:Key="DataTemplate1">
            <Grid >
                <Grid  IsEnabled="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                    <Grid Width="5" Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Blue"></Grid>
                    <CheckBox IsChecked="{Binding NG}" Margin="6,0,0,0">NG</CheckBox>
                    <TextBox Width="75" Text="{Binding Name}" HorizontalAlignment="Left" Margin="50,0,0,0" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <dxe:PopupColorEdit DisplayMode="Color"   Color="{Binding Color, Converter={StaticResource StringToColor}, Mode=TwoWay}" />
                        <!--<Button Margin="4,0,0,0" Padding="4" BorderThickness="0" Background="Transparent" Click="Button_Click">
                            <Viewbox Width="15" Height="15">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                </Canvas>
                            </Viewbox>
                        </Button>-->
                    </StackPanel>

                </Grid>
            </Grid>



        </DataTemplate>

       
    </Window.Resources>
    <Window.InputBindings>

    </Window.InputBindings>
    <dx:BackgroundPanel  BorderThickness="0,1,0,0" BorderBrush="#20000000">
        

        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0"  Focusable="True" ClipToBounds="True" Margin="1">
                <HalconDotNet:HSmartWindowControlWPF Focusable="True" HDoubleClickToFitContent="False"     HMoveContent="True"  HInitWindow="window_display_HInitWindow"   x:Name="window_display" Margin="0,0,0,2">

                </HalconDotNet:HSmartWindowControlWPF>
                <dx:BackgroundPanel HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <Grid   >
                        <StackPanel  VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden" Orientation="Horizontal">
                            <Label Content="Opacity" VerticalAlignment="Center" Foreground="White" Margin="5,0,4,0" Padding="5,5,5,5"/>
                            <Slider x:Name="slider_opacity" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                            <Label Content="{Binding ColorOpacity}"  Foreground="White" VerticalAlignment="Center" Margin="2,0,0,0" ContentStringFormat="{}{0:000} %"/>

                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  >
                            <dx:SimpleButton GlyphHeight="25" VerticalAlignment="Center" Padding="4,4" Margin="2"  Click="btn_zoom_in_click"  
                                         HorizontalAlignment="Left"    Glyph="{dx:DXImage 'Office2013/Zoom/ZoomIn_32x32.png'}" ></dx:SimpleButton>
                            <dx:SimpleButton GlyphHeight="25" VerticalAlignment="Center" Padding="4,4" Margin="2"  Click="btn_zoom_out_click" HorizontalAlignment="Left"  Glyph="{dx:DXImage 'Office2013/Zoom/ZoomOut_32x32.png'}" ></dx:SimpleButton>
                            <dx:SimpleButton GlyphHeight="25" VerticalAlignment="Center" Padding="4,4" Margin="2"  Click="btn_zoom_fit_click" HorizontalAlignment="Left"  Glyph="{dx:DXImage 'Office2013/Zoom/Zoom100_32x32.png'}" ></dx:SimpleButton>

                        </StackPanel>
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Stretch" Margin="5,0,0,0">
                            <Button Content="Add Measure" Background="{DynamicResource YellowIOS}" 
                                    Style="{DynamicResource ButtonDarkMode}"
                                    Padding="8,4"
                                    Foreground="Black"
                                    Margin="2,4" VerticalAlignment="Stretch" Click="btn_add_model_click"/>
                        </StackPanel>

                        <!--<Button x:Name="btn_add_input" Padding="16,8" Style="{DynamicResource ButtonDarkMode}" Content="Add inputs" Background="{DynamicResource BlackIOS}" Margin="2"   HorizontalAlignment="Left" VerticalAlignment="Top"  Click="btn_add_input_Click" />-->
                        <StackPanel  Orientation="Horizontal" Margin="5" HorizontalAlignment="Right" VerticalAlignment="Center" >

                            <!--<Rectangle Fill="#FFC9C9C9" Height="18" Width="1"></Rectangle>-->
                            <Label Content="Fontsize"  Margin="8,0" VerticalAlignment="Center"   VerticalContentAlignment="Center"/>
                            <local1:NumericUpDownWithKeyboard Margin="0,0"  Value="{Binding DisplayFontSize,FallbackValue=12,Mode=TwoWay}" 
                                                          
                                                          VerticalAlignment="Center"  Minimum="12" Maximum="40" Interval="1"/>

                        </StackPanel>
                        <Rectangle Height="1" VerticalAlignment="Bottom" Fill="#20000000"></Rectangle>
                    </Grid>
                </dx:BackgroundPanel>
               
                

            </Grid>
            <GridSplitter Width="1" Background="Transparent"></GridSplitter>
            <Border  Grid.Column="1" BorderBrush="#20000000" BorderThickness="1,0,0,0">
                <StackPanel Margin="5">
                    <Grid Margin="2,0,0,0">
                        <Label Content="Measures" VerticalAlignment="Bottom"  FontWeight="SemiBold"></Label>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0">

                            
                        </StackPanel>
                    </Grid>


                    <ListBox  VirtualizingPanel.IsVirtualizing="True" Padding="0" ScrollViewer.CanContentScroll="False"  
                              VirtualizingPanel.VirtualizationMode ="Standard" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  
                              x:Name="lst_view" Grid.Column="1" 
                              Margin="0,5,0,0" VerticalAlignment="Top" Height="400">

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True" >
                                        <Setter Property="Background" Value="#FF0082EE" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True" >
                                        <Setter Property="Background" Value="#FF108DF5" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>

                            <DataTemplate >

                                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Margin="2">
                                    <Grid Background="{x:Null}" HorizontalAlignment="Stretch">
                                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="5,0,25,2">
                                            
                                            <Label VerticalAlignment="Center">
                                                <TextBlock  TextTrimming="CharacterEllipsis"   
                                                            Text="{Binding MeasureName}" />
                                            </Label>

                                        </StackPanel>
                                        
                                        <Button x:Name="btn_remove" Background="Transparent" 
                                                Margin="0,0,2,0" Padding="2" BorderThickness="0" 
                                                VerticalAlignment="Center"  HorizontalAlignment="Right" 
                                                Click="btn_remove_Click">
                                            <Viewbox Width="15" Height="15">
                                                <Canvas Width="24" Height="24">
                                                    <Path Fill="#efffffff" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </Button>
                                    </Grid>

                                </StackPanel>




                            </DataTemplate>

                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel HorizontalAlignment="Stretch" Margin="0" Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <StackPanel x:Name="stack_properties" Margin="5" DataContext="{Binding SelectedItem, ElementName=lst_view}">
                        <UniformGrid Columns="2" Margin="5,5,5,2" >
                            <Border BorderBrush="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}"
                                    BorderThickness="1" Padding="8,0">
                                <Label Content="Name"  />
                            </Border>

                            <local1:TextboxWithKeyboard Style="{DynamicResource TextboxwithkeyboardFlat}"  Text="{Binding MeasureName}" Margin="2,0,0,0" HorizontalAlignment="Stretch" MinWidth="150" />
                        </UniformGrid>
                        <UniformGrid Margin="5,2,5,2" Columns="2" >
                            <Border BorderBrush="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}"
                                    BorderThickness="1" Padding="8,0">
                                <Label Content="Distance mode"  />
                            </Border>
                            <ComboBox x:Name="cmb_mode" SelectedValue="{Binding Mode}"   
                                  VerticalAlignment="Stretch" MinWidth="120" Margin="2,0,0,0"   
                                  VerticalContentAlignment="Center" 
                                  HorizontalAlignment="Stretch">
                                <System:String>PointToPoint</System:String>
                                <System:String>PointToLine</System:String>
                                <System:String>LineToPoint</System:String>

                            </ComboBox>
                        </UniformGrid>
                        <UniformGrid Margin="5,2,5,2" Columns="2">
                            <Border BorderBrush="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Border}}"
                                    BorderThickness="1" Padding="8,0">
                                <Label Content="Display offset"  />
                            </Border>
                            <local1:NumericUpDownWithKeyboard MinWidth="150" Margin="2,0,0,0"  HorizontalAlignment="Stretch" Value="{Binding DisplayOffset}"  ></local1:NumericUpDownWithKeyboard>
                        </UniformGrid>
                        <StackPanel Margin="0,5,0,0">
                            <StackPanel Margin="5,0,5,0" >

                                <Label Content="Acceptance range" VerticalAlignment="Top" Margin="2,0,0,2" HorizontalAlignment="Stretch" />

                                <UniformGrid HorizontalAlignment="Stretch" Margin="0,8,0,0" Columns="3" Rows="2" VerticalAlignment="Stretch">
                                    <Label Content="Lower limit" 
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                          ></Label>

                                    <Label Content="Actual value" 
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                          ></Label>
                                    <Label Content="Higher limit" 
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                          ></Label>
                                    <local1:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                       HorizontalContentAlignment="Center" 
                                                                       Value="{Binding LowerValue}"  ></local1:NumericUpDownWithKeyboard>
                                    
                                        <dxe:TextEdit 
                                            HorizontalContentAlignment="Center" 
                                            IsReadOnly="True" HorizontalAlignment="Stretch" 
                                            Text="{Binding ActualValue,StringFormat=N2}"   ></dxe:TextEdit>
                                    
                                    
                                    <local1:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                       HorizontalContentAlignment="Center" 
                                                                       Value="{Binding UpperValue}"  ></local1:NumericUpDownWithKeyboard>
                                </UniformGrid>
                                <GroupBox Header="Help" Margin="0,16,0,0" Padding="4">
                                    <StackPanel>
                                        <Label Content="How to add measure:"  Padding="8,0" FontWeight="SemiBold"></Label>
                                        <TextBlock   Text="Click and select 2 lines in image then click Add Measure" Margin="12,0,4,0" TextWrapping="Wrap"></TextBlock>
                                       
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </StackPanel>

                        

                    </StackPanel>
                   
                </StackPanel>
            </Border>
        </Grid>
        
        

      
    </dx:BackgroundPanel>
</Window>

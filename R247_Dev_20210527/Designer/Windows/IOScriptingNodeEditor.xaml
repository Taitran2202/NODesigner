<dx:ThemedWindow x:Class="NOVisionDesigner.Designer.Windows.IOScriptingNodeEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:converter="clr-namespace:NOVisionDesigner.Designer.ValueConverters"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                 mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Script IO Editor" Height="500" 
                 WindowStyle="ToolWindow"
                 ShowGlow="False"
                 Width="450" FontSize="14" Closed="Window_Closed">
    <Window.Resources>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" Padding="4,0" FontWeight="Bold" VerticalAlignment="Center" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                    
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="flyoutInError" TargetType="{x:Type dxe:FlyoutControl}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="IsOpen" Value="True"/>

                </Trigger>
                <Trigger Property="Validation.HasError" Value="False">
                    <Setter Property="IsOpen" Value="False"/>

                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="0">
                <Label Margin="2" FontWeight="SemiBold" Content="Inputs" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                <StackPanel Margin="0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <!--<Button Margin="2" Background="White" BorderThickness="0" Padding="5" >
                        <Viewbox Width="18" Height="18">
                            <Canvas Width="24" Height="24">
                                <Path Fill="#1e1e1e" Data="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z" />
                            </Canvas>
                        </Viewbox>
                    </Button >
                    <Button Margin="2" Background="White" BorderThickness="0" Padding="5" >
                        <Viewbox Width="18" Height="18">
                            <Canvas Width="24" Height="24">
                                <Path Fill="#1e1e1e" Data="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" />
                            </Canvas>
                        </Viewbox>
                    </Button>-->
                    <dx:SimpleButton Margin="2" Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Add.svg'}" 
                                     GlyphHeight="20"
                                     Cursor="Hand"
                                     BorderThickness="0" Padding="4"  Click="btn_add_input_Click">

                    </dx:SimpleButton>

                </StackPanel>
            </Grid>
            <ListBox x:Name="lst_inputs" Grid.Row="1" Margin="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid IsEnabled="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="txt_input_name" Grid.Column="0" Margin="2,0" >
                                <TextBox.Text>
                                    <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
                                        ValidatesOnNotifyDataErrors="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                        <Binding.ValidationRules>
                                            <local:VariableNameValidationRule ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <dxe:FlyoutControl x:Name="flyout"  AllowMoveAnimation="False"   PlacementTarget="{Binding ElementName=txt_input_name}" HorizontalAlignment="Center" IsOpen="{Binding ElementName=txt_input_name,Path=(Validation.HasError)}" StaysOpen="True" >
                                <dxe:FlyoutControl.Settings >
                                    <dxe:FlyoutSettings Placement="Bottom"   IndicatorVerticalAlignment="Center" IndicatorHorizontalAlignment="Center" ShowIndicator="True"></dxe:FlyoutSettings>
                                </dxe:FlyoutControl.Settings>
                                <Grid>
                                    <TextBlock x:Name="txt_error" Text="{Binding ElementName=txt_input_name, Path=(Validation.Errors)/ErrorContent}"></TextBlock>
                                </Grid>
                            </dxe:FlyoutControl>
                            <!--<TextBox Grid.Column="0" Margin="2,0" Text="{Binding Name}"/>-->
                            <ComboBox Grid.Column="1" Margin="2,0" SelectedItem="{Binding ItemType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ListType}" 
                                      DisplayMemberPath="." HorizontalAlignment="Stretch" SelectionChanged="ComboBox_SelectionChanged"/>
                            <dx:SimpleButton Grid.Column="2"  Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Delete.svg'}" 
                                     GlyphHeight="20"
                                     Cursor="Hand" Margin="2,0"
                                     BorderThickness="0" Padding="2"  Click="btn_remove_input_Click"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>


                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <Grid Grid.Row="1" Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="0">
                <Label Margin="2" FontWeight="SemiBold" Content="Outputs" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <StackPanel Margin="0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <dx:SimpleButton Margin="2" Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Add.svg'}" 
                                     GlyphHeight="20"
                                     Cursor="Hand"
                                     BorderThickness="0" Padding="4"  Click="btn_add_output_Click">

                    </dx:SimpleButton>

                </StackPanel>
            </Grid>
            <ListBox x:Name="lst_outputs" Grid.Row="1" Margin="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid IsEnabled="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="txt_output_name" Grid.Column="0" Margin="2,0" >
                                <TextBox.Text>
                                    <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
                                        ValidatesOnNotifyDataErrors="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                        <Binding.ValidationRules>
                                            <local:VariableNameValidationRule ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <dxe:FlyoutControl x:Name="flyout1"  AllowMoveAnimation="False"   PlacementTarget="{Binding ElementName=txt_output_name}" HorizontalAlignment="Center" IsOpen="{Binding ElementName=txt_output_name,Path=(Validation.HasError)}" StaysOpen="True" >
                                <dxe:FlyoutControl.Settings >
                                    <dxe:FlyoutSettings Placement="Bottom"   IndicatorVerticalAlignment="Center" IndicatorHorizontalAlignment="Center" ShowIndicator="True"></dxe:FlyoutSettings>
                                </dxe:FlyoutControl.Settings>
                                <Grid>
                                    <TextBlock x:Name="txt_error1" Text="{Binding ElementName=txt_output_name, Path=(Validation.Errors)/ErrorContent}"></TextBlock>
                                </Grid>
                            </dxe:FlyoutControl>
                            <!--<TextBox Grid.Column="0" Margin="2,0" Text="{Binding Name}" />-->
                            <ComboBox Grid.Column="1" Margin="2,0" SelectedItem="{Binding ItemType}" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ListType}" DisplayMemberPath="." SelectionChanged="ComboBox_SelectionChanged_1" />
                            <dx:SimpleButton Grid.Column="2"  Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Delete.svg'}" 
                                     GlyphHeight="20"
                                     Cursor="Hand" Margin="2,0"
                                     BorderThickness="0" Padding="2"  Click="btn_remove_output_Click"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>


                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <StackPanel Grid.Row="2">
            <!--<Rectangle Height="25"/>-->
            <Grid Margin="2" Grid.Row="2" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button IsEnabled="{Binding Path=(Validation.HasError), Converter={StaticResource InverseBooleanConverter}}" Margin="2" Padding="0,10" Content="OK" Click="btn_ok_Click"/>
                <Button Grid.Column="1" Margin="2"  Content="Cancel" Click="btn_cancel_Click"/>
            </Grid>
        </StackPanel>

        <Border x:Name="bd_message" Visibility="Hidden" Grid.Row="0" Grid.RowSpan="2" Width="250" VerticalAlignment="Center" HorizontalAlignment="Center" Background="#fbfbfbfb">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Background="#ebebebeb">
                    <TextBlock Margin="5,2,2,2" FontWeight="SemiBold" HorizontalAlignment="Left" Text="Message"/>
                </Grid>
                <TextBlock Grid.Row="1" TextWrapping="Wrap" Margin="20,10,20,10" 
                           Text="Input/Ouput Type cannot be null. Please try again."/>
                <StackPanel Margin="2" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Margin="2" Content="OK" x:Name="btn_ok_message" Click="btn_ok_message_Click" />
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</dx:ThemedWindow>

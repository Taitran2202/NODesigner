<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows"
        xmlns:Controls="clr-namespace:NOVisionDesigner.Designer.Controls" xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
        xmlns:converters="clr-namespace:NOVisionDesigner.Designer.ValueConverters" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
        xmlns:Keyboard="clr-namespace:NOVisionDesigner.Designer.Misc" xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" x:Class="NOVisionDesigner.Designer.Windows.RegexEditorWindow.RegexWindow"
        mc:Ignorable="d"
        Title="RegexWindow" Height="720" Width="1280">
    <Window.Resources>
        <converters:StringToColor x:Key="StringToColor"/>
        <converters:InvertBoolToVisibilityVisible x:Key="BoolToVisibilityVisible"/>
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />

        <SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
        <SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />

        <SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />

        <RadialGradientBrush x:Key="Brush2">
            <GradientStop Color="#FF272727" Offset="1"/>
            <GradientStop Color="#FF292828"/>
        </RadialGradientBrush>
        <Color x:Key="ColorGlow">#FF51EAFF</Color>
        <Style x:Key="ButtonGlowNew" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="True" Margin="2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF20ACEE"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border x:Name="border_glow" CornerRadius="4" BorderThickness="0">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="drop_efect_glow" Color="{DynamicResource ColorGlow}" ShadowDepth="0"/>
                                </Border.Effect>
                                <Border.BorderBrush>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF84C6FD" Offset="0"/>
                                        <GradientStop Color="#FF00B9FF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground}"/>-->
                                <Setter Property="BorderThickness" TargetName="border_glow" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground_pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ForceCursor" Value="True"/>
        </Style>
        <DropShadowEffect x:Key="Drop1" x:Name="drop_efect_glow" ShadowDepth="0" Color="{DynamicResource ColorGlow}"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Path x:Name="ButtonPath"
                              Margin="3"
                              Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square"
                              StrokeEndLineCap="Square"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" Width="10" Height="10" Data="M0,0 L25,25 M0,25 L25,0"/>
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonHoverBackgroundBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonHoverForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonPressedBackgroundBrush}" />
                                <Setter TargetName="backgroundEllipse" Property="Stroke"
                                    Value="{DynamicResource TabItemCloseButtonPressedBorderBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonPressedForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="EditMouseOverBrush" Color="#FF3B78FB" />
        <SolidColorBrush x:Key="BrushEditMousePress" Color="#FF04049B" />
        <Style x:Key="ButtonStyleEdit" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Image  Width="10" Height="10" />
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource EditMouseOverBrush}" />

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource BrushEditMousePress}" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>

    <Grid Background="#fbfbfbfb" HorizontalAlignment="Stretch" Width="Auto" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1">
            <StackPanel x:Name="stack_workspace"  Orientation="Vertical" Margin="2" SizeChanged="stack_workspace_SizeChanged">
                <Expander Grid.Row="0" x:Name="xpd_regex_list" IsExpanded="True" Expanded="xpd_regex_list_Expanded" Collapsed="xpd_regex_list_Collapsed" Margin="2" LayoutUpdated="xpd_regex_list_LayoutUpdated">
                    <Expander.Header>
                        <TextBlock Text="REGEX LIST" FontWeight="Bold" Foreground="#344f71"/>
                    </Expander.Header>
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" >
                            <Label VerticalAlignment="Center" HorizontalAlignment="Left" Content="Add" />
                            <Button x:Name="btn_add_regex" VerticalAlignment="Center" Click="Btn_add_regex_Click" HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  Width="25" Height="25" Padding="0" BorderBrush="Transparent" Background="Transparent">
                                <Viewbox Width="15" Height="15">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="#FF575757" />
                                    </Canvas>
                                </Viewbox>
                            </Button>
                        </Grid>
                        <ListBox Grid.Row="1" x:Name="lst_regex" ItemsSource="{Binding regex}" ScrollViewer.CanContentScroll="True"  SelectionChanged="Lst_regex_SelectionChanged" >
                            <ListBox.ItemTemplate>
                                <DataTemplate >
                                    <Grid >
                                        <Grid  IsEnabled="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="30"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox Grid.Column="0" Text="{Binding Pattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated"/>
                                                <Button Grid.Column="1" Margin="4,0,0,0" Padding="4" Click="Button_Click" >
                                                    <Viewbox Width="15" Height="15">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter 
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Content="{TemplateBinding Content}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                Margin="{TemplateBinding Padding}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" Value="#e1e1e1"/>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True" >
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Black" />
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
                </Expander>
                <Expander Grid.Row="1" x:Name="xpd_match_result" IsExpanded="True" Collapsed="xpd_match_result_Collapsed" Expanded="xpd_match_result_Expanded" Margin="2">
                    <Expander.Header>
                        <TextBlock Text="MATCH INFORMATION" FontStretch="ExtraExpanded" FontWeight="Bold" Foreground="#344f71"/>
                    </Expander.Header>
                    <Grid Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="65*"/>
                            <ColumnDefinition Width="101*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <RichTextBox x:Name="rtb_match" Grid.Row="0" IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Top" Width="auto" Grid.ColumnSpan="2">
                            <FlowDocument>
                                <Paragraph Padding="5" x:Name="prgp_match"/>
                            </FlowDocument>
                        </RichTextBox>
                        <ListBox Grid.Row="1" x:Name="lst_result" ScrollViewer.CanContentScroll="True" SelectionChanged="lst_result_SelectionChanged" Grid.ColumnSpan="2" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <Border x:Name="bd_item_result" Background="{Binding BackColor, UpdateSourceTrigger=PropertyChanged}" Padding="5,0,5,0" BorderThickness="1" CornerRadius="2" ToolTip="Match: StartPos-Length" MouseEnter="bd_item_result_MouseEnter" MouseLeave="bd_item_result_MouseLeave">
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <Label Content="Match: " HorizontalAlignment="Left" Height="25" VerticalAlignment="Top"/>
                                                    <Label Content="{Binding Index, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" />
                                                    <Label Content="-" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top"/>
                                                    <Label Content="{Binding Length, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" />

                                                </StackPanel>
                                            </Border>
                                        </Grid>
                                        <Grid Grid.Column="1">
                                            <Label Content="{Binding Text, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Margin="10,0,0,0"  VerticalAlignment="Top"/>
                                        </Grid>

                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter 
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}">
                                                    </ContentPresenter>
                                                </Grid>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True" >
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Black" />
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>

                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
                </Expander>
                <Expander Grid.Row="2" x:Name="xpd_quick_ref" IsExpanded="True" Collapsed="xpd_quick_ref_Collapsed" Expanded="xpd_quick_ref_Expanded" Margin="2">
                    <Expander.Header>
                        <TextBlock Text="QUICK REFERENCE" FontWeight="Bold" Foreground="#344f71"/>
                    </Expander.Header>
                    <Grid>
                        <Grid x:Name="grid_home_quick_ref">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Margin="0,0,0,2">
                                    <!--<Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" ToolTip="Search Reference" x:Name="tb_search"  TextChanged="tb_search_TextChanged" ></TextBox>
                                    <Viewbox Grid.Column="1" Width="10" Height="10" HorizontalAlignment="Center" >
                                        <Canvas Width="24" Height="24"  >
                                            <Path Fill="#4e4e4e" Data="M18.031 16.617l4.283 4.282-1.415 1.415-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9 9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617zm-2.006-.742A6.977 6.977 0 0 0 18 11c0-3.868-3.133-7-7-7-3.868 0-7 3.132-7 7 0 3.867 3.132 7 7 7a6.977 6.977 0 0 0 4.875-1.975l.15-.15z" Stretch="Fill" Height="24" Width="24"/>
                                        </Canvas>
                                    </Viewbox>-->
                                    <Grid   >
                                        <dxe:TextEdit VerticalAlignment="Center" BorderThickness="1" x:Name="txt_search" EditValueChanged="txt_search_EditValueChanged"  BorderBrush="#CECECE" NullText="Search references" Padding="26,0,0,0" FontSize="14" Height="30"/>
                                        <Viewbox Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0">
                                            <Canvas Width="24" Height="24">
                                                <Path Fill="#FF6E6E6E" Data="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" />
                                            </Canvas>
                                        </Viewbox>

                                    </Grid>
                                </Grid>

                                <ListBox Grid.Row="1" Margin="0,2,0,0" x:Name="lst_ref_type" ItemsSource="{Binding RefTypes}" SelectionChanged="lst_ref_type_SelectionChanged">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="25"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="25"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                                                    <Viewbox Width="10" Height="10"  >
                                                        <Canvas Width="24" Height="24"  >
                                                            <Path Fill="#4e4e4e" Data="{Binding Icon}" Stretch="Fill" Height="24" Width="24"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Grid>
                                                <TextBlock Grid.Column="1" Text="{Binding Name}"/>
                                                <Grid Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0">
                                                    <Viewbox Width="10" Height="10" Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BoolToVisibilityVisible}}">
                                                        <Canvas Width="24" Height="24"  >
                                                            <Path Fill="#4e4e4e" Data="M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z" Stretch="Fill" Height="24" Width="24"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <ContentPresenter 
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Content="{TemplateBinding Content}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                Margin="{TemplateBinding Padding}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="#e1e1e1"/>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True" >
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                </Trigger>
                                            </Style.Triggers>
                                            <Style.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                            </Style.Resources>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Grid>
                            <Grid Grid.Column="1" Margin="2">
                                <ListBox x:Name="lst_ref"  ItemsSource="{Binding RefItems}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="3*"/>
                                                        <ColumnDefinition Width="1*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="{Binding Title}" Foreground="#4e4e4e" HorizontalAlignment="Left"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Pattern}" FontFamily="Consolas"  Foreground="#417751" HorizontalAlignment="Right" Margin="15,0,0,0"/>
                                                </Grid>
                                                <Button Opacity="0" x:Name="btn_item" Click="btn_item_Click" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <ContentPresenter 
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Content="{TemplateBinding Content}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                Margin="{TemplateBinding Padding}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" Value="#e1e1e1"/>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True" >
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                </Trigger>
                                            </Style.Triggers>
                                            <Style.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                            </Style.Resources>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>

                            </Grid>
                        </Grid>
                        <Grid Background="#ebebebeb" x:Name="stp_ref_item" Visibility="Hidden" Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="70"/>
                            </Grid.RowDefinitions>

                            <StackPanel Margin="5" Grid.Row="0" Orientation="Vertical">
                                <Grid >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding SelectedItem.Title, ElementName=lst_ref}" FontWeight="Bold" Foreground="#344f71" Margin="7,2,2,2" />
                                    <Button Background="Transparent" x:Name="btn_close_ref" VerticalAlignment="Center" Click="Btn_close_ref_Click" HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="0" Width="25" Height="25" BorderBrush="Transparent" >
                                        <Viewbox Width="15" Height="15">
                                            <Canvas Width="24" Height="24">
                                                <Path Fill="#344f71" Data="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"   />
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                </Grid>

                                <Grid Margin="0,15,0,15">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="0,0,10,0" FontFamily="Consolas" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="2" Grid.Column="0" Background="#f3db90"  Text="{Binding SelectedItem.Pattern, ElementName=lst_ref}"/>
                                    <ScrollViewer Grid.Column="1" MaxHeight="75" VerticalScrollBarVisibility="Auto">
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center"  TextWrapping="Wrap" Text="{Binding SelectedItem.Description, ElementName=lst_ref}"/>
                                    </ScrollViewer>

                                </Grid>
                            </StackPanel>



                            <RichTextBox IsReadOnly="True" Margin="5" Grid.Row="1" x:Name="rtb_example_string" Height="70">
                                <FlowDocument>
                                    <Paragraph FontFamily="Consolas" Foreground="#417751">
                                        /
                                        <TextBlock  Text="{Binding SelectedItem.ExamplePattern, ElementName=lst_ref}"/> /g
                                    </Paragraph>
                                    <Paragraph x:Name="prgp_example_string"/>
                                </FlowDocument>
                            </RichTextBox>
                        </Grid>
                    </Grid>
                </Expander>
            </StackPanel>
        </Grid>

        <Grid Grid.Column="0">
            <HalconDotNet:HSmartWindowControlWPF HMoveContent="False"  HInitWindow="window_display_HInitWindow"  x:Name="window_display" Margin="2,2,0,2"/>
        </Grid>

    </Grid>
</Window>

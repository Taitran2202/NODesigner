<dx:ThemedWindow  xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" x:Class="NOVisionDesigner.Designer.Windows.AddTypeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        mc:Ignorable="d" ShowGlow="False"
        Title="AddTypeWindow" Height="700" Width="1000" FontSize="14">
    <Window.Resources>
        
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Viewbox SnapsToDevicePixels="true" Width="13" Height="13" >
                            <Canvas Width="24" Height="24"  >
                                <Path x:Name="ExpandPath" Fill="Black"  Data="M11.303 8l11.394 7.997L11.303 24z"/>
                            </Canvas>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M24 11.305l-7.997 11.39L8 11.305z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}">
            
        </Style>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <!--<RowDefinition Height="auto"/>-->
        </Grid.RowDefinitions>
        <!--<StackPanel Grid.Row="1" Margin="2,0,2,2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Margin="2,0,2,2" Content="OK" Click="btn_ok_Click"/>
        </StackPanel>-->
        <Grid Grid.Row="0" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <!--<ColumnDefinition Width="auto"/>-->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--<StackPanel Grid.Column="1" VerticalAlignment="Center">
                <Button Margin="2" Padding="3,0,3,3" Content="&lt;" Click="btn_add_Click">
                </Button>
                <Button Margin="2" Padding="3,0,3,3" Content="&lt;&lt;" >
                </Button>
                <Button Content="&gt;"  Margin="2" Padding="3,0,3,3" Click="btn_remove_Click">
                </Button>
                <Button Content="&gt;&gt;" Margin="2" Padding="3,0,3,3">
                </Button>
            </StackPanel>-->
            <Grid Grid.Column="0" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Margin="5,0" FontWeight="SemiBold" Content="Current Types"/>
                <Grid Grid.Row="1" Margin="5">
                    <Grid   >
                        <dxe:TextEdit VerticalAlignment="Center" BorderThickness="1" x:Name="txt_search_current" EditValueChanged="txt_search_current_EditValueChanged"  BorderBrush="#CECECE" NullText="Search" Padding="26,0,0,0" FontSize="14" Height="30"/>
                        <Viewbox Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0">
                            <Canvas Width="24" Height="24">
                                <Path Fill="#FF6E6E6E" Data="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" />
                            </Canvas>
                        </Viewbox>

                    </Grid>
                </Grid>
                <ListBox x:Name="lst_current" Grid.Row="2" Margin="5">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}">
                                            <StackPanel>
                                                <dx:SimpleButton x:Name="btn_remove" 
                                                  GlyphHeight="24"
                                                 Padding="2"
                                                 Margin="2"
                                        Glyph="{dx:DXImage 'SvgImages/Dashboards/Delete.svg'}"
                                           Click="btn_remove_Click_1">

                                                </dx:SimpleButton>
                                            </StackPanel>

                                            <ContentPresenter 
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Content="{TemplateBinding Content}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Margin="{TemplateBinding Padding}"/>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <!--<MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" Value="AliceBlue"/>
                                            </MultiTrigger>-->
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True" >
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <!--<Setter Property="Background" Value="Transparent" />-->
                                    <!--<Setter Property="Foreground" Value="White" />-->
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
            <Grid Grid.Column="2" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Margin="5,0" FontWeight="SemiBold" Content="All Types"/>
                <Grid Grid.Row="1" Margin="5">
                    <Grid   >
                        <dxe:TextEdit VerticalAlignment="Center" BorderThickness="1" x:Name="txt_search_all" EditValueChanged="txt_search_searched_EditValueChanged"  BorderBrush="#CECECE" NullText="Search" Padding="26,0,0,0" FontSize="14" Height="30"/>
                        <Viewbox Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8,0,0,0">
                            <Canvas Width="24" Height="24">
                                <Path Fill="#FF6E6E6E" Data="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" />
                            </Canvas>
                        </Viewbox>

                    </Grid>
                </Grid>
                <TreeView x:Name="tv_search" Grid.Row="2" Margin="5"  SelectedItemChanged="tv_search_SelectedItemChanged">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type local:TypeItem}" ItemsSource="{Binding Children}">
                            <TreeViewItem IsSelected="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem }}}" Header="{Binding Name}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Padding" Value="0,0,0,0"/>
                            <!--<Setter Property="Foreground" Value="Black"/>-->
                            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <!--<ColumnDefinition Width="*"/>-->
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <ToggleButton Grid.Column="0"  x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.Row="0"  Padding="{TemplateBinding Padding}">
                                                <StackPanel Orientation="Horizontal">
                                                    <StackPanel>
                                                        <dx:SimpleButton x:Name="btn_add" 
                                                  GlyphHeight="24"
                                                 Padding="2"
                                                 Margin="2,0" Click="btn_add_Click_1"
                                        Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Add.svg'}"/>
                                                    </StackPanel>
                                                    <ContentPresenter  x:Name="PART_Header"
                                                                       VerticalAlignment="Center"
                                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                       ContentSource="Header"/>

                                                </StackPanel>
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1"  Grid.Row="1"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="false">
                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="True">
                                                <Setter Property="Visibility" TargetName="btn_add" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <!--<Setter Property="Background" TargetName="Bd" Value="Green"/>-->
                                                <!--<Setter Property="Foreground" Value="Black"/>-->
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <!--<Setter Property="Background" Value="Transparent" />-->
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </Trigger>
                                            <!--<MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                --><!--<Setter Property="Foreground" Value="White"/>--><!--
                                            </MultiTrigger>-->
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </TreeView.ItemContainerStyle>
                    
                </TreeView>
            </Grid>
        </Grid>
    </Grid>
</dx:ThemedWindow>

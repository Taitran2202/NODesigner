<dx:ThemedWindow xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:NOVisionDesigner.Designer.ValueConverters"
        xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" 
        xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:misc="clr-namespace:NOVisionDesigner.Designer.Misc" 
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" 
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts" 
        xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid"
        x:Class="NOVisionDesigner.Designer.Windows.LDCEdgeDetectionWindow"
        mc:Ignorable="d"
        Title="Edge Detection" Height="900" Width="1600" FontSize="14" WindowStartupLocation="CenterScreen" ShowGlow="False">
    <Window.Resources>
        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:BoolToVisibilityCollapse x:Key="BoolToVisibilityCollapse"/>
        <local:PropertyDefinitionTemplateSelector x:Key="PropertyDefinitionTemplateSelector"/>
        <local:RadioBoolToIntConverter x:Key="radioBoolToIntConverter" />

        <converters:StringToColor x:Key="StringToColor"/>
        <DataTemplate x:Key="PropertyTemplate">
            <dxprg:PropertyDefinition Path="{Binding Name}" />
        </DataTemplate>
        <DataTemplate x:Key="CollectionTemplate">
            <dxprg:CollectionDefinition Path="{Binding CollectionName}" />
        </DataTemplate>
        <DataTemplate x:Key="DataTemplate1">
            <Grid >
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding ClassID}" Margin="2"/>
                    <TextBox Text="{Binding ClassName}" Margin="2"/>
                    <dxe:PopupColorEdit  Color="{Binding Color, Converter={StaticResource StringToColor}, Mode=TwoWay}" />
                </StackPanel>
            </Grid>



        </DataTemplate>

        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="Transparent"/>


                    <!--<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                    <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>-->
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="#FF4E4E4E"></Setter>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand" BorderThickness="{TemplateBinding BorderThickness}"  >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FF007AFF"/>
                                        <Setter Property="Foreground" Value="White"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>

    </Window.Resources>
    <Grid>
        <dx:DXTabControl Padding="0" SelectedIndex="0">
            <dx:DXTabItem Header="Gallery"   VerticalAlignment="Top">
                <Grid Margin="0,0,0,0" >
                    <Grid.RowDefinitions>

                        <RowDefinition Height="*"/>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="1" Grid.Column="1" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="160"/>
                        </Grid.ColumnDefinitions>
                        <Grid Margin="5">
                            <HalconDotNet:HSmartWindowControlWPF  HInitWindow="window_display_HInitWindow" 
                                                              
                                                             x:Name="window_display" >
                                <dxb:BarManager.DXContextMenu>
                                    <dxb:PopupMenu>
                                        <dxb:PopupMenu.Items>
                                            <dxb:BarButtonItem
                                Content="Edit Region of Interest"
                                ItemClick="btn_edit_roi_click" />
                                            <dxb:BarButtonItem
                                Content="Clear Region of Interest"
                                ItemClick="btn_clear_roi" />
                                        </dxb:PopupMenu.Items>
                                    </dxb:PopupMenu>
                                </dxb:BarManager.DXContextMenu>
                            </HalconDotNet:HSmartWindowControlWPF>


                            <!--<Grid VerticalAlignment="Top" Visibility="Collapsed" HorizontalAlignment="Stretch" Background="White">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                                    <StackPanel Orientation="Horizontal" Margin="2,2,2,2" Visibility="Collapsed">


                                        <Button x:Name="btn_undo" ToolTip="undo"  Click="btn_undo_Click" VerticalAlignment="Stretch" Background="Transparent">
                                            <Viewbox Width="15" Height="15">
                                                <Canvas Width="24" Height="24">
                                                    <Path Data="M13.5,7A6.5,6.5,0,0,1,20,13.5A6.5,6.5,0,0,1,13.5,20L10,20 10,18 13.5,18C16,18 18,16 18,13.5 18,11 16,9 13.5,9L7.83,9 10.91,12.09 9.5,13.5 4,8 9.5,2.5 10.92,3.91 7.83,7 13.5,7 M6,18L8,18 8,20 6,20 6,18z" Fill="#FF007AFF" />
                                                </Canvas>
                                            </Viewbox>
                                        </Button>
                                        <Button x:Name="btn_redo" ToolTip="redo"  Click="btn_redo_Click" VerticalAlignment="Stretch" Background="Transparent" Margin="0,0,10,0">
                                            <Viewbox Width="15" Height="15">
                                                <Canvas Width="24" Height="24">
                                                    <Path Data="M10.5,7A6.5,6.5,0,0,0,4,13.5A6.5,6.5,0,0,0,10.5,20L14,20 14,18 10.5,18C8,18 6,16 6,13.5 6,11 8,9 10.5,9L16.17,9 13.09,12.09 14.5,13.5 20,8 14.5,2.5 13.08,3.91 16.17,7 10.5,7 M18,18L16,18 16,20 18,20 18,18z" Fill="#FF007AFF" />
                                                </Canvas>
                                            </Viewbox>
                                        </Button>

                                    </StackPanel>
                                    <Border VerticalAlignment="Stretch" Margin="0,2,0,2" BorderBrush="#FF0071DA" BorderThickness="1,1,1,1">
                                        <StackPanel Orientation="Horizontal" >
                                            <RadioButton x:Name="btn_move"  FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="8,4" IsChecked="{Binding DrawingMode,Converter={StaticResource radioBoolToIntConverter},ConverterParameter=0,Mode=TwoWay}" ToolTip="Move Image"  VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                                                <StackPanel Orientation="Horizontal">


                                                    <Viewbox HorizontalAlignment="Center" Width="12" Height="12"  VerticalAlignment="Center">
                                                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}, Mode=FindAncestor}}" Data="M6.58,19H14.58V22H6.58V19M19.74,11.6C19.55,11.4 19.29,11.28 19,11.28L18.78,11.31L15.58,13V11.83L16.09,2.9C16.12,2.35 15.7,1.87 15.15,1.84C14.6,1.81 14.12,2.23 14.09,2.78L13.82,7.47H13.58L12.54,7.58V2A1,1 0 0,0 11.54,1C11,1 10.54,1.45 10.54,2V8.41L9.72,8.78L9.03,3.32C8.96,2.77 8.46,2.38 7.91,2.45C7.36,2.5 6.97,3 7.04,3.57L7.81,9.63L7.43,9.8C7.3,9.85 7.18,9.93 7.07,10L5.97,6.11C5.81,5.54 5.25,5.2 4.71,5.34C4.18,5.5 3.88,6.08 4.04,6.65L6.61,15.77C6.61,15.8 6.63,15.84 6.64,15.87L6.67,16H6.68C6.9,16.57 7.47,17 8.08,17H14.58C14.97,17 15.32,16.84 15.58,16.57L20.5,12.37L19.74,11.6Z" />
                                                    </Viewbox>
                                                </StackPanel>
                                            </RadioButton>

                                            <RadioButton x:Name="btn_gradient" IsChecked="{Binding DrawingMode,Converter={StaticResource radioBoolToIntConverter},ConverterParameter=2,Mode=TwoWay}"  FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="8,4" ToolTip="Brush" VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                                                <StackPanel Orientation="Horizontal">


                                                    <Viewbox HorizontalAlignment="Center" Width="12" Height="12"  VerticalAlignment="Center">
                                                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}, Mode=FindAncestor}}" Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                                                    </Viewbox>
                                                </StackPanel>
                                            </RadioButton>
                                            <RadioButton x:Name="btn_eraser" IsChecked="{Binding DrawingMode,Converter={StaticResource radioBoolToIntConverter},ConverterParameter=3,Mode=TwoWay}" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Padding="8,4" ToolTip="Eraser" VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                                                <StackPanel Orientation="Horizontal">


                                                    <Viewbox HorizontalAlignment="Center" Width="12" Height="12"  VerticalAlignment="Center">
                                                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}, Mode=FindAncestor}}" Data="M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z"  />
                                                    </Viewbox>
                                                </StackPanel>
                                            </RadioButton>


                                        </StackPanel>



                                    </Border>



                                    <dxe:SpinEdit  Value="{Binding Smooth}" Visibility="Collapsed"/>
                                    <dxe:SpinEdit   Value="{Binding Scale}" Visibility="Collapsed"/>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Label Content="Brush size" VerticalAlignment="Center" Margin="30,0,4,0" Padding="0,0,0,0"/>
                                    <Slider x:Name="sld_brushsize" Value="{Binding BrushSize}" Style="{x:Null}" Width="150" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,5,0" Minimum="1" Maximum="200"/>
                                    <misc:NumericUpDownWithKeyboard  Value="{Binding Value, ElementName=sld_brushsize, Mode=TwoWay}" HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" Background="Transparent"/>

                                </StackPanel>
                                <Border Margin="0,2,4,2" Padding="4" HorizontalAlignment="Right" VerticalAlignment="Center"   >
                                    <StackPanel Orientation="Horizontal">

                                        <Label Content="Opacity" VerticalAlignment="Center" Margin="10,0,4,0" Padding="0,0,0,0"/>
                                        <Slider x:Name="slider_opacity" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                                        <Label Content="{Binding ColorOpacity}"  VerticalAlignment="Center" HorizontalContentAlignment="Right" Width="40"   ContentStringFormat="{}{0:0} %"/>
                                    </StackPanel>
                                </Border>
                            </Grid>-->

                            <Grid Visibility="Visible" VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="Black"  >
                                <StackPanel HorizontalAlignment="Left" Margin="2" Orientation="Horizontal">
                                    <!--<Button Content="Run"  Background="WhiteSmoke" Foreground="Black"  Margin="4,2,4,2" Style="{DynamicResource ButtonDarkMode}"></Button>-->
                                    <Label Content="Edit mode" Margin="8,4,0,4" Foreground="White" 
                                           Visibility="Collapsed"
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Stretch" Padding="8,4,8,4" 
                                           Background="{DynamicResource BlueIOS}" 
                                           VerticalContentAlignment="Center"></Label>
                                    <ComboBox x:Name="cmb_mask_mode" BorderBrush="{DynamicResource BlueIOS}" 
                                              Visibility="Collapsed"
                                              Background="Black" Foreground="White" VerticalContentAlignment="Center" 
                                              VerticalAlignment="Stretch" HorizontalAlignment="Center" 
                                              SelectionChanged="cmb_mask_mode_SelectionChanged" SelectedIndex="0" Padding="8,0" Margin="0,4,0,4">
                                        <System:String>Manual</System:String>
                                        <System:String>Auto</System:String>
                                    </ComboBox>
                                    <Button VerticalAlignment="Center" x:Name="btn_edit_mask" Padding="8,4"  Margin="4,2,4,2"
                                            Content="Edit mask" Style="{DynamicResource ButtonDarkMode}" 
                                            Background="{DynamicResource BlackIOS}"  Click="btn_edit_mask_Click" VerticalContentAlignment="Center" Visibility="Collapsed"></Button>
                                    <!--<Button x:Name="btn_auto_mask" Padding="8,4" Margin="2,0"  Content="Auto mask" Style="{DynamicResource ButtonDarkMode}" Background="{DynamicResource BlackIOS}"  Click="btn_auto_mask_Click"></Button>-->

                                    <Button VerticalAlignment="Center" x:Name="btn_auto_mask_all" 
                                            Padding="8,4"  Content="Apply mask to all" 
                                            Style="{DynamicResource ButtonDarkMode}" Background="{DynamicResource BlackIOS}"  
                                            Click="btn_auto_mask_all_Click" Margin="0,2,0,2" VerticalContentAlignment="Center" Visibility="Collapsed"/>
                                    <Rectangle Width="1" Fill="#20000000" Margin="1,0"></Rectangle>
                                    
                                    <dx:SimpleButton VerticalAlignment="Center"  Padding="8,2"  Margin="0,2"
                                            Content="Draw edges" 
                                              Glyph="{dx:DXImage 'SvgImages/Chart/ChartType_PolarLine.svg'}"
                                            Click="btn_edit_annotation_Click"></dx:SimpleButton>
                                    
                                    
                                </StackPanel>

                                <Border Margin="0,2,4,2" Padding="4" HorizontalAlignment="Right" VerticalAlignment="Center"   >
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Opacity" VerticalAlignment="Center" Margin="10,0,4,0" Padding="0,0,0,0" Foreground="White"/>
                                        <Slider x:Name="slider_opacity1" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                                        <Label Content="{Binding ColorOpacity}"  VerticalAlignment="Center" HorizontalContentAlignment="Right" Width="40"   ContentStringFormat="{}{0:0} %" Foreground="White"/>
                                    </StackPanel>
                                </Border>
                                <Rectangle VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="0.5" Fill="#20000000"></Rectangle>
                                <!--<Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding SelectedItem.FileName,FallbackValue=Imagename,ElementName=lst_view}" Background="#FFFFFFFF" Padding="16,3" />-->
                            </Grid>
                        </Grid>

                        <GridSplitter Width="1" Grid.Column="1" HorizontalAlignment="Left" Background="Transparent"  ></GridSplitter>
                        <Grid Margin="0,5,5,5"  Grid.Column="1">

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" >
                                <dx:DropDownButton Content="Add images" Height="30">
                                    <StackPanel>
                                        <Button x:Name="btn_add_image" HorizontalContentAlignment="Left" Content="From files"/>
                                        <Button x:Name="btn_add_image_camera" HorizontalContentAlignment="Left" Content="From camera"/>
                                    </StackPanel>

                                </dx:DropDownButton>
                            </StackPanel>

                            <ListBox VirtualizingPanel.IsVirtualizing="True"    
                                     VirtualizingPanel.VirtualizationMode ="Standard" 
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"  
                                     ScrollViewer.CanContentScroll="True" x:Name="lst_view" 
                                     ItemsSource="{Binding ListImage}" 
                                     SelectionChanged="lst_view_SelectionChanged" Grid.Column="1" 
                                     BorderBrush="#20000000" Margin="0,34,0,0">

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="2"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="Background" Value="{DynamicResource BlueIOS}" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True" >
                                                <Setter Property="Background" Value="{DynamicResource BlueIOS}" />
                                            </Trigger>

                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>

                                    <DataTemplate >
                                        <dx:BackgroundPanel Margin="4" >
                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  >
                                                <Grid  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                                    <Label VerticalAlignment="Center" Margin="0,0,25,0">
                                                        <TextBlock TextTrimming="CharacterEllipsis"  
                                                           Margin="6,2" FontWeight="SemiBold"  HorizontalAlignment="Left" Text="{Binding FileName}" />
                                                    </Label>

                                                    <Button x:Name="btn_remove" Background="{DynamicResource RedIOS}" Margin="0,0,2,0" Padding="2" Style="{DynamicResource ButtonDarkMode}" BorderThickness="0" VerticalAlignment="Center"  HorizontalAlignment="Right"  Click="btn_remove_Click">
                                                        <Viewbox Width="15" Height="15">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="White" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Button>
                                                </Grid>
                                                <Rectangle Height="1" Fill="#20000000"></Rectangle>
                                                <Grid>
                                                    <Image   RenderOptions.BitmapScalingMode="LowQuality"   Source="{Binding Image,IsAsync=True}"   >


                                                    </Image>

                                                </Grid>


                                            </StackPanel>
                                        </dx:BackgroundPanel>

                                    </DataTemplate>

                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel  VirtualizingPanel.IsContainerVirtualizable="True"
    VirtualizingPanel.IsVirtualizing="True"  HorizontalAlignment="Stretch" Margin="0" Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>

                        </Grid>

                    </Grid>
                    <GridSplitter Width="1" Grid.Column="0" HorizontalAlignment="Right" Margin="5,0" Background="Transparent"  ></GridSplitter>
                    <Border Grid.Row="0" Margin="5,5,0,5" Visibility="Collapsed"  Background="#FFECECEC" BorderBrush="#FFDADADA" BorderThickness="1,1,1,1">
                        <Grid Margin="0">
                            <StackPanel  HorizontalAlignment="Left">
                                <Grid  VerticalAlignment="Top" Margin="5,5,5,0">

                                </Grid>

                                <Label Content="Options" Margin="10,5,0,0" FontFamily="Segoe UI Semibold" FontSize="13" Foreground="Black"></Label>
                                <StackPanel x:Name="stack_train_options" Margin="10,0">
                                 
                                    
                                </StackPanel>
                            </StackPanel>

                        </Grid>

                    </Border>

                    <Border x:Name="box_step" Grid.ColumnSpan="2" BorderThickness="1" Background="White" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{DynamicResource WhiteBrush}">
                        <Grid  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel Background="White" >
                                <StackPanel Margin="16" Orientation="Vertical">
                                    <TextBlock  FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,8">Trainer</TextBlock>
                                    <UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center">Epochs</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding EPOCHS}"  HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>
                                    <UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center">Batch Size</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding BATCH_SIZE}"  HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>
                                    <UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center">Input Width</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding INPUT_WIDTH}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>
                                    <UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center">Input Height</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding INPUT_HEIGHT}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>
                                    <!--<UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center">Training Type</TextBlock>
                                        <ComboBox HorizontalAlignment="Right" VerticalAlignment="Center" SelectedValue="{Binding TRAINING_TYPE}">
                                            <System:String>scratch</System:String>
                                            <System:String>resume</System:String>
                                        </ComboBox>
                                    </UniformGrid>-->


                                </StackPanel>


                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,0,0">
                                <dx:SimpleButton x:Name="btn_train_cmd1" Padding="2" 
                                                             GlyphHeight="22"
                                                             Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Window.svg'}"
                                                    VerticalAlignment="Center" Margin="0,0,2,0" 
                                                    Cursor="Hand" ToolTip="Start console trainning"
                                                    Click="btn_train_cmd_Click">

                                </dx:SimpleButton>
                                <dx:SimpleButton x:Name="btn_option1" Padding="2" 
                                                             GlyphHeight="22"
                                                             Glyph="{dx:DXImage 'SvgImages/PDF Viewer/SearchSettingButton.svg'}"
                                                             HorizontalAlignment="Right"  
                                                             Click="btn_train_config_Click" 
                                                             VerticalAlignment="Center" Cursor="Hand" ToolTip="Advance options">

                                </dx:SimpleButton>
                            </StackPanel>

                            <UniformGrid Grid.Row="1" Columns="2"   Background="White">
                                <Button x:Name="btn_step_ok" Content="Ok" Padding="16,8" Margin="8" Style="{DynamicResource ButtonIOSBar}" Foreground="White" Background="{DynamicResource BlueIOS}" FontSize="14" FontWeight="SemiBold"/>
                                <Button x:Name="btn_step_cancel" Content="Cancel" Padding="12,8" Margin="8" Style="{DynamicResource ButtonIOSBar}" Foreground="White" Background="{DynamicResource BlackIOS}" FontSize="14" FontWeight="SemiBold"/>
                            </UniformGrid>
                        </Grid>
                    </Border>
                    <dx:WaitIndicator x:Name="label_wait" DeferedVisibility="False" Content="Loading.." d:IsHidden="True" ></dx:WaitIndicator>
                </Grid>
            </dx:DXTabItem>
            <dx:DXTabItem Header="Training" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="350"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="1"  Margin="0" Fill="#20000000" HorizontalAlignment="Right"></Rectangle>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>


                        <Border x:Name="toolbar_grid"  Grid.Row="0" Padding="16" BorderBrush="#FFE5E5E5">
                            <Grid>

                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal"  VerticalAlignment="Center" >
                                    <Button x:Name="btn_train"  Content="Start training" 
                                            Visibility="{Binding IsTraining,Converter={StaticResource BoolToVisibilityCollapse}}" 
                                            FontSize="14"  Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                            Padding="14,8,14,8"   
                                            ></Button>
                                    <Button x:Name="btn_stop_train"  Content="Stop training" 
                                            Visibility="{Binding IsTraining,Converter={StaticResource BoolToVisibilityConverter}}" 
                                            FontSize="14"  Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                            Padding="14,8,14,8" Background="{DynamicResource RedIOS}" BorderBrush="{x:Null}" 
                                            Foreground="{DynamicResource WhiteBrush}" Style="{DynamicResource ButtonDarkMode}"></Button>
                                </StackPanel>

                            </Grid>

                        </Border>
                        <Rectangle Height="1"  Margin="0" VerticalAlignment="Bottom" Fill="#20000000" ></Rectangle>
                        <ScrollViewer  Grid.Row="1" VerticalScrollBarVisibility="Auto" Margin="0,8,0,0" >
                            <StackPanel x:Name="stack_train_parameter" >
                                <StackPanel Margin="16,8,16,16" Orientation="Vertical">
                                    <Grid>
                                        <Label  FontSize="14" FontWeight="SemiBold" 
                                                HorizontalAlignment="Left" VerticalAlignment="Center" 
                                                Margin="0,0,0,0">Training parameters</Label>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0">
                                            <dx:SimpleButton x:Name="btn_train_cmd" Padding="2" 
                                                             GlyphHeight="22"
                                                             Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Window.svg'}"
                                                    VerticalAlignment="Center" Margin="0,0,2,0" 
                                                    Cursor="Hand" ToolTip="Start console trainning"
                                                    Click="btn_train_cmd_Click">

                                            </dx:SimpleButton>
                                            <dx:SimpleButton x:Name="btn_option" Padding="2" 
                                                             GlyphHeight="22"
                                                             Glyph="{dx:DXImage 'SvgImages/PDF Viewer/SearchSettingButton.svg'}"
                                                             HorizontalAlignment="Right"  
                                                             Click="btn_train_config_Click" 
                                                             VerticalAlignment="Center" Cursor="Hand" ToolTip="Advance options">

                                            </dx:SimpleButton>
                                        </StackPanel>
                                    </Grid>

                                    <UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal"  HorizontalAlignment="Left" VerticalAlignment="Center">Epochs</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding EPOCHS}"  HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>
                                    <UniformGrid Columns="2" Margin="4,8,0,0" Visibility="Visible">
                                        <TextBlock FontWeight="Normal"  HorizontalAlignment="Left" VerticalAlignment="Center">Batch size</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding BATCH_SIZE}"  HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>



                                </StackPanel>


                                <StackPanel Margin="16,0,16,16" Orientation="Vertical">
                                    <TextBlock  FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,8">Model</TextBlock>


                                    <UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal"  HorizontalAlignment="Left" VerticalAlignment="Center">Width</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding INPUT_WIDTH}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>
                                    <UniformGrid Columns="2" Margin="4,8,0,0">
                                        <TextBlock FontWeight="Normal"  HorizontalAlignment="Left" VerticalAlignment="Center">Height</TextBlock>
                                        <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding INPUT_HEIGHT}"  HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                    </UniformGrid>
                                    <TextBlock  FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,8,0,0">Advance parameter</TextBlock>
                                    <dxprg:PropertyGridControl
                                    ShowDescriptionIn="Panel"
                                    BorderBrush="WhiteSmoke"
                                    VerticalContentAlignment="Center"
                                   
                                    x:Name="grid_model_prop"
                                    FontSize="14" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                           HorizontalContentAlignment="Right" 
                                                           ExpandCategoriesWhenSelectedObjectChanged="True" 
                                    ShowProperties="WithPropertyDefinitions"
                                                           ShowCategories="Hidden" Margin="0,8,0,0" 
                                                           ShowToolPanel="False" ShowSearchBox="False"  ShowMenuButtonInRows="False"
                                    PropertyDefinitionTemplateSelector="{StaticResource PropertyDefinitionTemplateSelector}"
                                    >
                                        <dxprg:PropertyGridControl.DescriptionTemplate>
                                            <DataTemplate>
                                                <TextBox Background="Transparent"
                             BorderThickness="0"
                             Text="{Binding Mode=OneWay}"
                             IsReadOnly="True"
                             TextWrapping="Wrap" />
                                            </DataTemplate>
                                        </dxprg:PropertyGridControl.DescriptionTemplate>

                                        <dxprg:PropertyDefinition >
                                            <dxprg:PropertyDefinition.CellTemplate>
                                                <DataTemplate>
                                                    <dxe:TextEdit Name="PART_Editor" HorizontalContentAlignment="Right"/>
                                                </DataTemplate>
                                            </dxprg:PropertyDefinition.CellTemplate>
                                        </dxprg:PropertyDefinition>

                                    </dxprg:PropertyGridControl>

                                </StackPanel>
                                <Rectangle Height="1"  Margin="0" Fill="#20000000" ></Rectangle>
                                <StackPanel  Margin="16" Orientation="Vertical">
                                    <TextBlock  FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,8">Augmentation</TextBlock>
                                    <GroupBox>
                                        <GroupBox.Header>
                                            <CheckBox Content="Enable image augmentation" Margin="4,8,0,0" IsChecked="{Binding EnableAugmentation}" Template="{DynamicResource CheckBoxControlTemplateFlat}"></CheckBox>
                                        </GroupBox.Header>
                                        <StackPanel x:Name="stack_augmentation" IsEnabled="{Binding EnableAugmentation}">
                                            <!--<UniformGrid Columns="2" Margin="4,8,0,0">
                                            <CheckBox IsChecked="{Binding EnableRandomRotate90}" Template="{DynamicResource CheckBoxControlTemplateFlat}" FontWeight="Normal"  HorizontalAlignment="Left" VerticalAlignment="Center">Random rotation 90</CheckBox>
                                            <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding RandomRotate90Factor}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                        </UniformGrid>-->
                                            <UniformGrid Columns="2" Margin="4,8,0,0">
                                                <CheckBox IsChecked="{Binding EnableRotation}" Template="{DynamicResource CheckBoxControlTemplateFlat}" FontWeight="Normal"  HorizontalAlignment="Left" VerticalAlignment="Center">Random rotation</CheckBox>
                                                <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding RotationVariation}" HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                            </UniformGrid>
                                            <UniformGrid Columns="1" Margin="4,8,0,0">
                                                <CheckBox IsChecked="{Binding VerticalFlip}" Content="Vertical flip (X axis)" Template="{DynamicResource CheckBoxControlTemplateFlat}"  HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>

                                            </UniformGrid>
                                            <UniformGrid Columns="1" Margin="4,8,0,0">
                                                <CheckBox IsChecked="{Binding HorizontalFlip}" Content="Horizontal flip (Y axis)" Template="{DynamicResource CheckBoxControlTemplateFlat}"  HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>

                                            </UniformGrid>
                                            <Grid  Margin="4,8,0,0">
                                                <CheckBox IsChecked="{Binding EnableBrightness}" Content="Brightness variation (%)" Template="{DynamicResource CheckBoxControlTemplateFlat}"   HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding Brightness}"  HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                            </Grid>
                                            <Grid Margin="4,8,0,0">
                                                <CheckBox Content="Contrast variation (%)" IsChecked="{Binding EnableBrightness}" Template="{DynamicResource CheckBoxControlTemplateFlat}"  HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                <misc:NumericUpDownWithKeyboard Interval="1" Value="{Binding Contrast}"  HorizontalAlignment="Right"></misc:NumericUpDownWithKeyboard>
                                            </Grid>
                                            <StackPanel Margin="4,8,0,0" >
                                                <CheckBox Content="Random resize scale" IsChecked="{Binding EnableRandomResizedCrop}" Template="{DynamicResource CheckBoxControlTemplateFlat}"  HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                <UniformGrid Columns="2" Margin="0,8,2,0">
                                                    <Label Content="Start"  HorizontalAlignment="Center"></Label>
                                                    <Label Content="Stop"  HorizontalAlignment="Center"></Label>
                                                </UniformGrid>
                                                <UniformGrid Columns="2" >
                                                    <misc:NumericUpDownWithKeyboard Interval="0.1" Value="{Binding RandomCropResizeScale.Start}"  HorizontalAlignment="Center"></misc:NumericUpDownWithKeyboard>
                                                    <misc:NumericUpDownWithKeyboard Interval="0.1" Value="{Binding RandomCropResizeScale.Stop}"  HorizontalAlignment="Center"></misc:NumericUpDownWithKeyboard>
                                                </UniformGrid>

                                            </StackPanel>
                                            <StackPanel Margin="4,16,0,0" >
                                                <CheckBox Content="Random resize ratio" IsChecked="{Binding EnableRandomResizedCrop}" Template="{DynamicResource CheckBoxControlTemplateFlat}"  HorizontalAlignment="Left" VerticalAlignment="Center"></CheckBox>
                                                <UniformGrid Columns="2" Margin="0,8,2,0">
                                                    <Label Content="Start"  HorizontalAlignment="Center"></Label>
                                                    <Label Content="Stop"  HorizontalAlignment="Center"></Label>
                                                </UniformGrid>
                                                <UniformGrid Columns="2" >
                                                    <misc:NumericUpDownWithKeyboard Interval="0.1" Value="{Binding RandomCropResizeRatio.Start}"  HorizontalAlignment="Center"></misc:NumericUpDownWithKeyboard>
                                                    <misc:NumericUpDownWithKeyboard Interval="0.1" Value="{Binding RandomCropResizeRatio.Stop}"  HorizontalAlignment="Center"></misc:NumericUpDownWithKeyboard>
                                                </UniformGrid>

                                            </StackPanel>
                                        </StackPanel>
                                    </GroupBox>
                                    


                                    


                                </StackPanel>
                            </StackPanel>


                            <!--<UniformGrid Grid.Row="1" Columns="2"   Background="White">
                                <Button x:Name="btn_step_ok" Content="Ok" Padding="16,8" Margin="8" Style="{DynamicResource ButtonIOSBar}" Foreground="White" Background="{DynamicResource BlueIOS}" FontSize="14" FontWeight="SemiBold"/>
                                <Button x:Name="btn_step_cancel" Content="Cancel" Padding="12,8" Margin="8" Style="{DynamicResource ButtonIOSBar}" Foreground="White" Background="{DynamicResource BlackIOS}" FontSize="14" FontWeight="SemiBold"/>
                            </UniformGrid>-->
                        </ScrollViewer>
                        <Border Grid.Row="2"   >
                            <Grid>
                                <StackPanel>
                                    <Rectangle Height="1"  Margin="0" VerticalAlignment="Bottom" Fill="#20000000" ></Rectangle>
                                    <StackPanel x:Name="stack_workspace"  Orientation="Vertical" >
                                        <Grid x:Name="grid_runtime" Margin="16">
                                            <StackPanel >
                                                <TextBlock Text="Runtime Options" FontWeight="SemiBold" FontSize="14" Foreground="#FF344054"/>
                                                <dxprg:PropertyGridControl FontSize="14" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                                           HorizontalContentAlignment="Right" x:Name="propertiesGrid" 
                                                                           ExpandCategoriesWhenSelectedObjectChanged="True" 
                                                                           ShowCategories="Hidden" Margin="0,8,0,0" 
                                                                           ShowToolPanel="False" ShowSearchBox="False" 
                                                                           ShowGridLines="False">
                                                    <dxprg:PropertyDefinition Type="{x:Type System:Double}">
                                                        <dxprg:PropertyDefinition.CellTemplate>
                                                            <DataTemplate>

                                                                <misc:NumericUpDownWithKeyboard x:Name="PART_Editor" Value="{Binding Value}" BorderThickness="1" />
                                                            </DataTemplate>
                                                        </dxprg:PropertyDefinition.CellTemplate>
                                                    </dxprg:PropertyDefinition>
                                                </dxprg:PropertyGridControl>
                                            </StackPanel>
                                        </Grid>


                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>




                    </Grid>
                    <Grid Grid.Column="1" x:Name="grid_trainning_status">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Rectangle Width="1"  Margin="0" Fill="#20000000" HorizontalAlignment="Right"></Rectangle>
                        <Border Padding="16" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <GroupBox Header="Training status" VerticalAlignment="Top" MinWidth="300"  >
                                    <StackPanel TextBlock.FontWeight="SemiBold" Margin="16">
                                        <Grid>
                                            <Label Content="Epoch:" ></Label>
                                            <Label Content="{Binding Epoch}" HorizontalAlignment="Right"></Label>
                                        </Grid>
                                        <Grid>
                                            <Label Content="Learning rate:" ></Label>
                                            <Label Content="{Binding LearningRate}" ContentStringFormat="e2" Margin="100,0,0,0" HorizontalAlignment="Right"></Label>
                                        </Grid>
                                        <Grid>
                                            <Label Content="Loss:" ></Label>
                                            <Label Content="{Binding Loss}" HorizontalAlignment="Right"></Label>
                                        </Grid>
                                        <Rectangle Height="1" HorizontalAlignment="Stretch" Fill="#20000000" Margin="0,8"></Rectangle>
                                        <Grid>
                                            <Label Content="Time elapsed:" ></Label>
                                            <Label Content="{Binding TimeExlapsed}" HorizontalAlignment="Right"></Label>
                                        </Grid>
                                        <Grid>
                                            <Label Content="Time left:" ></Label>
                                            <Label Content="{Binding TimeLeft}" HorizontalAlignment="Right"></Label>
                                        </Grid>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Margin="0,8,0,0" Grid.Row="1" Header="Training logs" VerticalAlignment="Stretch" MinWidth="300" MaxWidth="500" >
                                    <ScrollViewer  Margin="8,0" HorizontalScrollBarVisibility="Disabled">
                                        <ItemsControl BorderThickness="0" ItemsSource="{Binding Logs}"  >
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <TextBlock
                                                        Text="{Binding}"
                                                        TextWrapping="Wrap"
                                                        />
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </GroupBox>
                            </Grid>
                        </Border>
                        <Border Padding="0" Grid.Column="1">
                            <Grid>
                                <StackPanel>
                                    <dxc:ChartControl Margin="0,0" BorderThickness="0" BorderBrush="Transparent" >
                                        <dxc:ChartControl.Titles>
                                            <dxc:Title Content="Loss" FontWeight="SemiBold" Foreground="#FF505050" >

                                            </dxc:Title>
                                        </dxc:ChartControl.Titles>
                                        <dxc:XYDiagram2D >
                                            <dxc:XYDiagram2D.AxisY>
                                                <dxc:AxisY2D TitlePosition="Inside"  LabelPosition="Inside">
                                                    <dxc:AxisY2D.Label>
                                                        <dxc:AxisLabel ></dxc:AxisLabel>
                                                    </dxc:AxisY2D.Label>
                                                </dxc:AxisY2D>
                                            </dxc:XYDiagram2D.AxisY>
                                            <dxc:LineSeries2D  DisplayName="Loss" DataSource="{Binding LossData}"
                                                          ArgumentDataMember="X"
                                                          ValueDataMember="Y"
                                                          />
                                        </dxc:XYDiagram2D>
                                    </dxc:ChartControl>
                                    <UniformGrid Columns="2" Margin="0,8,0,0">
                                        <Label Margin="16,0" Padding="8,4" Foreground="White" Background="{DynamicResource GreenIOS}" Content="Label image" HorizontalAlignment="Center"></Label>
                                        <Label Margin="16,0" Padding="8,4" Foreground="White" Background="{DynamicResource BlueIOS}" Content="Predict image" HorizontalAlignment="Center"></Label>
                                    </UniformGrid>
                                    <UniformGrid Margin="8" Columns="2">

                                        <Image Margin="16,0" Source="{Binding ImageGt}"></Image>
                                        <Image Margin="16,0" Source="{Binding ImagePred}"></Image>
                                    </UniformGrid>
                                </StackPanel>
                            </Grid>
                        </Border>

                    </Grid>
                </Grid>
            </dx:DXTabItem>
            <dx:DXTabItem x:Name="tab_eval" Header="Evaluation" d:IsSelected="True">
                <Grid x:Name="grid_eval">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="350"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="1"  Margin="0" Fill="#20000000" HorizontalAlignment="Right"></Rectangle>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"> </RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel >
                            <Border x:Name="toolbar_grid_eval"  Grid.ColumnSpan="2" Padding="16" BorderBrush="#20000000">
                                <Grid>

                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal"  VerticalAlignment="Center" >
                                        <Button x:Name="btn_eval"  Content="Start evaluation" Visibility="{Binding IsEvaluation,Converter={StaticResource BoolToVisibilityCollapse}}" FontSize="14"  Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="14,8,14,8" Background="{DynamicResource BlackBrush}" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource ButtonDarkMode}" Click="btn_eval_Click"></Button>
                                        <Button x:Name="btn_stop_eval"  Content="Stop evaluation" Visibility="{Binding IsEvaluation,Converter={StaticResource BoolToVisibilityConverter}}" FontSize="14"  Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="14,8,14,8" Background="{DynamicResource RedIOS}" BorderBrush="{x:Null}" Foreground="{DynamicResource WhiteBrush}" Style="{DynamicResource ButtonDarkMode}" Click="btn_stop_eval_Click" ></Button>

                                    </StackPanel>

                                </Grid>

                            </Border>
                            <dxe:ProgressBarEdit Margin="16,0,16,8" Value="{Binding EvaluationProgress}" Maximum="100" Minimum="0" Height="25" ContentDisplayMode="Value" DisplayFormatString="{}{0}%" ></dxe:ProgressBarEdit>
                            <Grid  >
                                
                                <StackPanel x:Name="stack_eval_parameter" >
                                    <StackPanel Margin="16,0,16,16" Orientation="Vertical">
                                        <StackPanel  >
                                            <Label  FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">Dataset</Label>
                                            <UniformGrid Columns="2" Margin="8,0,0,0">
                                                <Label Content="Total samples:"  ></Label>
                                                <Label Content="{Binding TotalSamples}" FontWeight="SemiBold" HorizontalAlignment="Center"></Label>
                                            </UniformGrid>
                                            <Rectangle Height="4"></Rectangle>
                                            

                                        </StackPanel>



                                    </StackPanel>
                                    <Rectangle Height="1"  Margin="0" Fill="#20000000" ></Rectangle>
                                    
                                    
                                    

                                </StackPanel>
                               
                            </Grid>
                            

                        </StackPanel>

                        <ScrollViewer Grid.Row="1">

                            <ListBox x:Name="lst_evaluation_image" Margin="16" 
                                     ItemsSource="{Binding ClassificationResult}"
                                     SelectionChanged="lst_evaluation_image_SelectionChanged" 
                                     VirtualizingPanel.IsVirtualizing="True" HorizontalContentAlignment="Center" 
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Padding" Value="5"/>
                                        <Setter Property="Margin" Value="2"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Setter Property="Background" Value="Transparent" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="BorderBrush" Value="{DynamicResource BlueIOS}" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True" >
                                                <Setter Property="BorderBrush" Value="{DynamicResource BlueIOS}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate >
                                        <StackPanel>
                                            <Label Content="{Binding Probability}" Padding="8,4" ContentStringFormat="P1" 
                                                   Foreground="White" Background="{DynamicResource BlueIOS}"  
                                                   HorizontalAlignment="Stretch" ></Label>
                                            <Rectangle Height="1" HorizontalAlignment="Stretch" Fill="#20000000"></Rectangle>
                                            <Image   Height="100" Stretch="Uniform"  HorizontalAlignment="Center" Source="{Binding ImageBitmap,IsAsync=true}"  >

                                                <!--<Image.Source>

                                                    <BitmapImage DecodePixelHeight="100"  CacheOption="OnLoad" 
                                            UriSource="{Binding Image}"  />
                                                </Image.Source>-->
                                            </Image>
                                        </StackPanel>

                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel VirtualizingPanel.IsVirtualizing="True"  VerticalAlignment="Stretch" Orientation="Horizontal">

                                        </WrapPanel>
                                    </ItemsPanelTemplate>

                                </ListBox.ItemsPanel>
                            </ListBox>

                        </ScrollViewer>
                    </Grid>
                    <Grid Grid.Column="1" x:Name="grid_eval_status">
                        <Border Padding="16,12"  >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <StackPanel>
                                    <Label Content="Detail" FontSize="18" FontWeight="SemiBold"></Label>
                                    <Grid Margin="0,8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" >
                                            <dx:SimpleButton  Click="btn_zoom_in_click"  HorizontalAlignment="Left" Padding="2"  Margin="0,0,4,0" Glyph="{dx:DXImage 'Office2013/Zoom/ZoomIn_32x32.png'}" ></dx:SimpleButton>
                                            <dx:SimpleButton  Click="btn_zoom_out_click" HorizontalAlignment="Left" Padding="2" Margin="2,0" Glyph="{dx:DXImage 'Office2013/Zoom/ZoomOut_32x32.png'}" ></dx:SimpleButton>
                                            <dx:SimpleButton  Click="btn_zoom_fit_click" HorizontalAlignment="Left" Padding="2" Margin="2,0" Glyph="{dx:DXImage 'Office2013/Zoom/Zoom100_32x32.png'}" ></dx:SimpleButton>

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"  Grid.Column="1">
                                            <!--<Button x:Name="btn_go_to_original_source" Click="btn_go_to_original_source_Click" Padding="12,0" Content="Go to original source" HorizontalAlignment="Left" ></Button>-->
                                            <CheckBox x:Name="chk_heatmap"   VerticalAlignment="Center" 
                                                  
                                                  Template="{DynamicResource CheckBoxControlTemplateXboxSetting}" 
                                                  Content="Heatmap" Checked="chk_heatmap_Checked" Unchecked="chk_heatmap_Unchecked"></CheckBox>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" DataContext="{Binding SelectedItem,ElementName=lst_evaluation_image}">
                                            <dxe:TextEdit IsReadOnly="True" ShowBorder="False" Text="{Binding FileName}" FontWeight="SemiBold"></dxe:TextEdit>

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"  Grid.Column="1">
                                            <Label Content="{Binding PixelScore}" ContentStringFormat="Gray value: {0}" FontWeight="SemiBold"></Label>
                                        </StackPanel>
                                    </Grid>

                                </StackPanel>
                                <Grid Grid.Row="1" >
                                    <HalconDotNet:HSmartWindowControlWPF HMouseMove="image_detail_HMouseMove"   
                                                                     BorderThickness="1"  
                                                                     HKeepAspectRatio="True"
                                                                     BorderBrush="LightGray" 
                                                                     x:Name="image_detail" 
                                                                     HInitWindow="image_detail_HInitWindow"   >
                                        <dxb:BarManager.DXContextMenu>
                                            <dxb:PopupMenu>
                                                <dxb:PopupMenu.Items>
                                                    <dxb:BarButtonItem 
                                                    Content="Edit with Paint"
                                                    ItemClick="btn_edit_eval_paint_click" />

                                                </dxb:PopupMenu.Items>
                                            </dxb:PopupMenu>
                                        </dxb:BarManager.DXContextMenu>
                                    </HalconDotNet:HSmartWindowControlWPF>
                                </Grid>

                            </Grid>


                        </Border>

                    </Grid>
                </Grid>
            </dx:DXTabItem>
        </dx:DXTabControl>
    </Grid>
    
</dx:ThemedWindow>

<dx:ThemedWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns:converters="clr-namespace:NOVisionDesigner.Designer.ValueConverters" 
    xmlns:Keyboard="clr-namespace:NOVisionDesigner.Designer.Misc" 
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    Title="Scale Image Window"
    x:Class="NOVisionDesigner.Designer.Windows.ScaleImageWindow"
    mc:Ignorable="d"
    WindowStartupLocation="CenterScreen"
    Height="632.002" Width="1354.539" Loaded="MetroWindow_Loaded" 
    FontSize="14"  Foreground="Black" 
    Closed="Window_Closed" 
    Initialized="Window_Initialized" 
    FontFamily="Segoe UI" 
    ShowGlow="False" >
    <Window.Resources>
        <converters:StringToColor x:Key="StringToColor"/>
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />

        <SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
        <SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />

        <SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />

        <RadialGradientBrush x:Key="Brush2">
            <GradientStop Color="#FF272727" Offset="1"/>
            <GradientStop Color="#FF292828"/>
        </RadialGradientBrush>
        <Color x:Key="ColorGlow">#FF51EAFF</Color>
        <Style x:Key="ButtonGlowNew" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="True" Margin="2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF20ACEE"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>

            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border x:Name="border_glow" CornerRadius="4" BorderThickness="0">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="drop_efect_glow" Color="{DynamicResource ColorGlow}" ShadowDepth="0"/>
                                </Border.Effect>
                                <Border.BorderBrush>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF84C6FD" Offset="0"/>
                                        <GradientStop Color="#FF00B9FF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground}"/>-->
                                <Setter Property="BorderThickness" TargetName="border_glow" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground_pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ForceCursor" Value="True"/>
        </Style>
        <DropShadowEffect x:Key="Drop1" x:Name="drop_efect_glow" ShadowDepth="0" Color="{DynamicResource ColorGlow}"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Path x:Name="ButtonPath"
                              Margin="3"
                              Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square"
                              StrokeEndLineCap="Square"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" Width="10" Height="10" Data="M0,0 L25,25 M0,25 L25,0"/>
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonHoverBackgroundBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonHoverForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonPressedBackgroundBrush}" />
                                <Setter TargetName="backgroundEllipse" Property="Stroke"
                                    Value="{DynamicResource TabItemCloseButtonPressedBorderBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonPressedForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="EditMouseOverBrush" Color="#FF3B78FB" />
        <SolidColorBrush x:Key="BrushEditMousePress" Color="#FF04049B" />
        <Style x:Key="ButtonStyleEdit" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Image  Width="10" Height="10" />
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource EditMouseOverBrush}" />

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource BrushEditMousePress}" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>
    <Border ClipToBounds="True">
        <Grid>
            <Grid.RowDefinitions>

                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto" MinWidth="200"/>
            </Grid.ColumnDefinitions>

            <HalconDotNet:HSmartWindowControlWPF x:Name="window_display" 
                                                 HMouseDown="window_display_HMouseDown"
                                                 HInitWindow="window_display_HInitWindow" 
                                                 HMouseMove="Window_display_HMouseMove" Loaded="window_display_Loaded" Grid.Row="1" >
                <dxb:BarManager.DXContextMenu>
                    <dxb:PopupMenu>
                        <dxb:PopupMenu.Items>

                            <dxb:BarButtonItem
                                Glyph="{dx:DXImage 'SvgImages/Chart/ChartType_PolarArea.svg'}"
                                Content="Edit tool region" 
                                ItemClick="MenuItem_Click" />
                            <dxb:BarButtonItem
                                Glyph="{dx:DXImage 'SvgImages/Dashboards/Delete.svg'}"
                                Content="Remove" 
                                ItemClick="RemoveEdge_Click" />
                        </dxb:PopupMenu.Items>
                    </dxb:PopupMenu>
                </dxb:BarManager.DXContextMenu>
            </HalconDotNet:HSmartWindowControlWPF>
            <Border x:Name="toolbar_grid" BorderThickness="0,0,0,0" Grid.ColumnSpan="1" Padding="4" BorderBrush="#FFE5E5E5" Background="#FF171717">
                <Grid>

                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal"  VerticalAlignment="Center" >
                        <Button x:Name="btn_tool_add_new_edge"  BorderBrush="White" BorderThickness="1" Click="btn_add_new_edge_Click" 
                                FontWeight="SemiBold" Cursor="Hand" VerticalAlignment="Stretch" 
                                HorizontalAlignment="Center"
                                Foreground="White" 
                                Padding="4,4"
                                Style="{DynamicResource ButtonDarkMode}" Margin="0,0,2,0">
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock Text="New tool" Margin="4,0" VerticalAlignment="Center"></TextBlock>
                                <Viewbox Width="25" Height="25">
                                    <Canvas Width="24" Height="24" >
                                        <Path Fill="{DynamicResource WhiteBrush}" Data="M19,6H22V8H19V11H17V8H14V6H17V3H19V6M17,17V14H19V19H3V6H11V8H5V17H17Z" />
                                    </Canvas>
                                </Viewbox>
                            </StackPanel>

                        </Button>
                        
                    </StackPanel>
                    <Label x:Name="lb_gray_value" Foreground="White" 
                           ContentStringFormat="{}0.###"
                           HorizontalAlignment="Right" Margin="2,0" VerticalAlignment="Center"></Label>

                </Grid>

            </Border>

            <Grid Grid.RowSpan="2"  HorizontalAlignment="Stretch" Grid.Column="1">


                    <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="8" MinWidth="250">
                        <StackPanel>
                            <StackPanel x:Name="stack_edge" DataContext="{Binding ElementName=lst_edge,Path=SelectedItem}"  ScrollViewer.CanContentScroll="True" CanVerticallyScroll="True" >
                                <UniformGrid Columns="2"  >
                                    <Label Content="Name" VerticalAlignment="Bottom" Margin="2,4,0,0" HorizontalAlignment="Left"/>
                                    <Keyboard:TextboxWithKeyboard Margin="0" Text="{Binding Name,Mode=TwoWay}" 
                                                                  Style="{DynamicResource TextboxwithkeyboardFlat}"
                                                                  HorizontalAlignment="Stretch" MinWidth="100" VerticalAlignment="Stretch"  />
                                </UniformGrid>
                            <Rectangle Height="8"></Rectangle>
                            <UniformGrid Columns="2"  >
                                    <Label Content="Color" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left"/>
                                    <dxe:PopupColorEdit Color="{Binding DisplayColor, Converter={StaticResource StringToColor},Mode=TwoWay}" 
                                                         HorizontalAlignment="Stretch" />
                                </UniformGrid>
                                <Rectangle Height="8"></Rectangle>
                                <UniformGrid   Columns="2">

                                    <Label Content="Multiply" />
                                    
                                    <Keyboard:NumericUpDownWithKeyboard   Value="{Binding Multiply}" 
                                                                          StringFormat="{}0.##" Minimum="0" 
                                                                          
                                                                          MinWidth="50" Interval="0.1" />
                                </UniformGrid>
                            <Rectangle Height="8"></Rectangle>
                            <UniformGrid  Columns="2">
                                    <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Add" Margin="2,4,0,0"/>
                                    <Keyboard:NumericUpDownWithKeyboard   Value="{Binding Add}" 
                                                                         StringFormat="{}0.##" 
                                                                        Interval="0.1"
                                                                         MinWidth="50" />

                                    
                                </UniformGrid>
                            <Rectangle Height="8"></Rectangle>
                            <UniformGrid  Columns="2">
                                <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Region" Margin="2,4,0,0"/>
                                <Button  
                                        BorderThickness="1" BorderBrush="{DynamicResource BlueIOS}" 
                                        Click="btn_edit_region_Click"
                                        Content="Edit Region"/>


                            </UniformGrid>



                        </StackPanel>
                            <StackPanel x:Name="stack_workspace" Visibility="Visible" Margin="2,10,2,2" Orientation="Vertical">

                                <Grid>
                                    <Label VerticalAlignment="Top" HorizontalAlignment="Left" 
                                           FontWeight="SemiBold" Content="Tool list" Margin="5,4,0,0" />
                                    <Button x:Name="btn_add_class" VerticalAlignment="Bottom" 
                                            Click="btn_new_edge_Click" HorizontalAlignment="Right" 
                                            Margin="0" VerticalContentAlignment="Center" 
                                            HorizontalContentAlignment="Center"
                                            Style="{DynamicResource ButtonDarkMode}"
                                            Padding="6" BorderBrush="White" >
                                        <Viewbox Width="20" Height="20">
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="#FF575757" />
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                    
                                </Grid>
                                <ListBox x:Name="lst_edge" SelectionChanged="lst_edge_SelectionChanged" 
                                         Margin="5,5,0,5" MinHeight="120">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="Background" Value="#FF0082EE" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True" >
                                                <Setter Property="Background" Value="#FF108DF5" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>

                                    <DataTemplate >

                                        <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Margin="2">
                                            <Grid Background="{x:Null}" HorizontalAlignment="Stretch">
                                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="5,0,25,2">

                                                    <Label VerticalAlignment="Center">
                                                        <TextBlock  TextTrimming="CharacterEllipsis"   
                                                            Text="{Binding Name}" />
                                                    </Label>

                                                </StackPanel>

                                                <Button x:Name="btn_remove" Background="Transparent" Margin="0,0,2,0"
                                                        Padding="2" BorderThickness="0" VerticalAlignment="Center"  
                                                        HorizontalAlignment="Right" 
                                                        Click="btn_remove_Click">
                                                    <Viewbox Width="15" Height="15">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Button>
                                            </Grid>

                                        </StackPanel>




                                    </DataTemplate>

                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel HorizontalAlignment="Stretch" Margin="0" Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>





                            </StackPanel>
                            
                           
                        </StackPanel>

                    </ScrollViewer>



            </Grid>






        </Grid>
    </Border>
</dx:ThemedWindow>

<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows"
        xmlns:Controls="clr-namespace:NOVisionDesigner.Designer.Controls" xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
        xmlns:converters="clr-namespace:NOVisionDesigner.Designer.ValueConverters" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
        xmlns:Keyboard="clr-namespace:NOVisionDesigner.Designer.Misc" xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" x:Class="NOVisionDesigner.Designer.Windows.FindEdgeEditorWindow"
        mc:Ignorable="d"
        Title="FindEdgeEditorWindow" Height="450" Width="800">
    <Window.Resources>
        <converters:StringToColor x:Key="StringToColor"/>
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />

        <SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
        <SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />

        <SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />

        <RadialGradientBrush x:Key="Brush2">
            <GradientStop Color="#FF272727" Offset="1"/>
            <GradientStop Color="#FF292828"/>
        </RadialGradientBrush>
        <Color x:Key="ColorGlow">#FF51EAFF</Color>
        <Style x:Key="ButtonGlowNew" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="True" Margin="2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF20ACEE"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border x:Name="border_glow" CornerRadius="4" BorderThickness="0">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="drop_efect_glow" Color="{DynamicResource ColorGlow}" ShadowDepth="0"/>
                                </Border.Effect>
                                <Border.BorderBrush>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF84C6FD" Offset="0"/>
                                        <GradientStop Color="#FF00B9FF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground}"/>-->
                                <Setter Property="BorderThickness" TargetName="border_glow" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground_pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ForceCursor" Value="True"/>
        </Style>
        <DropShadowEffect x:Key="Drop1" x:Name="drop_efect_glow" ShadowDepth="0" Color="{DynamicResource ColorGlow}"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Path x:Name="ButtonPath"
                              Margin="3"
                              Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square"
                              StrokeEndLineCap="Square"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" Width="10" Height="10" Data="M0,0 L25,25 M0,25 L25,0"/>
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonHoverBackgroundBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonHoverForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonPressedBackgroundBrush}" />
                                <Setter TargetName="backgroundEllipse" Property="Stroke"
                                    Value="{DynamicResource TabItemCloseButtonPressedBorderBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonPressedForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="EditMouseOverBrush" Color="#FF3B78FB" />
        <SolidColorBrush x:Key="BrushEditMousePress" Color="#FF04049B" />
        <Style x:Key="ButtonStyleEdit" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Image  Width="10" Height="10" />
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource EditMouseOverBrush}" />

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{StaticResource BrushEditMousePress}" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="280"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1" HorizontalAlignment="Center">
            <ScrollViewer VerticalScrollBarVisibility="Auto" Width="280" BorderThickness="0">
                <StackPanel>
                    <StackPanel x:Name="stack_edge" ScrollViewer.CanContentScroll="True" CanVerticallyScroll="True" Margin="0,0,0,0">
                        <Grid Margin="5,5,10,2" Height="55" >

                            <Label Content="Sigma" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left"/>
                            <dxe:SpinEdit Margin="0,4,2,0" Value="{Binding Value, ElementName=sld_sigma, Mode=TwoWay}" MinValue="1" VerticalAlignment="Top" HorizontalAlignment="Right" MinWidth="50" Increment="0.1" Width="50" />
                            <Slider Style="{x:Null}" x:Name="sld_sigma" Margin="2,0,2,2" Minimum="1" Maximum="255"  LargeChange="1" SmallChange="0.1" VerticalAlignment="Bottom" ValueChanged="Sld_Sigma_ValueChanged"/>
                        </Grid>
                        <Grid Margin="5,10,10,2" Height="55">
                            <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Threshold" Margin="2,4,0,0"/>
                            <dxe:SpinEdit Margin="0,4,2,0" Value="{Binding Value, ElementName=sld_threshold, Mode=TwoWay}" MinValue="1" VerticalAlignment="Top" HorizontalAlignment="Right" MinWidth="50"/>

                            <Slider Style="{x:Null}" x:Name="sld_threshold" Minimum="1" Maximum="255"  VerticalAlignment="Bottom" Margin="2,0,2,2" ValueChanged="Sld_Threshold_ValueChanged"/>
                        </Grid>
                        <Grid Margin="5,5,10,2" >
                            <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Transition" Margin="2,4,0,0"/>
                            <ComboBox Margin="0,4,2,0" x:Name="cmb_transition" SelectedIndex="0" VerticalContentAlignment="Center"  Style="{x:Null}" VerticalAlignment="Top" SelectionChanged="cmb_transtion_SelectionChanged" HorizontalContentAlignment="Right" HorizontalAlignment="Right">
                                <System:String>all</System:String>
                                <System:String>negative</System:String>
                                <System:String>positive</System:String>
                            </ComboBox>
                        </Grid>
                        <Grid Margin="5,5,10,2">
                            <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Selection" Margin="2,4,0,0"/>
                            <ComboBox Margin="0,4,2,0" x:Name="cmb_select" SelectedIndex="0" Style="{x:Null}" VerticalAlignment="Top" HorizontalContentAlignment="Right" SelectionChanged="cmb_select_SelectionChanged" VerticalContentAlignment="Center" HorizontalAlignment="Right">
                                <System:String>all</System:String>
                                <System:String>first</System:String>
                                <System:String>last</System:String>
                            </ComboBox>
                        </Grid>
                        <Grid Margin="5,5,10,2" >
                            <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Detection mode" Margin="2,4,0,0"/>
                            <ComboBox Margin="0,4,2,0" x:Name="cmb_detectionMode" SelectedIndex="0" Style="{x:Null}" VerticalAlignment="Top" HorizontalContentAlignment="Right" SelectionChanged="cmb_detectionMode_SelectionChanged" VerticalContentAlignment="Center" HorizontalAlignment="Right">
                                <System:String>Auto</System:String>
                                <System:String>Manual</System:String>

                            </ComboBox>
                        </Grid>


                    </StackPanel>
                    <StackPanel x:Name="stack_workspace" Margin="2,10,10,2" Orientation="Vertical">

                        <Grid>
                            <Label VerticalAlignment="Top" HorizontalAlignment="Left" Content="Edges list" Margin="5,4,0,0" />
                            <Button x:Name="btn_add_class" VerticalAlignment="Bottom" Click="btn_new_edge_Click" HorizontalAlignment="Right" Margin="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  Width="25" Height="25" Padding="0" BorderBrush="White">
                                <Viewbox Width="15" Height="15">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="#FF575757" />
                                    </Canvas>
                                </Viewbox>
                            </Button>
                            <Button x:Name="btn_remove_edge" VerticalAlignment="Bottom" Click="btn_remove_edge_Click" HorizontalAlignment="Right" Margin="0,0,30,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  Width="25" Height="25" Padding="0" BorderBrush="White">
                                <Viewbox Width="15" Height="15" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="45"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="Red" />
                                    </Canvas>
                                </Viewbox>
                            </Button>

                        </Grid>
                        <ListBox x:Name="lst_edge" SelectionChanged="lst_edge_SelectionChanged" Margin="5,5,0,5" MinHeight="120" IsEnabled="False">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="30">
                                        <!--<Button x:Name="btn_remove_item" Content="X" Style="{DynamicResource ButtonStyle1}" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Rockwell" FontSize="12" Margin="0,0,4,0" Width="20" Height="20"/>
                                        <Button x:Name="btn_edit_item" Content="Edit" Style="{DynamicResource ButtonStyleEdit}" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Rockwell" FontSize="12" Margin="0,0,28,0" Width="20" Height="20" />-->
                                        <TextBlock Text="{Binding id}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>

                                    </Grid>

                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Style.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}"/>
                                    </Style.Resources>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True" >
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                            </ListBox.ItemContainerStyle>
                        </ListBox>
                   
                    </StackPanel>
                </StackPanel>

            </ScrollViewer>
        </Grid>

        <Grid Grid.Column="0">
            <Grid Grid.Row="1">
                <HalconDotNet:HSmartWindowControlWPF HMoveContent="False" MouseRightButtonDown="window_display_MouseRightButtonDown" HInitWindow="window_display_HInitWindow" MouseLeftButtonUp="window_display_MouseLeftButtonUp"  x:Name="window_display" Margin="0,0,0,2"/>
            </Grid>
        </Grid>
    </Grid>
</Window>

<Window x:Class="NOVisionDesigner.Designer.Windows.RectangleMetrologyWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" 
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
        xmlns:Misc="clr-namespace:NOVisionDesigner.Designer.Misc" 
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
        xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid" 
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts" 
        xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet"
        mc:Ignorable="d"
        Title="RectangleMetrologyWindow" Height="800" Width="1200">
    <Window.Resources>

        <Misc:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:StringToColor x:Key="StringToColor"/>
        <Style TargetType="Label" x:Key="tagstyle">
            <Setter Property="Background" Value="{DynamicResource GreenIOS}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Tag}" Value="bad">
                    <Setter Property="Background" Value="{DynamicResource RedIOS}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="#FFFDFDFD"/>


                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                    <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Padding" Value="6,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}"  CornerRadius="2">
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FF0086E2"/>
                                        <Setter Property="Foreground" Value="White"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>

        <Style TargetType="{x:Type Button}" >
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Padding" Value="8,4"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="#FFE2E2E2"/>
                </Style>
            </Style.BasedOn>
        </Style>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="48"></RowDefinition>
        </Grid.RowDefinitions>
        <Border x:Name="toolbar_grid" BorderThickness="0,0,0,1" Grid.ColumnSpan="2" Padding="4" BorderBrush="#FFE5E5E5" Background="#FF171717" Grid.Row="1">
            <Grid>

                <UniformGrid HorizontalAlignment="Center" Columns="3"  VerticalAlignment="Center" >
                    <Button x:Name="btn_ok"   Content="OK" FontSize="14" FontWeight="SemiBold" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="14,8,14,8" Background="{DynamicResource BlueIOS}" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource ButtonIOSBar}" Margin="2,0,2,0" Click="btn_ok_Click"></Button>
                    <Button x:Name="btn_apply"   Content="Apply" FontSize="14" FontWeight="SemiBold" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="14,8,14,8" Background="{DynamicResource BlueIOS}" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource ButtonIOSBar}" Margin="2,0,2,0" Click="btn_apply_Click"></Button>
                    <Button x:Name="btn_cancel"   Content="Cancel" FontSize="14" FontWeight="SemiBold" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="14,8,14,8" Background="{DynamicResource BlackIOS}" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource ButtonIOSBar}" Click="btn_cancel_Click" Margin="2,0,2,0"></Button>
                </UniformGrid>
                <StackPanel VerticalAlignment="Center" Margin="4" HorizontalAlignment="Right" Orientation="Horizontal">


                </StackPanel>

            </Grid>

        </Border>
        <Grid Grid.Row="0" Grid.RowSpan="1" Grid.ColumnSpan="2" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>
            <Rectangle Width="1"  Margin="0" Fill="#FFE5E5E5" HorizontalAlignment="Right"></Rectangle>

            <Border Grid.Row="0" Grid.Column="1"   >
                <Grid>
                    <StackPanel>
                        <StackPanel x:Name="stack_workspace"  Orientation="Vertical" >
                            <Grid x:Name="grid_runtime" Margin="16">
                                <StackPanel >
                                    <TextBlock Text="Options" FontWeight="SemiBold" FontSize="14" Foreground="#FF344054"/>
                                    <dxprg:PropertyGridControl FontSize="14" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalContentAlignment="Right" x:Name="propertiesGrid" ExpandCategoriesWhenSelectedObjectChanged="True" ShowCategories="Hidden" Margin="0,8,0,0" ShowToolPanel="False" ShowSearchBox="False" ShowGridLines="False">
                                        <dxprg:PropertyDefinition Type="{x:Type sys:Double}">
                                            <dxprg:PropertyDefinition.CellTemplate>
                                                <DataTemplate>

                                                    <Misc:NumericUpDownWithKeyboard x:Name="PART_Editor" Value="{Binding Value}" BorderThickness="1" />
                                                </DataTemplate>
                                            </dxprg:PropertyDefinition.CellTemplate>
                                        </dxprg:PropertyDefinition>
                                        <dxprg:PropertyDefinition Type="{x:Type sys:Int32}">
                                            <dxprg:PropertyDefinition.CellTemplate >
                                                <DataTemplate>
                                                    <dxe:TextEdit Name="PART_Editor" HorizontalContentAlignment="Right"/>
                                                </DataTemplate>
                                            </dxprg:PropertyDefinition.CellTemplate>
                                        </dxprg:PropertyDefinition>
                                        
                                    </dxprg:PropertyGridControl>
                                </StackPanel>
                            </Grid>
                            <Rectangle Height="1"  Margin="0" Fill="#FFE5E5E5"></Rectangle>
                            <StackPanel Margin="16">
                                <TextBlock Text="Result"  FontWeight="SemiBold" FontSize="14" Foreground="Black"></TextBlock>

                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
            <Grid Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Margin="5,5,5,5" Focusable="True" ClipToBounds="True" Background="Black" >
                    <HalconDotNet:HSmartWindowControlWPF Focusable="True"     HMoveContent="True"   x:Name="window_display" Margin="0,34,0,0" HInitWindow="window_display_HInitWindow" >
                        <dxb:BarManager.DXContextMenu>
                            <dxb:PopupMenu>
                                <dxb:PopupMenu.Items>
                                    <dxb:BarButtonItem
                                Content="Edit Region of Interest"
                                 />
                                    <dxb:BarButtonItem
                                Content="Apply region of interest to all"
                                 />
                                    <dxb:BarButtonItem
                                Content="Clear Region of Interest"
                                 />
                                </dxb:PopupMenu.Items>
                            </dxb:PopupMenu>
                        </dxb:BarManager.DXContextMenu>
                    </HalconDotNet:HSmartWindowControlWPF>
                    <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="Transparent" >
                        
                        <StackPanel x:Name="stack_roi" Orientation="Horizontal" Margin="2,2,2,2" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                            <Button  Margin="2"  Content="Grab image" Click="btn_grab_image_Click"></Button>
                            <Button  Margin="2"  Content="Open image"></Button>
                            <!--<Button x:Name="btn_undo" ToolTip="undo"   Click="btn_undo_Click" Style="{DynamicResource ButtonIOSBar}" Padding="8,8,8,8"  >
                                <Viewbox Width="15" Height="15">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M13.5,7A6.5,6.5,0,0,1,20,13.5A6.5,6.5,0,0,1,13.5,20L10,20 10,18 13.5,18C16,18 18,16 18,13.5 18,11 16,9 13.5,9L7.83,9 10.91,12.09 9.5,13.5 4,8 9.5,2.5 10.92,3.91 7.83,7 13.5,7 M6,18L8,18 8,20 6,20 6,18z" Fill="White" />
                                    </Canvas>
                                </Viewbox>
                            </Button>
                            <Button x:Name="btn_redo" ToolTip="redo" Margin="2,0"  Click="btn_redo_Click" Style="{DynamicResource ButtonIOSBar}" Padding="8,8,8,8" >
                                <Viewbox Width="15" Height="15">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M10.5,7A6.5,6.5,0,0,0,4,13.5A6.5,6.5,0,0,0,10.5,20L14,20 14,18 10.5,18C8,18 6,16 6,13.5 6,11 8,9 10.5,9L16.17,9 13.09,12.09 14.5,13.5 20,8 14.5,2.5 13.08,3.91 16.17,7 10.5,7 M18,18L16,18 16,20 18,20 18,18z" Fill="White" />
                                    </Canvas>
                                </Viewbox>
                            </Button>-->
                        </StackPanel>
                        <Border Margin="0,2,4,2" Padding="4" HorizontalAlignment="Right" VerticalAlignment="Center"   >
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Opacity" VerticalAlignment="Center" Margin="10,0,4,0" Padding="0,0,0,0" Foreground="White"/>
                                <Slider x:Name="slider_opacity" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                                <Label Content="{Binding Value,ElementName=slider_opacity}"  VerticalAlignment="Center" HorizontalContentAlignment="Right" Width="40"   ContentStringFormat="{}{0:0} %" Foreground="White"/>
                            </StackPanel>
                        </Border>
                        <!--<Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding SelectedItem.FileName,FallbackValue=Imagename,ElementName=lst_view}" Background="#FFFFFFFF" Padding="16,3" />-->
                    </Grid>
                </Grid>


            </Grid>
            <GridSplitter Grid.Column="0" 
                      
              Margin="0,0,0,0"
              HorizontalAlignment="Right" 
              VerticalAlignment="Stretch"
              Background="Transparent" 
              ShowsPreview="true"
              Width="2"/>

        </Grid>





        
        <dx:WaitIndicator Grid.RowSpan="2" Content="{Binding WaitMessage}" DeferedVisibility="{Binding ShowMessage}" d:IsHidden="True"/>

    </Grid>
</Window>

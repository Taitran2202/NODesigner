<dx:ThemedWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts" xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:misc="clr-namespace:NOVisionDesigner.Designer.Misc" x:Class="NOVisionDesigner.Designer.Windows.PatternWindow"
        mc:Ignorable="d"
        SnapsToDevicePixels="True"
    ShowGlow="False"
         x:Name="MainWD"
        WindowStartupLocation="CenterScreen"  WindowState="Normal"
        Title="PatternWindow" Height="800" Width="1200" FontSize="14">
    <Window.Resources>
        <dxc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <dxdove:BoolInverseConverter x:Key="BoolInverseConverter"/>
        <misc:InvertBoolToVisibilityCollapse  x:Key="InvertBoolToVisibilityCollapse"/>
    </Window.Resources>
    <Grid>
        <Border Grid.Row="1" BorderBrush="#20000000"  Padding="2" IsEnabled="{Binding IsWaiting,Converter={StaticResource BoolInverseConverter}}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="48"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="1"    BorderBrush="#20000000" Grid.Row="1">
                    <Grid >
                        
                        
                        <Grid Grid.Row="1">
                            <HalconDotNet:HSmartWindowControlWPF  x:Name="window_display" 
                                                                  HInitWindow="window_display_HInitWindow" 
                                                                  HMouseMove="window_display_HMouseMove" 
                                                                  HMouseDown="window_display_HMouseDown" 
                                                                  HMouseWheel="window_display_HMouseWheel" 
                                                                  SizeChanged="window_display_SizeChanged"/>
                            <StackPanel  x:Name="box_pattern_accept" Orientation="Horizontal"  VerticalAlignment="Top" 
                                         HorizontalAlignment="Left" 
                                         Visibility="{Binding IsDrawing, Converter={StaticResource BoolToVisibilityConverter}}" d:IsHidden="True">
                                <Button x:Name="btn_accept_pattern" Click="btn_accept_pattern_Click" Content="Accept" />
                                <Button x:Name="btn_discard_pattern" Click="btn_discard_pattern_Click" Content="Cancel" Background="Red" />
                            </StackPanel>
                            <StackPanel Margin="0,5,0,0" Background="Black"  VerticalAlignment="Top" HorizontalAlignment="Center" Orientation="Horizontal">
                                <Label Content="Opacity" VerticalAlignment="Center" Margin="10,0,4,0" Padding="0,0,0,0"/>
                                <Slider x:Name="slider_opacity" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                                <Label Content="{Binding Value,ElementName=slider_opacity}" Width="38" VerticalAlignment="Center" Margin="2,0,0,0" ContentStringFormat="{}{0:00} %"/>
                            </StackPanel>
                        </Grid>

                    </Grid>

                </Border>
                <Border Padding="16"   BorderBrush="#20000000" Grid.Row="1" >
                    <StackPanel Focusable="True" x:Name="Tab_Grid"  >
                        
                        <TabControl Grid.Row="0"  Margin="0,0,0,0" x:Name="MainTab" Visibility="Collapsed">
                            <TabItem Header="Train Param" x:Name="TrainTab" Height="30" Padding="12,6,12,3" >

                                <Grid>

                                    <StackPanel Grid.ColumnSpan="2" >





                                    </StackPanel>

                                    
                                </Grid>

                            </TabItem>

                            <TabItem Header="Runtime Param" x:Name="RuntimeTab" Padding="12,6,12,3" >
                                <Grid>
                                    <StackPanel >
                                       

                                    </StackPanel>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Result" x:Name="ResultTab" Padding="12,6,12,3" >
                                <Grid>
                                    <ListView x:Name="lst_class" BorderThickness="1" BorderBrush="#20000000" ItemsSource="{Binding listResult}" SelectedIndex="{Binding Current_Index}">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <!--<Style TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>-->
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="ID" DisplayMemberBinding="{Binding ID}" Width="30"/>
                                                <GridViewColumn Header="Angle" DisplayMemberBinding="{Binding Angle}" Width="100"/>
                                                <GridViewColumn Header="Score" DisplayMemberBinding="{Binding Score}" Width="100"/>
                                            </GridView>
                                        </ListView.View>

                                    </ListView>

                                </Grid>

                            </TabItem>
                        </TabControl>
                        <StackPanel  >
                            <Grid Margin="0,0,0,5">
                                <TextBlock Text="Pattern image" FontWeight="SemiBold" FontSize="14"  VerticalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Viewbox Width="24" Height="24" HorizontalAlignment="Right">
                                        <Canvas Width="24" Height="24">
                                            <Path Fill="{DynamicResource GreenIOS}" Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock Text="Created" VerticalAlignment="Center" Margin="5,0,5,0" FontWeight="SemiBold" ></TextBlock>
                                </StackPanel>
                                
                            </Grid>
                            <Grid />
                            <Border  Margin="2" BorderBrush="#FF676767" BorderThickness="1,1,1,1">
                                <StackPanel>
                                    <HalconDotNet:HSmartWindowControlWPF Height="200"  BorderBrush="LightGray" x:Name="window_model" HInitWindow="window_display_HInitWindow2"/>
                                    <UniformGrid Columns="2">
                                        <Button x:Name="btn_change_pattern" FontSize="14" IsEnabled="{Binding IsDrawing, Converter={StaticResource BoolInverseConverter}}" 
                                                Click="btn_change_pattern_Click" Content="Edit Pattern" HorizontalAlignment="Stretch" 
                                                VerticalAlignment="Stretch" Height="30" Style="{DynamicResource ButtonDarkMode}" 
                                                 />
                                        <Button IsEnabled="{Binding IsDrawing, Converter={StaticResource BoolInverseConverter}}" 
                                                Content="Search Region" x:Name="btn_edit_search_region" 
                                                Click="btn_edit_search_region_Click"  
                                                VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                                FontSize="14"  Style="{DynamicResource ButtonDarkMode}" />
                                    </UniformGrid>




                                </StackPanel>


                            </Border>
                            <StackPanel Visibility="{Binding IsDrawing, Converter={StaticResource InvertBoolToVisibilityCollapse}}">
                                <Grid >
                                    <StackPanel Margin="0,5,0,0">
                                        <Grid Margin="0,0,0,5">
                                            <Label Content="Rotation range" VerticalAlignment="Center" Margin="2,4,0,2" HorizontalAlignment="Left" />
                                            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0,2,2,4">
                                                <misc:NumericUpDownWithKeyboard Value="{Binding SelectionStart, ElementName=train_slider_range, Mode=TwoWay}" Minimum="-180" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="50" Maximum="180" Interval="1" Width="Auto"   />

                                                <misc:NumericUpDownWithKeyboard Value="{Binding SelectionEnd, ElementName=train_slider_range, Mode=TwoWay}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="50" Maximum="180" Width="Auto"  Margin="5,0,2,0"  />

                                            </StackPanel>
                                        </Grid>

                                        <dxe:TrackBarEdit x:Name="train_slider_range" SelectionStart="{Binding param.TrainParam.LowerAngle, Mode=TwoWay}" SelectionEnd="{Binding param.TrainParam.UpperAngle, Mode=TwoWay}"  Margin="2,0,2,2" Minimum="-180" Maximum="180"  VerticalAlignment="Bottom" TickPlacement="None"  >

                                            <dxe:TrackBarEdit.StyleSettings>
                                                <dxe:TrackBarRangeStyleSettings />
                                            </dxe:TrackBarEdit.StyleSettings>
                                        </dxe:TrackBarEdit>

                                    </StackPanel>

                                </Grid>

                                <Grid Margin="0,5,5,0">

                                    <Label Content="Num levels" Grid.Column="0" VerticalAlignment="Top" Margin="2,0,0,0" HorizontalAlignment="Left"/>
                                    <misc:NumericUpDownWithKeyboard Value="{Binding param.TrainParam.NumLevels, Mode=TwoWay}"  Grid.Column="1" Minimum="0" Maximum="10" Interval="1" VerticalAlignment="Center" MinWidth="100" HorizontalAlignment="Right"  />
                                </Grid>
                                <CheckBox Content="Ignore image polarity (black/white)" IsChecked="{Binding param.TrainParam.UsePolarity, Mode=TwoWay}" Grid.Column="1" VerticalAlignment="Center"   Margin="5,10,0,0" Grid.ColumnSpan="2" Template="{DynamicResource CheckBoxControlTemplateRoundIOSGlobal}" HorizontalAlignment="Left"/>

                            </StackPanel>
                            
                            
                        </StackPanel>
                        <Rectangle Margin="10,20" Height="1" Fill="#20000000"></Rectangle>
                        <Grid Margin="0,0,0,5">
                            <TextBlock Text="Runtime options" FontWeight="SemiBold" FontSize="14"  VerticalAlignment="Center"/>
                            

                        </Grid>
                        
                        <Grid>
                            <StackPanel>
                                <Grid Margin="0,5,0,5">
                                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0,2,2,4">
                                        <misc:NumericUpDownWithKeyboard Value="{Binding SelectionStart, ElementName=slider_range, Mode=TwoWay}"  Minimum="-180" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="50" Maximum="180" Interval="1" Width="Auto" />

                                        <misc:NumericUpDownWithKeyboard Value="{Binding SelectionEnd, ElementName=slider_range, Mode=TwoWay}"  Minimum="-180" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="50" Maximum="180" Interval="1" Width="Auto" Margin="5,0,2,0"  />

                                    </StackPanel>
                                    <Label Content="Rotation range" VerticalAlignment="Top" Margin="2,4,0,2" HorizontalAlignment="Left" />
                                </Grid>

                                <dxe:TrackBarEdit x:Name="slider_range"  SelectionStart="{Binding param.RuntimeParam.LowerAngle, Mode=TwoWay}" SelectionEnd="{Binding param.RuntimeParam.UpperAngle, Mode=TwoWay}"  Margin="2,0,2,2" Minimum="-180" Maximum="180"  VerticalAlignment="Bottom" TickPlacement="None"  >

                                    <dxe:TrackBarEdit.StyleSettings>
                                        <dxe:TrackBarRangeStyleSettings />
                                    </dxe:TrackBarEdit.StyleSettings>
                                </dxe:TrackBarEdit>

                            </StackPanel>

                        </Grid>

                        <Grid Margin="0,10,0,0">

                            <Label Content="Min Score" Grid.Column="0" VerticalAlignment="Top" Margin="2,0,0,0" HorizontalAlignment="Left"/>
                            <misc:NumericUpDownWithKeyboard Value="{Binding param.RuntimeParam.MinScore, Mode=TwoWay}"  Grid.Column="1" Minimum="0" Maximum="1" Interval="0.05" VerticalAlignment="Center" MinWidth="100" HorizontalAlignment="Right"  StringFormat="#.00"  />
                        </Grid>
                        <Grid Margin="0,2,0,0">

                            <Label Content="Num Matches" Grid.Column="0" VerticalAlignment="Top" Margin="2,0,0,0" HorizontalAlignment="Left"/>
                            <misc:NumericUpDownWithKeyboard Value="{Binding param.RuntimeParam.NumMatches, Mode=TwoWay}"  Grid.Column="1" Minimum="0" Maximum="50" Interval="1" VerticalAlignment="Center" MinWidth="100" HorizontalAlignment="Right"/>
                        </Grid>
                        <Grid Margin="0,2,0,0">

                            <Label Content="Max Overlap" Grid.Column="0" VerticalAlignment="Top" Margin="2,0,0,0" HorizontalAlignment="Left"/>
                            <misc:NumericUpDownWithKeyboard Value="{Binding param.RuntimeParam.MaxOverlap, Mode=TwoWay}"  Grid.Column="1" Minimum="0" Maximum="1" Interval="0.05" VerticalAlignment="Center" MinWidth="100" HorizontalAlignment="Right"  StringFormat="#.00"  />
                        </Grid>
                        <Grid Margin="0,2,0,0">

                            <Label Content="Num Levels" Grid.Column="0" VerticalAlignment="Top" Margin="2,0,0,0" HorizontalAlignment="Left"/>
                            <misc:NumericUpDownWithKeyboard Value="{Binding param.RuntimeParam.NumLevels, Mode=TwoWay}"  Grid.Column="1" Minimum="0" Maximum="10" Interval="1" VerticalAlignment="Center" MinWidth="100" HorizontalAlignment="Right"  />
                        </Grid>

                    </StackPanel>
                </Border>

                <GridSplitter Grid.Column="1" 
                      
              Grid.RowSpan="2" 
              HorizontalAlignment="Left" 
              VerticalAlignment="Stretch"
              Background="Transparent" 
              ShowsPreview="true"
              Width="2"/>
                <Border x:Name="toolbar_grid"  Grid.ColumnSpan="2" 
                        Padding="4" BorderBrush="#FFE5E5E5" Background="#FF171717">
                    <Grid>

                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal"  VerticalAlignment="Center" >
                            <Button x:Name="btn_run" Margin="2,0"  Content="Run Once" 
                                    FontSize="14" Click="Run_Click" FontWeight="SemiBold" Cursor="Hand" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center" 
                                    Padding="14,8,14,8" Background="{DynamicResource BlueIOS}" 
                                    Foreground="White" Style="{DynamicResource ButtonIOSBar}"></Button>
                            <Button x:Name="btn_edit_pattern" Click="btn_change_pattern_Click" 
                                    Margin="8,0,2,0" Content="Edit pattern" FontSize="14"  
                                    FontWeight="SemiBold" Cursor="Hand" VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" Padding="14,8,14,8" Background="{DynamicResource BlackBrush}"  
                                    Foreground="White" Style="{DynamicResource ButtonIOSBar}"></Button>
                            <Button x:Name="btn_edit_search" Click="btn_edit_search_region_Click" Margin="2,0" 
                                    Content="Edit search region" FontSize="14"  FontWeight="SemiBold" Cursor="Hand"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" Padding="14,8,14,8" 
                                    Background="{DynamicResource BlackBrush}"  Foreground="White" Style="{DynamicResource ButtonIOSBar}"></Button>
                        </StackPanel>
                        <StackPanel VerticalAlignment="Center" Visibility="{Binding ElementName=box_pattern_accept,Path=Visibility}"  
                                    HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button  Click="btn_accept_pattern_Click" Margin="2,0" Content="Accept"   
                                     FontWeight="SemiBold" Cursor="Hand" VerticalAlignment="Center"
                                     HorizontalAlignment="Center" Padding="14,6" Background="{DynamicResource GreenIOS}"  
                                     Foreground="Black" Style="{DynamicResource ButtonIOSBar}"></Button>
                            <Button  Click="btn_discard_pattern_Click" Margin="2,0" Content="Cancel"  
                                     FontWeight="SemiBold" Cursor="Hand" VerticalAlignment="Center" 
                                     HorizontalAlignment="Center" Padding="14,6" Background="{DynamicResource BlackBrush}"  
                                     Foreground="White" Style="{DynamicResource ButtonIOSBar}"></Button>

                        </StackPanel>

                    </Grid>

                </Border>
            </Grid>
        </Border>
        <dx:WaitIndicator DeferedVisibility="{Binding IsWaiting}" Content="Loading..." d:IsHidden="True">
            <dx:WaitIndicator.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Creating pattern, please Wait" FontSize="14"/>
                        
                    </StackPanel>
                </DataTemplate>
            </dx:WaitIndicator.ContentTemplate>
        </dx:WaitIndicator>
    </Grid>
</dx:ThemedWindow>

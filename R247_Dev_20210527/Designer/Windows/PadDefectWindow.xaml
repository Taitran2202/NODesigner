<dx:ThemedWindow x:Class="NOVisionDesigner.Designer.Windows.PadDefectWindow" 
                 mc:Ignorable="d" SnapsToDevicePixels="True" x:Name="MainWD" 
                 WindowStartupLocation="CenterScreen" WindowState="Normal" 
                 ShowGlow="False"
                 
                 FontSize="14" Title="BlobWindow" Height="800" Width="1200" 
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local="clr-namespace:NOVisionDesigner.Designer.Windows" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet" 
    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
    xmlns:misc="clr-namespace:NOVisionDesigner.Designer.Misc" 
    xmlns:nodes="clr-namespace:NOVisionDesigner.Designer.Nodes" 
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars">
    <dx:ThemedWindow.Resources>
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />

        <SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
        <SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />

        <SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Path x:Name="ButtonPath"
                              Margin="3"
                              Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square"
                              StrokeEndLineCap="Square"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" Width="10" Height="10" Data="M0,0 L25,25 M0,25 L25,0"/>
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonHoverBackgroundBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonHoverForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonPressedBackgroundBrush}" />
                                <Setter TargetName="backgroundEllipse" Property="Stroke"
                                    Value="{DynamicResource TabItemCloseButtonPressedBorderBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonPressedForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToggleButton}"

         x:Key="MyToggleButtonStyle">


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="#00000000">
                            <Viewbox Width="Auto" Height="Auto">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="image1"  Fill="{DynamicResource BlueIOS}" />
                                </Canvas>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="false">

                                <Setter Property="Data" TargetName="image1" Value="M17,13H13V17H11V13H7V11H11V7H13V11H17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="image1" Value="M17,13H7V11H17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"/>
                                <Setter Property="Fill" TargetName="image1" Value="{StaticResource OrangeIOS}"></Setter>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>
        <misc:InvertBoolToVisibilityCollapse x:Key="BoolToVisibilityCollapse" />
        <local:StringToColor x:Key="StringToColor" />


    </dx:ThemedWindow.Resources>
    <Grid >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="350" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Margin="2,2,0,2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="34"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" ></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Margin="6,4">
                       
                        <dx:DropDownButton VerticalAlignment="Center" 
                                         GlyphHeight="25"
                                           
                                           Content="Add region"
                                         HorizontalAlignment="Stretch" 
                                         Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Add.svg'}">
                                        
                            <StackPanel>
                                <dx:SimpleButton
                                    Click="btn_add_rec_Click"
                                   Padding="4,8"
                                    HorizontalContentAlignment="Left"
                                    Content="Rectangle"></dx:SimpleButton>
                                <dx:SimpleButton
                                    Click="btn_add_rec2_Click"
                                    Padding="4,8"
                                    HorizontalContentAlignment="Left"
                                    Content="Rotated Rectangle"></dx:SimpleButton>
                                <dx:SimpleButton
                                    Click="btn_add_curve_Click"
                                    Padding="4,8"
                                    HorizontalContentAlignment="Left"
                                    Content="Curve"></dx:SimpleButton>
                                <dx:SimpleButton
                                    Click="btn_add_brush_Click"
                                    Padding="4,8"
                                    HorizontalContentAlignment="Left"
                                    Content="Brush"></dx:SimpleButton>
                                <dx:SimpleButton
                                    Click="btn_add_circle_Click"
                                    Padding="4,8"
                                    HorizontalContentAlignment="Left"
                                    Content="Circle"></dx:SimpleButton>
                                <dx:SimpleButton
                                    Click="btn_add_ellipse_Click"
                                    Padding="4,8"
                                    HorizontalContentAlignment="Left"
                                    Content="Ellipse"></dx:SimpleButton>
                            </StackPanel>
                        </dx:DropDownButton>
                    </Grid>
                    <ScrollViewer  Grid.Row="1" VerticalScrollBarVisibility="Auto">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        
                            
                        
                        <ListBox x:Name="lst_region" 
                             Margin="6,2"
                         BorderThickness="0" MinHeight="200" 
                         SelectionChanged="lst_region_SelectionChanged" Padding="2">
                            <ListBox.Resources>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border x:Name="Bd"
                                                Background="#00000000"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="true" CornerRadius="0"  BorderThickness="2" >
                                                    <ContentPresenter 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Selector.IsSelectionActive"
                                                            Value="False" />
                                                            <Condition Property="IsSelected"
                                                            Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush"
                                                        TargetName="Bd"
                                                        Value="#FF059ECB" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Selector.IsSelectionActive"
                                                            Value="True" />
                                                            <Condition Property="IsSelected"
                                                            Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="BorderBrush"
                                                        TargetName="Bd"
                                                        Value="#FF059ECB" />
                                                    </MultiTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Bd" Property="BorderBrush" Value="#FF64D7F9" />
                                                    </Trigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.Resources>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border CornerRadius="5">
                                        <Grid Height="30">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <ToggleButton Style="{DynamicResource MyToggleButtonStyle}" IsChecked="{Binding Minus}" Width="25" Height="25"/>
                                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>

                                            </StackPanel>
                                            <!--<Button x:Name="btn_remove_item" Content="X" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Rockwell" FontSize="12" Margin="0,0,4,0" Click="btn_remove_Click" Width="20" Height="20" Style="{DynamicResource ButtonStyleRemoveItem}"/>-->
                                            <Button Grid.Column="1" x:Name="btn_remove_item" Margin="8,0,4,0" BorderThickness="0" 
                                                FontSize="12" VerticalAlignment="Center"  
                                                HorizontalAlignment="Right" Click="btn_remove_Click" 
                                                Style="{DynamicResource ButtonStyle1}" Width="20" Height="20">
                                                <Viewbox Width="15" Height="15">
                                                    <Canvas Width="24" Height="24">
                                                        <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                    </Canvas>
                                                </Viewbox>
                                            </Button>
                                        </Grid>
                                    </Border>


                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                            <Grid Grid.Row="1" Margin="6,2">
                            <StackPanel>
                                <Rectangle Height="4"></Rectangle>
                                <dx:SimpleButton Glyph="{dx:DXImage 'SvgImages/XAF/ModelEditor_Group.svg'}" 
                                                 GlyphAlignment="Left"
                                                 Padding="16,8"
                                                 Click="btn_edit_region_Click"
                                                 HorizontalContentAlignment="Left"
                                                 VerticalAlignment="Center"
                                                 HorizontalAlignment="Stretch"
                                                 Content="Edit region"></dx:SimpleButton>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    </ScrollViewer>
                    <HalconDotNet:HSmartWindowControlWPF x:Name="window_display" 
                                                     HInitWindow="window_display_HInitWindow" 
                                                     HMouseMove="window_HMouseMove" 
                                                         Grid.RowSpan="2"
                                                     Grid.Column="1">
                        <dxb:BarManager.DXContextMenu >
                            <dxb:PopupMenu>
                                <dxb:PopupMenu.Items>

                                    <dxb:BarButtonItem
                                   Glyph="pack://application:,,,/NOVISION Designer;component/Designer/icons/shape-rectangle-plus-custom.png"
                                    Content="Add rectangle"
                                ItemClick="btn_add_rect_Click" />
                                    <dxb:BarButtonItem
                                   Glyph="pack://application:,,,/NOVISION Designer;component/Designer/icons/shape-rectangle-plus-45d.png"
                                    Content="Add rotation rectangle"
                                ItemClick="btn_add_rect2_Click" />
                                    <dxb:BarButtonItem
                                   Glyph="pack://application:,,,/NOVISION Designer;component/Designer/icons/shape-polygon-plus-custom.png"
                                    Content="Add polygon"
                                ItemClick="btn_add_nurb_Click" />
                                    <dxb:BarButtonItem
                                   Glyph="pack://application:,,,/NOVISION Designer;component/Designer/icons/shape-circle-plus-custom.png"
                                    Content="Add circle"
                                ItemClick="btn_add_circle_Click" />
                                    <dxb:BarButtonItem
                                   Glyph="pack://application:,,,/NOVISION Designer;component/Designer/icons/icons8-ellipse-32.png"
                                    Content="Add ellipse"
                                ItemClick="btn_add_ellipse_Click" />
                                    <dxb:BarButtonItem
                                    Glyph="{dx:DXImage 'SvgImages/Dashboards/Delete.svg'}"
                                    Content="Remove"
                                ItemClick="btn_remove_Click" />
                                </dxb:PopupMenu.Items>
                            </dxb:PopupMenu>
                        </dxb:BarManager.DXContextMenu>
                    </HalconDotNet:HSmartWindowControlWPF>
                </Grid>
               
                <Border Padding="4" Background="#FF171717">
                    <Grid Margin="0">
                        <StackPanel  HorizontalAlignment="Left"  Orientation="Horizontal">
                            <ComboBox x:Name="cmb_channels" Background="Transparent" 
                                      SelectedItem="{Binding Channel,Mode=TwoWay}" Width="Auto" 
                                      Foreground="White"
                                      SelectionChanged="Cmb_channels_SelectionChanged" />
                            <Border >
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Pixel value:" Margin="12,0,0,0" Foreground="White" />
                                    <Label x:Name="lb_gray_value" 
                                           Foreground="White" 
                                           Content="0"
                               ContentStringFormat="{}0.###"
                               HorizontalAlignment="Right" Margin="8,0" VerticalAlignment="Center"></Label>
                                </StackPanel>
                            </Border>

                        </StackPanel>
                        <StackPanel Margin="0,0,0,0"  HorizontalAlignment="Center" Orientation="Horizontal">
                            <Label Content="Opacity" Foreground="White" VerticalAlignment="Center" Margin="10,0,4,0" Padding="0,0,0,0" />
                            <Slider x:Name="slider_opacity" Margin="5,0" Minimum="0" Value="{Binding ColorOpacity}" 
                                    Maximum="100" Width="100" VerticalAlignment="Center" SmallChange="1" />
                            <Label Content="{Binding ColorOpacity}" Width="38" 
                                   Foreground="White"
                                   VerticalAlignment="Center" Margin="2,0,0,0" ContentStringFormat="{}{0:00} %" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <CheckBox Content="Heatmap" Margin="8,0" 
                                      IsChecked="true"
                                      Foreground="White"
                                      Template="{DynamicResource CheckBoxControlTemplateFlat}"
                                          VerticalAlignment="Stretch" 
                                          Checked="ToggleButton_Checked" 
                                          Unchecked="ToggleButton_Unchecked" Padding="4,1,4,1" />

                            <dxe:PopupColorEdit 
                                Background="Transparent"
                                DisplayMode="Color" 
                                Color="{Binding Color, Converter={StaticResource StringToColor}, Mode=TwoWay}" 
                                VerticalAlignment="Stretch" HorizontalAlignment="Right" />

                        </StackPanel>

                    </Grid>
                </Border>

            </Grid>

            <Grid Grid.Column="1" Margin="2" Focusable="True" x:Name="Tab_Grid" MouseDown="Setting_Grid_MouseDown">
                <dx:DXTabControl Padding="0">
                    <dx:DXTabItem Header="Parameters">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="16">
                                <dxc:ChartControl x:Name="plot" Height="250" Margin="2" Padding="0" Visibility="Collapsed">
                                    <dxc:ChartControl.Diagram>
                                        <dxc:XYDiagram2D Background="#33FFFFFF">
                                            <dxc:XYDiagram2D.DefaultPane>
                                                <dxc:Pane DomainBrush="#33FFFFFF" DomainBorderBrush="#33E1DFDD" />
                                            </dxc:XYDiagram2D.DefaultPane>
                                            <dxc:XYDiagram2D.AxisY>

                                                <dxc:AxisY2D Interlaced="True" Brush="#19E1DFDD" LabelPosition="Inside">
                                                    <dxc:AxisY2D.GridLinesBrush>
                                                        <SolidColorBrush Color="#19C8C6C4" Opacity="1" />
                                                    </dxc:AxisY2D.GridLinesBrush>
                                                    <dxc:AxisY2D.Label>
                                                        <dxc:AxisLabel Visibility="Collapsed" />
                                                    </dxc:AxisY2D.Label>
                                                </dxc:AxisY2D>
                                            </dxc:XYDiagram2D.AxisY>
                                            <dxc:XYDiagram2D.AxisX>
                                                <dxc:AxisX2D Brush="#19E1DFDD">
                                                    <dxc:AxisX2D.WholeRange>
                                                        <dxc:Range MaxValue="255" MinValue="0" />
                                                    </dxc:AxisX2D.WholeRange>
                                                    <dxc:AxisX2D.VisualRange>
                                                        <dxc:Range MaxValue="255" MinValue="0" />
                                                    </dxc:AxisX2D.VisualRange>
                                                    <dxc:AxisX2D.GridLinesBrush>
                                                        <SolidColorBrush Color="#19C8C6C4" Opacity="1" />
                                                    </dxc:AxisX2D.GridLinesBrush>
                                                    <dxc:AxisX2D.ConstantLinesInFront>
                                                        <dxc:ConstantLine x:Name="line_pos">
                                                            <dxc:ConstantLine.Title>
                                                                <dxc:ConstantLineTitle Content="Positive" />
                                                            </dxc:ConstantLine.Title>

                                                        </dxc:ConstantLine>
                                                        <dxc:ConstantLine x:Name="line_neg">
                                                            <dxc:ConstantLine.Title>
                                                                <dxc:ConstantLineTitle Content="Negative" ShowBelowLine="True" />
                                                            </dxc:ConstantLine.Title>
                                                            <dxc:ConstantLine.Value>
                                                                <System:Double>0</System:Double>
                                                            </dxc:ConstantLine.Value>
                                                        </dxc:ConstantLine>
                                                    </dxc:AxisX2D.ConstantLinesInFront>
                                                </dxc:AxisX2D>
                                            </dxc:XYDiagram2D.AxisX>
                                            <dxc:LineSeries2D x:Name="series" DisplayName="Series 1" Brush="Black" />
                                        </dxc:XYDiagram2D>
                                    </dxc:ChartControl.Diagram>
                                </dxc:ChartControl>
                                <StackPanel >
                                    <StackPanel >

                                        <Label Content="Region" FontWeight="SemiBold" VerticalAlignment="Top" Margin="2,0,0,2" HorizontalAlignment="Stretch" />

                                        <UniformGrid HorizontalAlignment="Stretch" Margin="4,2,0,0" 
                                                     Columns="2"
                                                     Rows="2" VerticalAlignment="Stretch">
                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <Label Content="Inspection side"  Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>

                                            </Border>


                                            <ComboBox SelectedItem="{Binding InspectionSide}" HorizontalContentAlignment="Right">

                                                <ComboBox.Items>
                                                    <nodes:InspectionSideEnum>Inside</nodes:InspectionSideEnum>
                                                    <nodes:InspectionSideEnum>OutSide</nodes:InspectionSideEnum>
                                                </ComboBox.Items>
                                            </ComboBox>
                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <Label Content="Reduce border"  Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>

                                            </Border>


                                            <misc:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                                    Interval="0.5"
                                                                                 Maximum="255"
                                                                                 StringFormat="#.00"
                                                                   HorizontalContentAlignment="Center" 
                                                                   Value="{Binding ReduceBorder}" 
                                                ValueChanged="SpinEdit_EditValueChanged" Minimum="0"  ></misc:NumericUpDownWithKeyboard>
                                        </UniformGrid>

                                    </StackPanel>
                                    <Rectangle Height="8"></Rectangle>
                                    <Grid>
                                        <StackPanel >

                                            <Label Content="Threshold" FontWeight="SemiBold" VerticalAlignment="Top" Margin="2,0,0,2" HorizontalAlignment="Stretch" />

                                            <UniformGrid HorizontalAlignment="Stretch" Margin="4,2,0,0" Columns="2" Rows="2" VerticalAlignment="Stretch">
                                                <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                    <Label Content="Min threshold"  Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>

                                                </Border>

                                                <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                    <Label Content="Max threshold" Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>
                                                </Border>
                                                <misc:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                                    Interval="0.1"
                                                                                 Maximum="255"
                                                                                 StringFormat="#.00"
                                                                   HorizontalContentAlignment="Center" 
                                                                   Value="{Binding LowerValue}" 
                                                ValueChanged="SpinEdit_EditValueChanged" Minimum="0"  ></misc:NumericUpDownWithKeyboard>




                                                <misc:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                  
                                                                                 Interval="0.1"
                                                                                 Maximum="99999"
                                                                                 StringFormat="#.00"
                                                                   HorizontalContentAlignment="Center" 
                                                                   Value="{Binding UpperValue}" 
                                                ValueChanged="SpinEdit_EditValueChanged_1" Minimum="0"   ></misc:NumericUpDownWithKeyboard>
                                            </UniformGrid>

                                        </StackPanel>

                                    </Grid>
                                    <!--<dxe:TrackBarEdit Margin="5,5,0,0" x:Name="slider_range" EditValueChanged="range_slider_ValueChanged" 
                                                      SelectionStart="{Binding LowerValue,Mode=TwoWay}" SelectionEnd="{Binding UpperValue,Mode=TwoWay}" 
                                                      SmallStep="0.1"
                                                      LargeStep="0.2"
                                                      Minimum="0" Maximum="50" TickPlacement="None">
                                        <dxe:TrackBarEdit.StyleSettings>
                                            <dxe:TrackBarRangeStyleSettings />
                                        </dxe:TrackBarEdit.StyleSettings>
                                    </dxe:TrackBarEdit>-->
                                </StackPanel>
                                <Rectangle Height="8"></Rectangle>
                                <StackPanel >
                                    <StackPanel  >

                                        <Label Content="Post process" FontWeight="SemiBold" VerticalAlignment="Top" Margin="2,0,0,2" HorizontalAlignment="Stretch" />

                                        <UniformGrid HorizontalAlignment="Stretch" Margin="4,2,0,0" Columns="3" Rows="2" VerticalAlignment="Stretch">
                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <Label Content="Closing Circle"  Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>

                                            </Border>

                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <Label Content="Fill up" Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>
                                            </Border>
                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <Label Content="Invert" Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>
                                            </Border>
                                            <misc:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                   Interval="0.5"
                                                                   HorizontalContentAlignment="Center" 
                                                                   Value="{Binding ClosingCircle}"  ></misc:NumericUpDownWithKeyboard>



                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <CheckBox VerticalAlignment="Center"  HorizontalAlignment="Center" IsChecked="{Binding IsFill, Mode=TwoWay}" Template="{DynamicResource CheckBoxControlTemplateFlat}" />
                                            </Border>
                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <CheckBox VerticalAlignment="Center"  HorizontalAlignment="Center" IsChecked="{Binding Invert, Mode=TwoWay}" Template="{DynamicResource CheckBoxControlTemplateFlat}" />
                                            </Border>
                                        </UniformGrid>


                                    </StackPanel>
                                    <Rectangle Height="8"></Rectangle>
                                    <StackPanel >

                                        <Label Content="Size" FontWeight="SemiBold" VerticalAlignment="Top" Margin="2,0,0,2" HorizontalAlignment="Stretch" />

                                        <UniformGrid HorizontalAlignment="Stretch" Margin="4,2,0,0" Columns="2" Rows="2" VerticalAlignment="Stretch">
                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <Label Content="Min size"  Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>

                                            </Border>

                                            <Border BorderThickness="1" BorderBrush="#10ffffff">
                                                <Label Content="Max size" Margin="1,0"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           ></Label>
                                            </Border>
                                            <misc:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                   
                                                                   HorizontalContentAlignment="Center" 
                                                                   Value="{Binding MinArea}"  ></misc:NumericUpDownWithKeyboard>




                                            <misc:NumericUpDownWithKeyboard  HorizontalAlignment="Stretch" 
                                                                   
                                                                   HorizontalContentAlignment="Center" 
                                                                   Value="{Binding MaxArea}"  ></misc:NumericUpDownWithKeyboard>

                                        </UniformGrid>


                                    </StackPanel>

                                </StackPanel>


                                <StackPanel Orientation="Horizontal" Margin="0,5">

                                </StackPanel>

                                <Label Content="DISPLAY" FontWeight="SemiBold" />
                                <StackPanel Margin="5,2" x:Name="stack_display">

                                    <UniformGrid Columns="2">
                                        <Label Content="Region Color" VerticalAlignment="Bottom" />
                                        <dxe:PopupColorEdit Width="80" HorizontalContentAlignment="Right" DisplayMode="Color" Padding="4" Color="{Binding DisplayColor, Converter={StaticResource StringToColor}, Mode=TwoWay}" HorizontalAlignment="Right" />
                                    </UniformGrid>
                                    <UniformGrid Columns="2">
                                        <Label Content="Text Foreground" VerticalAlignment="Bottom" />
                                        <dxe:PopupColorEdit Width="80" HorizontalContentAlignment="Right" DisplayMode="Color" Padding="4" Color="{Binding TextForeground, Converter={StaticResource StringToColor}, Mode=TwoWay}" HorizontalAlignment="Right" />
                                    </UniformGrid>
                                    <UniformGrid Columns="2">
                                        <Label Content="Text Background" VerticalAlignment="Bottom" />
                                        <dxe:PopupColorEdit Width="80" HorizontalContentAlignment="Right" DisplayMode="Color" Padding="4" Color="{Binding TextBackground, Converter={StaticResource StringToColor}, Mode=TwoWay}" HorizontalAlignment="Right" />
                                    </UniformGrid>
                                    <UniformGrid Margin="0,2" Columns="2">
                                        <Label Content="Text position" VerticalAlignment="Bottom" />
                                        <ComboBox HorizontalAlignment="Right" Height="28" HorizontalContentAlignment="Right" Padding="8,4" Text="{Binding DisplayPosition}" MinWidth="80">
                                            <ComboBox.Items>
                                                <nodes:TextPosition>Bottom</nodes:TextPosition>
                                                <nodes:TextPosition>Top</nodes:TextPosition>
                                                <nodes:TextPosition>Left</nodes:TextPosition>
                                                <nodes:TextPosition>Right</nodes:TextPosition>
                                            </ComboBox.Items>
                                        </ComboBox>
                                    </UniformGrid>

                                    <Grid Margin="0,2">
                                        <CheckBox Content="Display blob name" x:Name="chk_blob_name" IsChecked="{Binding DisplayBlobName,Mode=TwoWay}" VerticalAlignment="Bottom" Template="{DynamicResource CheckBoxControlTemplateFlat}" />

                                        <misc:TextboxWithKeyboard Height="28" Margin="0" MinHeight="28" Visibility="{Binding IsChecked,ElementName=chk_blob_name,Converter={StaticResource BoolToVisibilityCollapse}}" Style="{DynamicResource TextboxwithkeyboardFlat}" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Text="{Binding BlobName}" MinWidth="80" />
                                    </Grid>
                                    <Grid Margin="0,2">
                                        <CheckBox Content="Display individual blobs" IsChecked="{Binding DisplayIndividual}" VerticalAlignment="Center" Template="{DynamicResource CheckBoxControlTemplateFlat}" />
                                    </Grid>
                                    <Grid Margin="0,2">
                                        <CheckBox Content="Display size" IsChecked="{Binding DisplayArea}" VerticalAlignment="Center" Template="{DynamicResource CheckBoxControlTemplateFlat}" />
                                    </Grid>

                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>

                    </dx:DXTabItem>
                    <dx:DXTabItem Header="Result">
                        <Grid Margin="2">
                            <ListView Margin="2" Name="lst_class" ItemsSource="{Binding BlobResults}" SelectedIndex="{Binding Current_Index}" BorderBrush="#FFC5C5C5">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <!--<Style TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>-->
                                <ListView.View>

                                    <GridView>
                                        <GridViewColumn Header="ID" DisplayMemberBinding="{Binding ID}" Width="50">
                                        </GridViewColumn>
                                        <GridViewColumn Header="Area" DisplayMemberBinding="{Binding Area}" Width="240">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>

                            </ListView>

                        </Grid>

                    </dx:DXTabItem>

                </dx:DXTabControl>

            </Grid>
        </Grid>
    </Grid>

</dx:ThemedWindow>
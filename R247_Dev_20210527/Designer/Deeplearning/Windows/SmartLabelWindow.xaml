<dx:ThemedWindow  xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
                  x:Class="NOVisionDesigner.Designer.Deeplearning.Windows.SmartLabelWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:local="clr-namespace:NOVisionDesigner.Designer.Deeplearning.Windows" xmlns:HalconDotNet="clr-namespace:HalconDotNet;assembly=halcondotnet"
                  FontSize="14"
                  mc:Ignorable="d"
                  ShowGlow="False"
                  
        Title="SmartLabelWindow" Height="450" Width="800">
    <dx:ThemedWindow.Resources>
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />

        <SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
        <SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />

        <SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
        <SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="false" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Focusable" Value="False" />

            <!-- The control template. -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">

                            <!-- The background of the button, as an ellipse. -->
                            <Ellipse x:Name="backgroundEllipse" />

                            <!-- A path that renders a cross. -->
                            <Path x:Name="ButtonPath"
                              Margin="3"
                              Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square"
                              StrokeEndLineCap="Square"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" Width="10" Height="10" Data="M0,0 L25,25 M0,25 L25,0"/>
                        </Grid>

                        <!-- The triggers. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonHoverBackgroundBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonHoverForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="backgroundEllipse" Property="Fill"
                                    Value="{DynamicResource TabItemCloseButtonPressedBackgroundBrush}" />
                                <Setter TargetName="backgroundEllipse" Property="Stroke"
                                    Value="{DynamicResource TabItemCloseButtonPressedBorderBrush}" />
                                <Setter TargetName="ButtonPath" Property="Stroke" 
                                    Value="{DynamicResource TabItemCloseButtonPressedForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="Transparent"/>

                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="#5FFEFEFE"></Setter>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand" BorderThickness="{TemplateBinding BorderThickness}"  >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="white"/>
                                        <Setter Property="Foreground" Value="Black"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>
        <Style  TargetType="{x:Type RadioButton}" x:Key="radioStyle1">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="Transparent"/>

                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="#5FFEFEFE"></Setter>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Cursor="Hand" BorderThickness="{TemplateBinding BorderThickness}"  >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource BlueIOS}"/>
                                        <Setter Property="Foreground" Value="Black"/>

                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>
    </dx:ThemedWindow.Resources>
    <Grid Margin="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>
        <dx:BackgroundPanel Margin="8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap">Click an object one or more time</TextBlock>
                    <UniformGrid Columns="2" Margin="8" Background="#10ffffff">
                        <RadioButton  
                                      IsChecked="{Binding IsAdding}"
                                     FontWeight="Bold" Padding="8,16"  
                                      VerticalContentAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                            <StackPanel Orientation="Vertical">

                                <TextBlock TextWrapping="Wrap">Add Area</TextBlock>
                                <Rectangle Height="8"></Rectangle>
                                <Viewbox HorizontalAlignment="Center" Width="20" Height="20"  VerticalAlignment="Center">
                                    <Path Fill="{DynamicResource BlueIOS}" Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"  />
                                </Viewbox>
                            </StackPanel>
                        </RadioButton>
                        <RadioButton  
                                      
                                     FontWeight="Bold" Padding="8,16"  
                                      VerticalContentAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch" BorderThickness="0,0,0,0"  >
                            <StackPanel Orientation="Vertical">

                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">Remove</TextBlock>
                                <Rectangle Height="8"></Rectangle>
                                <Viewbox HorizontalAlignment="Center" Width="20" Height="20"  VerticalAlignment="Center">
                                    <Path Fill="{DynamicResource RedIOS}" Data="M20 20V17H22V20C22 21.11 21.1 22 20 22H17V20H20M2 20V17H4V20H7V22H4C2.9 22 2 21.1 2 20M10 20H14V22H10V20M14.59 8L12 10.59L9.41 8L8 9.41L10.59 12L8 14.59L9.41 16L12 13.41L14.59 16L16 14.59L13.41 12L16 9.41L14.59 8M20 10H22V14H20V10M2 10H4V14H2V10M2 4C2 2.89 2.9 2 4 2H7V4H4V7H2V4M22 4V7H20V4H17V2H20C21.1 2 22 2.9 22 4M10 2H14V4H10V2Z"  />
                                </Viewbox>
                            </StackPanel>
                        </RadioButton>
                    </UniformGrid>
                    <Rectangle Height="8"></Rectangle>
                    <dx:SimpleButton Glyph="{dx:DXImage 'SvgImages/Dashboards/GridResetColumnWidths.svg'}"  
                                      Content="Reset" Padding="24,8" 
                                     GlyphAlignment="Bottom" 
                                     HorizontalAlignment="Center" Click="btn_reset_Click"></dx:SimpleButton>
                    <Rectangle Height="8"></Rectangle>
                    <GroupBox Header="Refine" Margin="8">
                        <WrapPanel>
                            <dx:SimpleButton Margin="4" Padding="12,4" Click="btn_curve_Click"  
                                             Glyph="{dx:DXImage 'SvgImages/Spreadsheet/CreateScatterChartSmoothLines.svg'}"
                                             GlyphAlignment="Bottom"
                                             HorizontalAlignment="Center" 
                                             Content="Smooth"></dx:SimpleButton>
                            <dx:SimpleButton Margin="4" 
                                             Glyph="{dx:DXImage 'SvgImages/Chart/ChartType_PolarLine.svg'}"
                                             GlyphAlignment="Bottom"
                                             Padding="12,4" Click="btn_polygon_Click" 
                                             HorizontalAlignment="Center"  Content="Polygon"></dx:SimpleButton>
                        </WrapPanel>
                        
                    </GroupBox>
                    <Rectangle Height="8"></Rectangle>
                    <UniformGrid Columns="2" Margin="8,4">
                        <dx:SimpleButton Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_Check.svg'}" 
                                      Content="Accept" Padding="16,8" 
                                        VerticalAlignment="Stretch"
                                     GlyphAlignment="Bottom" 
                                     HorizontalAlignment="Stretch" Click="btn_intant_accept_Click"></dx:SimpleButton>
                        <dx:SimpleButton Glyph="{dx:DXImage 'SvgImages/Icon Builder/Business_LinearChart.svg'}" 
                                      Content="Convert" Padding="16,8" 
                                        VerticalAlignment="Stretch"
                                     GlyphAlignment="Bottom" 
                                     HorizontalAlignment="Stretch" Click="btn_accept_Click"></dx:SimpleButton>
                        
                    </UniformGrid>
                </StackPanel>

                <Grid Grid.Row="1" Margin="0,16,0,0">
                    <Label Content="Region list" Margin="4,0,0,0"></Label>
                    <ListBox x:Name="lst_region" Margin="5,32,5,0" 
                         BorderThickness="1" MinHeight="200" 
                         BorderBrush="#20000000"  
                             SelectionChanged="lst_region_SelectionChanged" Padding="2">

                        <!--<ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">

                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>

                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="IsSelected"  Value="true">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>

                        </Style>

                    </ListBox.ItemContainerStyle>-->
                        <ListBox.Resources>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="true" CornerRadius="0"  BorderThickness="2" >
                                                <ContentPresenter 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive"
                                                            Value="False" />
                                                        <Condition Property="IsSelected"
                                                            Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush"
                                                        TargetName="Bd"
                                                        Value="#FF059ECB" />
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive"
                                                            Value="True" />
                                                        <Condition Property="IsSelected"
                                                            Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush"
                                                        TargetName="Bd"
                                                        Value="#FF059ECB" />
                                                </MultiTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Bd" Property="BorderBrush" Value="#FF64D7F9" />
                                                </Trigger>

                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="Transparent">
                                    <Grid Height="30">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <!--<ToggleButton Style="{DynamicResource MyToggleButtonStyle}" IsChecked="{Binding Minus}" Width="25" Height="25"/>-->
                                            <TextBlock Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>

                                        </StackPanel>
                                        <!--<Button x:Name="btn_remove_item" Content="X" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Rockwell" FontSize="12" Margin="0,0,4,0" Click="btn_remove_Click" Width="20" Height="20" Style="{DynamicResource ButtonStyleRemoveItem}"/>-->
                                        <Button x:Name="btn_remove_item" Margin="100,0,4,0" BorderThickness="0" 
                                                FontSize="12" VerticalAlignment="Center"  HorizontalAlignment="Right" 
                                                Click="btn_remove_Click" Style="{DynamicResource ButtonStyle1}" Width="20" Height="20">
                                            <Viewbox Width="15" Height="15">
                                                <Canvas Width="24" Height="24">
                                                    <Path Fill="Black" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </Button>
                                    </Grid>
                                </Border>


                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Grid>
        </dx:BackgroundPanel>
        <Rectangle Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Opacity="0.2" Fill="Black"></Rectangle>
        <Rectangle Height="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" Opacity="0.2" Fill="Black"></Rectangle>
        <Rectangle Width="1" HorizontalAlignment="Right" Opacity="0.2" Fill="Black"></Rectangle>
        <GridSplitter Width="1" Background="Transparent"></GridSplitter>
        <Grid Grid.Column="1">
            
            <HalconDotNet:HSmartWindowControlWPF x:Name="window_display"  
                                             HInitWindow="window_display_HInitWindow" 
                                                 BorderThickness="1,0,0,0"  />
            <dx:BackgroundPanel x:Name="panel_fit_region" Visibility="Hidden"  Height="42" VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="4" >
                    <TextBlock Text="Select region type to convert" FontWeight="SemiBold" VerticalAlignment="Center" Margin="16,0"></TextBlock>
                    <UniformGrid VerticalAlignment="Stretch" HorizontalAlignment="Left" Columns="4" Background="#20ffffff">
                        <RadioButton Checked="rad_curve_Checked" Style="{DynamicResource radioStyle1}" Width="50" HorizontalContentAlignment="Center" >
                            <Viewbox Width="25" Height="25">
                                <Canvas Width="24" Height="24" >
                                    <Path Fill="{DynamicResource WhiteBrush}" 
                                      Data="M18.5,2A1.5,1.5,0,0,1,20,3.5A1.5,1.5,0,0,1,18.5,5C18.27,5,18.05,4.95,17.85,4.85L14.16,8.55 14.5,9C16.69,7.74,19.26,7,22,7L23,7.03 23,9.04 22,9C19.42,9,17,9.75,15,11.04A3.96,3.96,0,0,1,11.04,15C9.75,17,9,19.42,9,22L9.04,23 7.03,23 7,22C7,19.26,7.74,16.69,9,14.5L8.55,14.16 4.85,17.85C4.95,18.05,5,18.27,5,18.5A1.5,1.5,0,0,1,3.5,20A1.5,1.5,0,0,1,2,18.5A1.5,1.5,0,0,1,3.5,17C3.73,17,3.95,17.05,4.15,17.15L7.84,13.45C7.31,12.78,7,11.92,7,11A4,4,0,0,1,11,7C11.92,7,12.78,7.31,13.45,7.84L17.15,4.15C17.05,3.95,17,3.73,17,3.5A1.5,1.5,0,0,1,18.5,2 M11,9A2,2,0,0,0,9,11A2,2,0,0,0,11,13A2,2,0,0,0,13,11A2,2,0,0,0,11,9z" >

                                    </Path>
                                </Canvas>
                            </Viewbox>
                        </RadioButton>
                        <RadioButton Checked="rad_poly_Checked" Style="{DynamicResource radioStyle1}" HorizontalContentAlignment="Center">
                            <Viewbox Width="25" Height="25">
                                <Canvas Width="24" Height="24" >
                                    <Path Fill="{DynamicResource WhiteBrush}" Data="M2,2V8H4.28L5.57,16H4V22H10V20.06L15,20.05V22H21V16H19.17L20,9H22V3H16V6.53L14.8,8H9.59L8,5.82V2M4,4H6V6H4M18,5H20V7H18M6.31,8H7.11L9,10.59V14H15V10.91L16.57,9H18L17.16,16H15V18.06H10V16H7.6M11,10H13V12H11M6,18H8V20H6M17,18H19V20H17" />
                                </Canvas>
                            </Viewbox>
                        </RadioButton>
                        <RadioButton Checked="rad_rec_Checked" Style="{DynamicResource radioStyle1}" HorizontalContentAlignment="Center">
                            <Viewbox Width="25" Height="25">
                                <Canvas Width="24" Height="24" >
                                    <Path Fill="{DynamicResource WhiteBrush}" Data="M19,6H22V8H19V11H17V8H14V6H17V3H19V6M17,17V14H19V19H3V6H11V8H5V17H17Z" />
                                </Canvas>
                            </Viewbox>
                        </RadioButton>
                        <RadioButton Checked="rad_rec2_Checked" Style="{DynamicResource radioStyle1}" HorizontalContentAlignment="Center">
                            <Viewbox Width="25" Height="25">
                                <Canvas Width="24" Height="24" >
                                    <Path Fill="{DynamicResource WhiteBrush}" Data="M19,6H22V8H19V11H17V8H14V6H17V3H19V6M17,17V14H19V19H3V6H11V8H5V17H17Z" RenderTransformOrigin="0.5,0.5" >
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="-45"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </Viewbox>
                        </RadioButton>
                    </UniformGrid>
                    <Rectangle Width="8"> </Rectangle>
                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Stretch" Orientation="Horizontal">
                        <dx:SimpleButton
                            HorizontalAlignment="Stretch"
                            
                            GlyphHeight="25"
                            Content="Accept region"
                            Glyph="{dx:DXImage 'SvgImages/Icon Builder/Actions_CheckCircled.svg'}" Click="btn_accept_region_Clicked"></dx:SimpleButton>
                        <Rectangle Width="8"></Rectangle>
                        <dx:SimpleButton
                            HorizontalAlignment="Stretch"
                            
                            GlyphHeight="25"
                            Content="Cancel Region"
                            Glyph="{dx:DXImage 'SvgImages/Outlook Inspired/Cancel.svg'}" Click="btn_cancel_region_Clicked"></dx:SimpleButton>
                        <Rectangle Width="4"></Rectangle>
                    </StackPanel>
                </StackPanel>
               
            </dx:BackgroundPanel>
            <Rectangle Height="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" Opacity="0.2" Fill="Black"></Rectangle>
        </Grid>
        
                                              
                                             
                                             
        <dx:WaitIndicator Grid.ColumnSpan="2" DeferedVisibility="{Binding IsLoading}" d:IsHidden="True">
            
        </dx:WaitIndicator>
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <UniformGrid Columns="2" Margin="8" HorizontalAlignment="Center">
                <Button x:Name="btn_accept" Click="btn_ok_Click" Content="OK" Margin="4" Padding="16,8"></Button>
                <Button x:Name="btn_cancel" Click="btn_cancel_Click" Content="Cancel" Margin="4" Padding="16,8"></Button>
            </UniformGrid>
        </Grid>
    </Grid>
</dx:ThemedWindow>

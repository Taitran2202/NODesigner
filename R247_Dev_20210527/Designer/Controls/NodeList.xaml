<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
            xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:Misc="clr-namespace:NOVisionDesigner.Designer.Misc" 
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    x:Class="NOVisionDesigner.Designer.Controls.NodeList"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Misc:InvertBoolToVisibilityCollapse x:Key="InvertBoolToVisibilityCollapse"/>
        <Misc:BoolToVisibilityCollapse x:Key="BoolToVisibilityCollapse"/>
        <Style TargetType="{x:Type dxe:TextEdit}">
            <Setter Property="BorderTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border x:Name="border"  
                        Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type dxe:TextEdit}}}"  
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type dxe:TextEdit}}}"  
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type dxe:TextEdit}}}" CornerRadius="5">
                            <ContentPresenter Margin="0,0,-1,0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="listTemplate">
            <Grid HorizontalAlignment="Stretch" Width="auto" Margin="0, 0, 0, 0" MouseMove="OnNodeMouseMove" >
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="{Binding ListEntryBackgroundBrush, ElementName=self}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{Binding ListEntryBackgroundMouseOverBrush, ElementName=self}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBlock Margin="0,5,5,5" ToolTip="{Binding DisplayName}" ><Run Text="{Binding DisplayName}"/></TextBlock>

            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="listItemsPanelTemplate">
            <StackPanel Margin="5,0,0,0" HorizontalAlignment="Stretch"/>
        </ItemsPanelTemplate>
        <ControlTemplate x:Key="listItemsControlTemplate">
            <ItemsPresenter HorizontalAlignment="Stretch"/>
        </ControlTemplate>
        <Style x:Key="ContainerStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel Orientation="Vertical" >
                            <Label Content="{Binding Name}" Padding="6,6" FontWeight="Bold" Foreground="#FF535353" Background="AliceBlue" FontSize="13"/>
                            <Rectangle Height="1" >
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FFFDFDFD" Offset="1"/>
                                        <GradientStop Color="#FF00AEFF"/>
                                        <GradientStop Color="#FFC0E5F5" Offset="0.321"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <dx:DXExpander IsExpanded="True"  >
                                <ItemsPresenter />
                            </dx:DXExpander>
                        </StackPanel>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ToggleButtonControlTemplate1" TargetType="{x:Type ToggleButton}">
            <dx:DXBorder x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" EnableDPICorrection="{x:Null}" SnapsToDevicePixels="True" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\VS2017Light\StandardControls\Button.xaml;7;6">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" dx:BlendHelper2.ThemeInfo="Core\Core\Themes\VS2017Light\StandardControls\Button.xaml;8;8" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </dx:DXBorder>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC9DEF5"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCEDB"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF007ACC"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCEDB"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF007ACC"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFCCCEDB"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF007ACC"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.38"/>
                </Trigger>
                <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                    <Setter Property="MinWidth" TargetName="border" Value="44"/>
                    <Setter Property="MinHeight" TargetName="border" Value="44"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid >
       
        <ToggleButton x:Name="toggleButton" Visibility="Hidden" IsChecked="True" HorizontalAlignment="Right" Padding="0" Background="Transparent"  BorderThickness="0" VerticalAlignment="Center" Margin="0,0,20,0" Template="{DynamicResource ToggleButtonControlTemplate1}">
            <Viewbox Width="24" Height="24">
                <Canvas Width="24" Height="24">
                    <Path  Data="M7,10L12,15L17,10H7Z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" />
                </Canvas>
            </Viewbox>
        </ToggleButton>
        
        <Grid Grid.Row="2" Margin="12,2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding IsChecked, Converter={StaticResource InvertBoolToVisibilityCollapse}, ElementName=toggleButton}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,0,0,0" >
                <Viewbox Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0">
                    <Canvas Width="24" Height="24">
                        <Path Fill="#FF6E6E6E" Data="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" />
                    </Canvas>
                </Viewbox>
                <dxe:TextEdit VerticalAlignment="Center" BorderThickness="1" x:Name="txtFilter" EditValueChanged="txtFilter_EditValueChanged"  BorderBrush="#CECECE" NullText="Search tools" Padding="26,0,0,0" FontSize="14" Height="30"/>
            </Grid>
            <Grid Grid.Row="1" Margin="0,5,0,0">
                <ScrollViewer VerticalScrollBarVisibility="Auto"  >
                    
                    <ListBox x:Name="list" IsTabStop="False"  ItemTemplate="{DynamicResource listTemplate}" ItemsPanel="{DynamicResource listItemsPanelTemplate}" Template="{DynamicResource listItemsControlTemplate}">
                        <ListBox.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource ContainerStyle}"/>
                        </ListBox.GroupStyle>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>

</UserControl>

<UserControl xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  x:Class="NOVisionDesigner.Designer.PropertiesViews.MeasurementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:misc1="clr-namespace:NOVisionDesigner.Designer.ValueConverters" xmlns:misc2="clr-namespace:NOVisionDesigner.Designer.Misc"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth ="600"  FontSize="14"  MinWidth="300" >
    <UserControl.Resources>
        
        <misc1:StringToColor x:Key="StringToColor"/>
        <SolidColorBrush x:Key="Object1" Color="#FF424242"/>
        <LinearGradientBrush x:Key="Brush1" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF288DD4"/>
            <GradientStop Color="#FF004472" Offset="1"/>
            <GradientStop Color="#FF0F69A7" Offset="0.929"/>
            <GradientStop Color="#FF0F69A7" Offset="0.105"/>
        </LinearGradientBrush>

        <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.RowSpan="2" Margin="{TemplateBinding Padding}" Grid.ColumnSpan="1"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="8"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="8"/>
            </Grid>
        </ControlTemplate>
        <misc1:ObjectBool x:Key="ObjectBool"/>
        <misc1:NullableBooleanConverter x:Key="NullableBooleanConverter"/>
        <LinearGradientBrush x:Key="ColorTabItemSelected" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFB900" Offset="0.55"/>
            <GradientStop Color="#FFEA8A00" Offset="1"/>
            <GradientStop Color="#FFF1D101" Offset="0.004"/>
        </LinearGradientBrush>
        <RadialGradientBrush x:Key="tabitemmouse_over" RadiusX="0.6" RadiusY="0.3" GradientOrigin="0.5,1" Center="0.5,1">
            <GradientStop Color="#00292929" Offset="1"/>
            <GradientStop Color="#FFE47200" Offset="0.171"/>
        </RadialGradientBrush>
        <LinearGradientBrush x:Key="brush_border" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFC500" Offset="0"/>
            <GradientStop Color="#FFDEAC01" Offset="1"/>
            <GradientStop Color="#FFE69F06" Offset="0.571"/>
        </LinearGradientBrush>
        <Style x:Key="TabItemStyleBlackOnWhiteMiddle" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="12,1,12,1"/>
            <Setter Property="Background" Value="#FF2F2F2F"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="Content" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" ContentSource="Header"/>
                            </Border>
                            <Grid x:Name="grid_mouse_over"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ColorTabItemSelected}"/>
                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                                <Setter Property="TextBlock.Foreground" Value="{StaticResource Object1}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="grid_mouse_over" Value="{StaticResource tabitemmouse_over}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="#FF939393"/>
            <Setter Property="Background" Value="#ff202020"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True" ClipToBounds="true">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" />
                                <RowDefinition x:Name="RowDefinition1" Height="289*" MinHeight="40"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <TabPanel x:Name="HeaderPanel" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Row="0" IsItemsHost="True" Grid.Column="0"/>
                            <Border x:Name="ContentPanel" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" ClipToBounds="True" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" ClipToBounds="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="tabpanel" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF515151" Offset="0.015"/>
            <GradientStop Color="#FF363636" Offset="0.942"/>
            <GradientStop Color="#FF423F3F" Offset="0.491"/>
        </LinearGradientBrush>
        <Style x:Key="TabControlStyle2" TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="#FF939393"/>
            <Setter Property="Background" Value="#ff202020"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True" ClipToBounds="true">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*" MinHeight="40"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <WrapPanel x:Name="HeaderPanel" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Row="0" IsItemsHost="True" Grid.Column="0" Background="{x:Null}"/>
                            <Border x:Name="ContentPanel" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" ClipToBounds="True" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" ClipToBounds="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="buttonstripe1" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Cursor="Hand">
                            <!--Text element-->
                            <Border Width="Auto" Height="Auto" CornerRadius="5" Background="White">
                                <Grid>

                                    <!-- To change the apearance to button stripe 2, edit the margins! -->
                                    <!--We don't need any bullet, cause our border is the switching element-->
                                    <Border x:Name="RadioMark" VerticalAlignment="Center" Margin="2,0" Height="15" CornerRadius="5">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF9C9C9C" Offset="0"/>
                                                <GradientStop Color="#FFB4B4B4" Offset="0.988"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </Border>
                        </BulletDecorator>
                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="RadioMark" Value="Gold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="buttonstripe2" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Cursor="Hand">
                            <!--Text element-->
                            <Border Width="Auto" Height="Auto" CornerRadius="5" Background="White">
                                <Grid>

                                    <!-- To change the apearance to button stripe 2, edit the margins! -->
                                    <!--We don't need any bullet, cause our border is the switching element-->
                                    <Border x:Name="RadioMark" Width="15" VerticalAlignment="Stretch" Margin="2,0" Height="Auto" HorizontalAlignment="Center" CornerRadius="5">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                <GradientStop Color="#FF878787"/>
                                                <GradientStop Color="#FF999999" Offset="1"/>
                                                <GradientStop Color="#FFB9ABAB" Offset="0.905"/>
                                                <GradientStop Color="#FFA8A7A7" Offset="0.115"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </Border>
                        </BulletDecorator>
                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="RadioMark" Value="Gold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleRoundConner" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF20ACEE"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>

            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource gradientbackground_pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StatusGroupExpander" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{DynamicResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!--<Image x:Name="icon" Source="closed.png"  Width="9"/>-->
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <!--<Setter Property="Source" TargetName="icon" Value="open.png"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Margin="0">


        <StackPanel VerticalAlignment="Top">
            <Border  Height="5" BorderBrush="#7FCFCFCF" BorderThickness="0,1" Margin="0,5"></Border>

            <Grid Margin="2,0,5,0">


                <TextBlock Text="Measurement List" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>


                <dx:SimpleButton Click="Button_Click" Height="30" ToolTip="Add new measure" VerticalAlignment="Top" HorizontalAlignment="Right"  Width="30" Padding="2" Margin="0,0,2,0" Glyph="{dx:DXImage Office2013/Actions/Add_32x32.png}"/>
            </Grid>



        </StackPanel>


        <ScrollViewer Margin="5,50,5,5" VerticalScrollBarVisibility="Auto">
            <ItemsControl x:Name="lst_measure"    FontFamily="Segoe UI Light" >
                
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="#20ffffff"  BorderThickness="1" Margin="2">
                            <Grid >
                                <StackPanel>
                                    <Grid Margin="5,0,0,0" >
                                        <dx:SimpleButton x:Name="btn_remove" Width="30" 
                                                         Height="25" HorizontalAlignment="Right" 
                                                         VerticalAlignment="Top" Click="Button_Click_1"
                                                         Padding="6,2" Glyph="{dx:DXImage SvgImages/Outlook Inspired/Delete.svg}" 
                                                         Margin="0,-1,10,0"  />
                                        <dx:SimpleButton x:Name="btn_edit_position" 
                                                         Glyph="{dx:DXImage SvgImages/XAF/ModelEditor_Group.svg}"  
                                                         HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" 
                                                         Height="25" Click="btn_edit_position_Click"  Margin="0,-1,40,0" 
                                                         Padding="6,2" BorderBrush="{x:Null}" Background="White">





                                        </dx:SimpleButton>

                                        <StackPanel Orientation="Horizontal" Margin="0,2,0,0">
                                            <CheckBox IsChecked="{Binding IsEnabled}"   Margin="5,5,0,5" HorizontalAlignment="Left"/>
                                            <misc2:TextboxWithKeyboard Text="{Binding MeasureName, FallbackValue=Measure1}" 
                                                                       IsEnabled="{Binding IsEditable, FallbackValue=IsEditable}" 
                                                                       HorizontalContentAlignment="Left" Height="26"   
                                                                       VerticalAlignment="Center" Margin="0,5" Grid.ColumnSpan="1" 
                                                                       FontWeight="Normal" TextOptions.TextHintingMode="Animated" 
                                                                       MinHeight="0" VerticalContentAlignment="Center" 
                                                                       Style="{DynamicResource TextboxwithkeyboardFlat}" 
                                                                       BorderBrush="Gainsboro" MinWidth="150" />
                                            <Border HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                                    CornerRadius="2" Margin="5,0,0,0" >
                                                <Label Content="Actual value" ContentStringFormat="00.00" 
                                                       Height="Auto" Width="Auto" HorizontalAlignment="Stretch" 
                                                       VerticalAlignment="Stretch" Padding="5,0" 
                                                       HorizontalContentAlignment="Center" 
                                                       VerticalContentAlignment="Center" FontWeight="Normal"/>
                                            </Border>
                                            <Border HorizontalAlignment="Stretch" VerticalAlignment="Center" CornerRadius="2" Margin="2,0,0,0" >
                                                <Label Content="{Binding ActualValue, FallbackValue=ActualValue}" 
                                                       ContentStringFormat="00.00" Height="Auto" Width="Auto" 
                                                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                       Padding="5,0" HorizontalContentAlignment="Center" 
                                                       VerticalContentAlignment="Center"/>
                                            </Border>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Margin="10,5,5,2" Height="55">

                                        <Label Content="Measurement Range" VerticalAlignment="Top" 
                                               Margin="2,4,0,2" HorizontalAlignment="Left" FontFamily="Segoe UI Light"/>
                                        <dxe:TrackBarEdit x:Name="slider_opacity" 
                                                          SelectionStart="{Binding LowerValue,Mode=TwoWay}" 
                                                          SelectionEnd="{Binding UpperValue,Mode=TwoWay}"  
                                                          Margin="2,0,2,2" Minimum="0" Maximum="1000" 
                                                          VerticalAlignment="Bottom" TickPlacement="None"  >

                                            <dxe:TrackBarEdit.StyleSettings>
                                                <dxe:TrackBarRangeStyleSettings />
                                            </dxe:TrackBarEdit.StyleSettings>
                                        </dxe:TrackBarEdit>
                                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                                            <dxe:SpinEdit Value="{Binding SelectionStart, ElementName=slider_opacity, Mode=TwoWay}" 
                                                          MinValue="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                                          MinWidth="50" MaxValue="1000" Increment="1" Width="Auto" DisplayFormatString="#.00"  />

                                            <dxe:SpinEdit Value="{Binding SelectionEnd, ElementName=slider_opacity, Mode=TwoWay}" 
                                                          MinValue="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="50" MaxValue="1000" Width="Auto" DisplayFormatString="#.00" Margin="5,0,2,0"  />

                                        </StackPanel>

                                    </Grid>

                                    <StackPanel Orientation="Horizontal" Margin="10,10,5,8" VerticalAlignment="Center">


                                        <dxe:PopupColorEdit x:Name="color_selected"  
                                                            Color="{Binding Color, Converter={StaticResource StringToColor},Mode=TwoWay}" BorderBrush="WhiteSmoke" />


                                        <CheckBox x:Name="chk_tag" IsChecked="{Binding EnableTag}" 
                                                  Content="Enable tag" VerticalAlignment="Center" Margin="20,0,0,0"/>
                                        <dxe:AutoSuggestEdit x:Name="tag_edit" EditValue="{Binding Tag}"   
                                                             IsEnabled="{Binding IsChecked, ElementName=chk_tag}" 
                                                             DisplayMember="TagName" TextMember="TagName" PopupOpening="Tag_edit_PopupOpening" Margin="10,0,0,0" MinWidth="80"    />
                                        <CheckBox x:Name="chk_io" IsChecked="{Binding EnabledOutput}" Content="Output" 
                                                  VerticalAlignment="Center" Margin="20,0,0,0"/>
                                        <dxe:SpinEdit IsEnabled="{Binding IsChecked,ElementName=chk_io}" 
                                                      Value="{Binding Output,Mode=TwoWay}" MinWidth="50" 
                                                      MinHeight="24" IsFloatValue="False" MinValue="0" MaxValue="8" 
                                                      VerticalAlignment="Center" Margin="5,0,0,0"/>

                                    </StackPanel>

                                </StackPanel>
                            </Grid>

                        </Border>




                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

        </ScrollViewer>










    </Grid>
</UserControl>


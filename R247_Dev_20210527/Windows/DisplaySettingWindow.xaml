<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NOVisionDesigner.Windows.HelperWindows" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:misc="clr-namespace:NOVisionDesigner.Designer.Misc" xmlns:designer="clr-namespace:NOVisionDesigner.Designer" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" x:Class="NOVisionDesigner.Windows.HelperWindows.DisplaySettingWindow"
        mc:Ignorable="d"
        Title="TagManagerWindow"  WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip"  WindowState="Normal" WindowStyle="None"
         Height="600" Width="500" AllowsTransparency="True" FontSize="14"   Topmost="False">
    <Window.Resources>
        <misc:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
        <Style  TargetType="{x:Type RadioButton}">
            <Style.BasedOn>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Background"  Value="Transparent"/>


                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                    <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="BorderThickness" Value="2"></Setter>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>

                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked"/>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border  x:Name="border" Background="{TemplateBinding Background}" 
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             Cursor="Hand"   >
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}"  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#10000000"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BlueIOS}"/>
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True"/>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Style.BasedOn>
        </Style>
    </Window.Resources>
    <dx:BackgroundPanel BorderBrush="LightGray" >

        <Grid>
            <Border Background="Transparent" Padding="0" MouseDown="Border_MouseDown" Height="32" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Grid >
                    <TextBlock VerticalAlignment="Top" Margin="16,8,16,0" HorizontalAlignment="Left" 
                               FontWeight="Bold" FontSize="14"  Text="DISPLAY"/>
                    <Button x:Name="btn_expander" Click="btn_expander_Click" Cursor="Hand" 
                             VerticalAlignment="Top" HorizontalAlignment="Right"  
                            BorderBrush="{x:Null}" BorderThickness="0" Padding="0" Height="32" Width="32" Margin="0,0,1,0"  >
                        <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Width="10" Height="10" />
                    </Button>
                </Grid>
            </Border>

            <Border Padding="16" Margin="0,16,0,0">
                <StackPanel>
                    <UniformGrid Columns="2" Margin="0,5">
                        <Label Content="Show bad image"/>
                        <CheckBox IsChecked="{Binding ShowLastFail}" Template="{DynamicResource CheckBoxControlTemplateXboxSetting}"  HorizontalAlignment="Stretch"/>
                    </UniformGrid>
                    <UniformGrid Columns="2" Margin="0,5">
                        <Label Content="Image layout"/>
                        <!--<dxe:ComboBoxEdit HorizontalAlignment="Right" SelectedItem="{Binding Layout}" IsTextEditable="False">
                            <designer:DisplayLayout>Vertical</designer:DisplayLayout>
                            <designer:DisplayLayout>Horizontal</designer:DisplayLayout>
                        </dxe:ComboBoxEdit>-->
                    </UniformGrid>
                    <UniformGrid Columns="2" Margin="0,5">
                        <RadioButton BorderThickness="4" IsChecked="{Binding Layout, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Horizontal}"
                                     BorderBrush="#10000000"
                                     Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <StackPanel>
                                <Viewbox Width="100" Height="100" >
                                    <Canvas Width="24" Height="24">
                                        <Path Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}} }" 
                                              Data="M16,5V18H21V5M4,18H9V5H4M10,18H15V5H10V18Z" />
                                    </Canvas>
                                </Viewbox>
                                <Label Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}} }" 
                                       Content="Horizontal" HorizontalAlignment="Center"></Label>
                            </StackPanel>
                            

                        </RadioButton>
                        <RadioButton BorderThickness="4" IsChecked="{Binding Layout, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Vertical}"
                                     BorderBrush="#10000000"
                                     HorizontalContentAlignment="Center" Padding="0" VerticalContentAlignment="Center">
                            <StackPanel>
                                <Viewbox Width="100" Height="100"  >
                                    <Viewbox.LayoutTransform>
                                        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="90">

                                        </RotateTransform>
                                    </Viewbox.LayoutTransform>
                                    <Canvas Width="24" Height="24">
                                        <Path Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}} }" Data="M16,5V18H21V5M4,18H9V5H4M10,18H15V5H10V18Z" />
                                    </Canvas>
                                </Viewbox>
                                <Label Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}} }" Content="Vertical" HorizontalAlignment="Center"></Label>
                            </StackPanel>
                            


                        </RadioButton>
                    </UniformGrid>
                    <Label Content="HMI" FontWeight="Bold" Margin="0,8,0,0"></Label>
                    <StackPanel x:Name="stack_menu_setting">
                        <UniformGrid Columns="2" Margin="2,4">
                            <Label Content="Fontsize"/>
                            <misc:NumericUpDownWithKeyboard HorizontalAlignment="Right" Value="{Binding FontSize,Mode=TwoWay}" Interval="1" Minimum="1" Maximum="50"  >
                            </misc:NumericUpDownWithKeyboard>
                        </UniformGrid>
                        <UniformGrid Columns="2" Margin="2,4">
                            <Label Content="Opacity"/>
                            <misc:NumericUpDownWithKeyboard HorizontalAlignment="Right" Value="{Binding MenuOpacity,Mode=TwoWay}" Minimum="0.2" Maximum="1" Interval="0.1" >
                            </misc:NumericUpDownWithKeyboard>
                        </UniformGrid>
                        
                    </StackPanel>
                    
                </StackPanel>
            </Border>
            <Button x:Name="btn_save_setting" Cursor="Hand" Content="Save"  
                    Padding="16,8" FontWeight="SemiBold" ToolTip="Login" Visibility="Visible"   
                    FontSize="14" Margin="2,2,2,12" VerticalAlignment="Bottom" HorizontalAlignment="Center"   />

        </Grid>
    </dx:BackgroundPanel>
</Window>
